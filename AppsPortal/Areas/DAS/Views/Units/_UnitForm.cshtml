
@model UnitUpdateModel
@using (Html.BeginForm("Unit", "Configuration", new { Area = "DAS" }, FormMethod.Post, new { id = "ConfigurationForm", @class = "main-form", enctype = "multipart/form-data" }))
{
    <h3>Unit</h3>
    @Html.AntiForgeryToken()

    @Html.FormHiddenFields(model => model.DestinationUnitGUID)
    <div class="row">

        <div class="col-lg-5 col-md-5 col-sm-8 col-xs-12">
            <div class="form-group">
                @Html.LabelFor(model => model.DestinationUnitName)
                @Html.EditorFor(model => model.DestinationUnitName, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SiteOwnerGUID)
                @Html.DropDownListFor(model => model.SiteOwnerGUID, new DropDownList().DASproGresSites(), "", new { style = "width:100%", @class = "form-control select2-basic-search" })
            </div>

            <div id="DASConfigurationFormControls" class="form-group form-footer">
                @if (Model.DestinationUnitGUID == Guid.Empty)
                {
                    @Html.CreateButton(Permissions.DASConfiguration.Create, Apps.DAS)
                }
                else
                {
                    if (Model.Active)
                    {

                        @Html.UpdateButton(Permissions.DASConfiguration.Update, Apps.DAS)
                        @Html.CreateNewButton(Permissions.DASConfiguration.Create, Apps.DAS, Url.Action("/Create", new { Area = "DAS" }))
                        @Html.DeleteButton(Permissions.DASConfiguration.Delete, Apps.DAS)
                    }
                    else
                    {
                        @Html.RestoreButton(Permissions.DASConfiguration.Restore, Apps.DAS)
                    }
                }
                @Html.BackToList(Url.Action("UnitHome", "Configuration", new { Area = "DAS" }))
            </div>
        </div>
    </div>
}
