//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppsPortal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CMSEntities : DbContext
    {
        public CMSEntities()
            : base("name=CMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<dataApplicationAccessAudit> dataApplicationAccessAudit { get; set; }
        public virtual DbSet<dataAuditActions> dataAuditActions { get; set; }
        public virtual DbSet<dataAuditFields> dataAuditFields { get; set; }
        public virtual DbSet<dataAuditLogins> dataAuditLogins { get; set; }
        public virtual DbSet<dataAuditPermissions> dataAuditPermissions { get; set; }
        public virtual DbSet<dataStaffBankAccount> dataStaffBankAccount { get; set; }
        public virtual DbSet<dataStaffCoreDocument> dataStaffCoreDocument { get; set; }
        public virtual DbSet<dataStaffCorePassport> dataStaffCorePassport { get; set; }
        public virtual DbSet<StaffCoreDataBank> StaffCoreDataBank { get; set; }
        public virtual DbSet<StaffCoreDataHistory> StaffCoreDataHistory { get; set; }
        public virtual DbSet<StaffCoreFieldConfig> StaffCoreFieldConfig { get; set; }
        public virtual DbSet<sysDataTablesProperties> sysDataTablesProperties { get; set; }
        public virtual DbSet<userApplicationToken> userApplicationToken { get; set; }
        public virtual DbSet<userConnections> userConnections { get; set; }
        public virtual DbSet<userContactDetails> userContactDetails { get; set; }
        public virtual DbSet<userHomeAddress> userHomeAddress { get; set; }
        public virtual DbSet<userHomeAddressLanguage> userHomeAddressLanguage { get; set; }
        public virtual DbSet<userManagersHistory> userManagersHistory { get; set; }
        public virtual DbSet<userMenuShortcut> userMenuShortcut { get; set; }
        public virtual DbSet<userNotificationControls> userNotificationControls { get; set; }
        public virtual DbSet<userNotificationLogs> userNotificationLogs { get; set; }
        public virtual DbSet<userPasswords> userPasswords { get; set; }
        public virtual DbSet<userPermissions> userPermissions { get; set; }
        public virtual DbSet<userPersonalDetails> userPersonalDetails { get; set; }
        public virtual DbSet<userPersonalDetailsLanguage> userPersonalDetailsLanguage { get; set; }
        public virtual DbSet<userProfiles> userProfiles { get; set; }
        public virtual DbSet<userRegistrationQueue> userRegistrationQueue { get; set; }
        public virtual DbSet<userServiceHistory> userServiceHistory { get; set; }
        public virtual DbSet<userStepsHistory> userStepsHistory { get; set; }
        public virtual DbSet<userWorkAddress> userWorkAddress { get; set; }
        public virtual DbSet<userWorkAddressLanguage> userWorkAddressLanguage { get; set; }
        public virtual DbSet<codeActions> codeActions { get; set; }
        public virtual DbSet<codeActionsCategories> codeActionsCategories { get; set; }
        public virtual DbSet<codeActionsCategoriesFactors> codeActionsCategoriesFactors { get; set; }
        public virtual DbSet<codeActionsCategoriesLanguages> codeActionsCategoriesLanguages { get; set; }
        public virtual DbSet<codeActionsEntities> codeActionsEntities { get; set; }
        public virtual DbSet<codeActionsEntitiesLanguages> codeActionsEntitiesLanguages { get; set; }
        public virtual DbSet<codeActionsLanguages> codeActionsLanguages { get; set; }
        public virtual DbSet<codeActionsVerbs> codeActionsVerbs { get; set; }
        public virtual DbSet<codeActionsVerbsLanguages> codeActionsVerbsLanguages { get; set; }
        public virtual DbSet<codeAHDEntitlementTypePerDutyStation> codeAHDEntitlementTypePerDutyStation { get; set; }
        public virtual DbSet<codeAHDInternationalStaffAttendanceType> codeAHDInternationalStaffAttendanceType { get; set; }
        public virtual DbSet<codeAHDLocationNoRAndRTicket> codeAHDLocationNoRAndRTicket { get; set; }
        public virtual DbSet<codeAHDPhoneHolderType> codeAHDPhoneHolderType { get; set; }
        public virtual DbSet<codeApplications> codeApplications { get; set; }
        public virtual DbSet<codeApplicationsLanguages> codeApplicationsLanguages { get; set; }
        public virtual DbSet<codeAppointmentType> codeAppointmentType { get; set; }
        public virtual DbSet<codeAppointmentTypeLanguage> codeAppointmentTypeLanguage { get; set; }
        public virtual DbSet<codeBank> codeBank { get; set; }
        public virtual DbSet<codeBankLanguage> codeBankLanguage { get; set; }
        public virtual DbSet<codeBrand> codeBrand { get; set; }
        public virtual DbSet<codeBrandLanguage> codeBrandLanguage { get; set; }
        public virtual DbSet<codeCallCost> codeCallCost { get; set; }
        public virtual DbSet<codeCardIssueReason> codeCardIssueReason { get; set; }
        public virtual DbSet<codeConditionType> codeConditionType { get; set; }
        public virtual DbSet<codeConditionTypeLanguage> codeConditionTypeLanguage { get; set; }
        public virtual DbSet<codeConnections> codeConnections { get; set; }
        public virtual DbSet<codeCountries> codeCountries { get; set; }
        public virtual DbSet<codeCountriesConfigurations> codeCountriesConfigurations { get; set; }
        public virtual DbSet<codeCountriesLanguages> codeCountriesLanguages { get; set; }
        public virtual DbSet<codeCovIndicator> codeCovIndicator { get; set; }
        public virtual DbSet<codeCovIndicatorTechnicalUnit> codeCovIndicatorTechnicalUnit { get; set; }
        public virtual DbSet<codeCovIndicatorTechnicalUnitMap> codeCovIndicatorTechnicalUnitMap { get; set; }
        public virtual DbSet<codeCovObjective> codeCovObjective { get; set; }
        public virtual DbSet<codeCovOutput> codeCovOutput { get; set; }
        public virtual DbSet<codeCovUnit> codeCovUnit { get; set; }
        public virtual DbSet<codeDASDestinationUnitFocalPoint> codeDASDestinationUnitFocalPoint { get; set; }
        public virtual DbSet<codeDASDocumentCabinet> codeDASDocumentCabinet { get; set; }
        public virtual DbSet<codeDASDocumentCabinetShelf> codeDASDocumentCabinetShelf { get; set; }
        public virtual DbSet<codeDASDocumentMetaData> codeDASDocumentMetaData { get; set; }
        public virtual DbSet<codeDASDocumentSourceType> codeDASDocumentSourceType { get; set; }
        public virtual DbSet<codeDASTransferLocation> codeDASTransferLocation { get; set; }
        public virtual DbSet<codeDepartmentsConfigurations> codeDepartmentsConfigurations { get; set; }
        public virtual DbSet<codeDepartmentsLanguages> codeDepartmentsLanguages { get; set; }
        public virtual DbSet<codeDutyStations> codeDutyStations { get; set; }
        public virtual DbSet<codeDutyStationsConfigurations> codeDutyStationsConfigurations { get; set; }
        public virtual DbSet<codeDutyStationsLanguages> codeDutyStationsLanguages { get; set; }
        public virtual DbSet<codeElectionCorrespondenceType> codeElectionCorrespondenceType { get; set; }
        public virtual DbSet<codeElectionCorrespondenceTypeLanguage> codeElectionCorrespondenceTypeLanguage { get; set; }
        public virtual DbSet<codeFactors> codeFactors { get; set; }
        public virtual DbSet<codeFactorsLanguages> codeFactorsLanguages { get; set; }
        public virtual DbSet<codeHighlightKeywords> codeHighlightKeywords { get; set; }
        public virtual DbSet<codeIMSHumanitarianNeed> codeIMSHumanitarianNeed { get; set; }
        public virtual DbSet<codeIMSHumanitarianNeedLanguage> codeIMSHumanitarianNeedLanguage { get; set; }
        public virtual DbSet<codeIMSMissionChallenge> codeIMSMissionChallenge { get; set; }
        public virtual DbSet<codeIMSMissionChallengeLanguage> codeIMSMissionChallengeLanguage { get; set; }
        public virtual DbSet<codeIMSOngoingResponse> codeIMSOngoingResponse { get; set; }
        public virtual DbSet<codeIMSOngoingResponseLanguage> codeIMSOngoingResponseLanguage { get; set; }
        public virtual DbSet<codeIMSVisitObjective> codeIMSVisitObjective { get; set; }
        public virtual DbSet<codeIMSVisitObjectiveCategory> codeIMSVisitObjectiveCategory { get; set; }
        public virtual DbSet<codeIMSVisitObjectiveCategoryLanguage> codeIMSVisitObjectiveCategoryLanguage { get; set; }
        public virtual DbSet<codeIMSVisitObjectiveLanguage> codeIMSVisitObjectiveLanguage { get; set; }
        public virtual DbSet<codeIntervalType> codeIntervalType { get; set; }
        public virtual DbSet<codeIntervalTypeLanguage> codeIntervalTypeLanguage { get; set; }
        public virtual DbSet<codeISSItem> codeISSItem { get; set; }
        public virtual DbSet<codeISSItemLanguage> codeISSItemLanguage { get; set; }
        public virtual DbSet<codeISSStock> codeISSStock { get; set; }
        public virtual DbSet<codeISSStockLanguage> codeISSStockLanguage { get; set; }
        public virtual DbSet<codeItemModelWarehouse> codeItemModelWarehouse { get; set; }
        public virtual DbSet<codeJobTitles> codeJobTitles { get; set; }
        public virtual DbSet<codeJobTitlesLanguages> codeJobTitlesLanguages { get; set; }
        public virtual DbSet<codeLanguages> codeLanguages { get; set; }
        public virtual DbSet<codeLocations> codeLocations { get; set; }
        public virtual DbSet<codeLocationsLanguages> codeLocationsLanguages { get; set; }
        public virtual DbSet<codeMedicalGenericName> codeMedicalGenericName { get; set; }
        public virtual DbSet<codeMedicalGenericNameLanguage> codeMedicalGenericNameLanguage { get; set; }
        public virtual DbSet<codeMedicalItem> codeMedicalItem { get; set; }
        public virtual DbSet<codeMedicalManufacturer> codeMedicalManufacturer { get; set; }
        public virtual DbSet<codeMedicalManufacturerLanguage> codeMedicalManufacturerLanguage { get; set; }
        public virtual DbSet<codeMedicalPharmacy> codeMedicalPharmacy { get; set; }
        public virtual DbSet<codeMedicalPharmacyLanguage> codeMedicalPharmacyLanguage { get; set; }
        public virtual DbSet<codeMenus> codeMenus { get; set; }
        public virtual DbSet<codeMenusLanguages> codeMenusLanguages { get; set; }
        public virtual DbSet<codeMissionOfficeSource> codeMissionOfficeSource { get; set; }
        public virtual DbSet<codeMissionOfficeSourceLanguage> codeMissionOfficeSourceLanguage { get; set; }
        public virtual DbSet<codeNotificationLanguages> codeNotificationLanguages { get; set; }
        public virtual DbSet<codeNotifications> codeNotifications { get; set; }
        public virtual DbSet<codeOfficeFloor> codeOfficeFloor { get; set; }
        public virtual DbSet<codeOfficeFloorRoom> codeOfficeFloorRoom { get; set; }
        public virtual DbSet<codeOfficeHPDevice> codeOfficeHPDevice { get; set; }
        public virtual DbSet<codeOffices> codeOffices { get; set; }
        public virtual DbSet<codeOfficesConfigurations> codeOfficesConfigurations { get; set; }
        public virtual DbSet<codeOfficesLanguages> codeOfficesLanguages { get; set; }
        public virtual DbSet<codeOID> codeOID { get; set; }
        public virtual DbSet<codeOperations> codeOperations { get; set; }
        public virtual DbSet<codeOperationsLanguages> codeOperationsLanguages { get; set; }
        public virtual DbSet<codeOrganizationHoliday> codeOrganizationHoliday { get; set; }
        public virtual DbSet<codeOrganizations> codeOrganizations { get; set; }
        public virtual DbSet<codeOrganizationsInstances> codeOrganizationsInstances { get; set; }
        public virtual DbSet<codeOrganizationsInstancesLanguages> codeOrganizationsInstancesLanguages { get; set; }
        public virtual DbSet<codeOrganizationsLanguages> codeOrganizationsLanguages { get; set; }
        public virtual DbSet<codePartnerCenter> codePartnerCenter { get; set; }
        public virtual DbSet<codePartnerCenterLanguage> codePartnerCenterLanguage { get; set; }
        public virtual DbSet<codeReferralStatus> codeReferralStatus { get; set; }
        public virtual DbSet<codeReferralStatusLanguage> codeReferralStatusLanguage { get; set; }
        public virtual DbSet<codeShuttleTravelPurpose> codeShuttleTravelPurpose { get; set; }
        public virtual DbSet<codeShuttleTravelPurposeLanguage> codeShuttleTravelPurposeLanguage { get; set; }
        public virtual DbSet<codeSipAnalyticalValue> codeSipAnalyticalValue { get; set; }
        public virtual DbSet<codeSipAnalyticalValueLanguages> codeSipAnalyticalValueLanguages { get; set; }
        public virtual DbSet<codeSipDeskReviewNeuralNetwork> codeSipDeskReviewNeuralNetwork { get; set; }
        public virtual DbSet<codeSipFocalPoint> codeSipFocalPoint { get; set; }
        public virtual DbSet<codeSipFocalPointLanguages> codeSipFocalPointLanguages { get; set; }
        public virtual DbSet<codeSipIndicator> codeSipIndicator { get; set; }
        public virtual DbSet<codeSipIndicatorFocalPoint> codeSipIndicatorFocalPoint { get; set; }
        public virtual DbSet<codeSipIndicatorLanguages> codeSipIndicatorLanguages { get; set; }
        public virtual DbSet<codeSipIndicatorSector> codeSipIndicatorSector { get; set; }
        public virtual DbSet<codeSipIndicatorSource> codeSipIndicatorSource { get; set; }
        public virtual DbSet<codeSipIndicatorTheme> codeSipIndicatorTheme { get; set; }
        public virtual DbSet<codeSipIndicatorUpdateFrequency> codeSipIndicatorUpdateFrequency { get; set; }
        public virtual DbSet<codeSipLocation> codeSipLocation { get; set; }
        public virtual DbSet<codeSipMetricType> codeSipMetricType { get; set; }
        public virtual DbSet<codeSipPopulationGroup> codeSipPopulationGroup { get; set; }
        public virtual DbSet<codeSipPopulationGroupLanguages> codeSipPopulationGroupLanguages { get; set; }
        public virtual DbSet<codeSipSector> codeSipSector { get; set; }
        public virtual DbSet<codeSipSectorLanguages> codeSipSectorLanguages { get; set; }
        public virtual DbSet<codeSipSource> codeSipSource { get; set; }
        public virtual DbSet<codeSipSourceLanguages> codeSipSourceLanguages { get; set; }
        public virtual DbSet<codeSipTag> codeSipTag { get; set; }
        public virtual DbSet<codeSipTheme> codeSipTheme { get; set; }
        public virtual DbSet<codeSipThemeLanguages> codeSipThemeLanguages { get; set; }
        public virtual DbSet<codeSipUpdateFrequency> codeSipUpdateFrequency { get; set; }
        public virtual DbSet<codeSipUpdateFrequencyLanguages> codeSipUpdateFrequencyLanguages { get; set; }
        public virtual DbSet<codeSitemaps> codeSitemaps { get; set; }
        public virtual DbSet<codeSitemapsLanguages> codeSitemapsLanguages { get; set; }
        public virtual DbSet<codeStaffShiftsGroup> codeStaffShiftsGroup { get; set; }
        public virtual DbSet<codeTables> codeTables { get; set; }
        public virtual DbSet<codeTablesValues> codeTablesValues { get; set; }
        public virtual DbSet<codeTablesValuesConfigurations> codeTablesValuesConfigurations { get; set; }
        public virtual DbSet<codeTablesValuesLanguages> codeTablesValuesLanguages { get; set; }
        public virtual DbSet<codeTelecomCompany> codeTelecomCompany { get; set; }
        public virtual DbSet<codeTelecomCompanyLanguages> codeTelecomCompanyLanguages { get; set; }
        public virtual DbSet<codeTelecomCompanyOperation> codeTelecomCompanyOperation { get; set; }
        public virtual DbSet<codeWarehouse> codeWarehouse { get; set; }
        public virtual DbSet<codeWarehouseFocalPoint> codeWarehouseFocalPoint { get; set; }
        public virtual DbSet<codeWarehouseGeneralFeature> codeWarehouseGeneralFeature { get; set; }
        public virtual DbSet<codeWarehouseGeneralFeatureLanguage> codeWarehouseGeneralFeatureLanguage { get; set; }
        public virtual DbSet<codeWarehouseItem> codeWarehouseItem { get; set; }
        public virtual DbSet<codeWarehouseItemClassification> codeWarehouseItemClassification { get; set; }
        public virtual DbSet<codeWarehouseItemClassificationLanguage> codeWarehouseItemClassificationLanguage { get; set; }
        public virtual DbSet<codeWarehouseItemDeterminant> codeWarehouseItemDeterminant { get; set; }
        public virtual DbSet<codeWarehouseItemFeatur> codeWarehouseItemFeatur { get; set; }
        public virtual DbSet<codeWarehouseItemLanguage> codeWarehouseItemLanguage { get; set; }
        public virtual DbSet<codeWarehouseItemModel> codeWarehouseItemModel { get; set; }
        public virtual DbSet<codeWarehouseItemModelDeterminant> codeWarehouseItemModelDeterminant { get; set; }
        public virtual DbSet<codeWarehouseItemModelFeature> codeWarehouseItemModelFeature { get; set; }
        public virtual DbSet<codeWarehouseItemModelLanguage> codeWarehouseItemModelLanguage { get; set; }
        public virtual DbSet<codeWarehouseItemPackingType> codeWarehouseItemPackingType { get; set; }
        public virtual DbSet<codeWarehouseLanguage> codeWarehouseLanguage { get; set; }
        public virtual DbSet<codeWarehouseLocationLanguage> codeWarehouseLocationLanguage { get; set; }
        public virtual DbSet<codeWarehouseRequesterType> codeWarehouseRequesterType { get; set; }
        public virtual DbSet<codeWarehouseRequesterTypeLanguage> codeWarehouseRequesterTypeLanguage { get; set; }
        public virtual DbSet<codeWarehouseStore> codeWarehouseStore { get; set; }
        public virtual DbSet<codeWarehouseStoreLanguage> codeWarehouseStoreLanguage { get; set; }
        public virtual DbSet<codeWarehouseSubLocation> codeWarehouseSubLocation { get; set; }
        public virtual DbSet<codeWarehouseSubLocationLanguage> codeWarehouseSubLocationLanguage { get; set; }
        public virtual DbSet<codeWarehouseType> codeWarehouseType { get; set; }
        public virtual DbSet<codeWarehouseTypeLanguage> codeWarehouseTypeLanguage { get; set; }
        public virtual DbSet<codeWarehouseVehicle> codeWarehouseVehicle { get; set; }
        public virtual DbSet<codeWarehouseVehicleLanguage> codeWarehouseVehicleLanguage { get; set; }
        public virtual DbSet<codeWorkingDaysConfigurations> codeWorkingDaysConfigurations { get; set; }
        public virtual DbSet<configFocalPoint> configFocalPoint { get; set; }
        public virtual DbSet<configFocalPointStaff> configFocalPointStaff { get; set; }
        public virtual DbSet<configTelecomCompanyOperation> configTelecomCompanyOperation { get; set; }
        public virtual DbSet<configVehical> configVehical { get; set; }
        public virtual DbSet<codeOchaLocation> codeOchaLocation { get; set; }
        public virtual DbSet<v_staffBasicBioData> v_staffBasicBioData { get; set; }
        public virtual DbSet<v_StaffCurrentContact> v_StaffCurrentContact { get; set; }
        public virtual DbSet<dataMedicalBeneficiary> dataMedicalBeneficiary { get; set; }
        public virtual DbSet<dataMedicalItemInput> dataMedicalItemInput { get; set; }
        public virtual DbSet<dataMedicalItemInputDetail> dataMedicalItemInputDetail { get; set; }
        public virtual DbSet<dataMissionReportForm> dataMissionReportForm { get; set; }
        public virtual DbSet<dataFileReport> dataFileReport { get; set; }
        public virtual DbSet<dataPartnerReport> dataPartnerReport { get; set; }
        public virtual DbSet<dataPartnerReportCompiled> dataPartnerReportCompiled { get; set; }
        public virtual DbSet<dataPartnerReportDetail> dataPartnerReportDetail { get; set; }
        public virtual DbSet<PPAOriginalFile> PPAOriginalFile { get; set; }
        public virtual DbSet<dataReportTemplate> dataReportTemplate { get; set; }
        public virtual DbSet<dataMedicalItemTransfer> dataMedicalItemTransfer { get; set; }
        public virtual DbSet<dataMedicalItemTransferDetail> dataMedicalItemTransferDetail { get; set; }
        public virtual DbSet<dataWarehosueReport> dataWarehosueReport { get; set; }
        public virtual DbSet<v_StaffProfileInformation> v_StaffProfileInformation { get; set; }
        public virtual DbSet<codeAHDEntitlementType> codeAHDEntitlementType { get; set; }
        public virtual DbSet<codeCities> codeCities { get; set; }
        public virtual DbSet<codeGTPCategory> codeGTPCategory { get; set; }
        public virtual DbSet<StaffCoreData> StaffCoreData { get; set; }
        public virtual DbSet<v_currentUserPermissions> v_currentUserPermissions { get; set; }
        public virtual DbSet<code4WSAccessStatus> code4WSAccessStatus { get; set; }
        public virtual DbSet<code4WSActivity> code4WSActivity { get; set; }
        public virtual DbSet<code4WSActivityTag> code4WSActivityTag { get; set; }
        public virtual DbSet<code4WSBeneficiaryType> code4WSBeneficiaryType { get; set; }
        public virtual DbSet<code4WSCamps> code4WSCamps { get; set; }
        public virtual DbSet<code4WSFacility> code4WSFacility { get; set; }
        public virtual DbSet<code4WSFunding> code4WSFunding { get; set; }
        public virtual DbSet<code4WSHub> code4WSHub { get; set; }
        public virtual DbSet<code4WSLocation> code4WSLocation { get; set; }
        public virtual DbSet<code4WSOrgTypeByHub> code4WSOrgTypeByHub { get; set; }
        public virtual DbSet<code4WSPartner> code4WSPartner { get; set; }
        public virtual DbSet<code4WSSeverityRanking> code4WSSeverityRanking { get; set; }
        public virtual DbSet<code4WSSubSector> code4WSSubSector { get; set; }
        public virtual DbSet<codeApplicationCategory> codeApplicationCategory { get; set; }
        public virtual DbSet<codeVehicle> codeVehicle { get; set; }
        public virtual DbSet<codePmdPartner> codePmdPartner { get; set; }
        public virtual DbSet<codeDASDestinationUnit> codeDASDestinationUnit { get; set; }
        public virtual DbSet<codeDepartments> codeDepartments { get; set; }
        public virtual DbSet<dataStaffApplicationAccessRequest> dataStaffApplicationAccessRequest { get; set; }
        public virtual DbSet<codePmdUnitOfAchievement> codePmdUnitOfAchievement { get; set; }
        public virtual DbSet<codePmdUnitOfAchievementLanguages> codePmdUnitOfAchievementLanguages { get; set; }
        public virtual DbSet<codePmdIndicator> codePmdIndicators { get; set; }
        public virtual DbSet<codePmdIndicatorLanguage> codePmdIndicatorLanguages { get; set; }
        public virtual DbSet<codePmdObjective> codePmdObjectives { get; set; }
        public virtual DbSet<codePmdObjectiveLanguage> codePmdObjectiveLanguages { get; set; }
        public virtual DbSet<codePmdOutput> codePmdOutputs { get; set; }
        public virtual DbSet<codePmdOutputLanguage> codePmdOutputLanguages { get; set; }
        public virtual DbSet<codePmdCommunityCenter> codePmdCommunityCenters { get; set; }
        public virtual DbSet<dataPartnerMonitoringObjectiveStatus> dataPartnerMonitoringObjectiveStatus { get; set; }
        public virtual DbSet<codePmdObjectiveStatus> codePmdObjectiveStatus { get; set; }
        public virtual DbSet<codePmdObjectiveStatusLanguage> codePmdObjectiveStatusLanguage { get; set; }
        public virtual DbSet<userAccounts> userAccounts { get; set; }
        public virtual DbSet<codeWarehouseLocation> codeWarehouseLocation { get; set; }
    
        public virtual int SendEmail(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments, string fromAddress)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            var fromAddressParameter = fromAddress != null ?
                new ObjectParameter("FromAddress", fromAddress) :
                new ObjectParameter("FromAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmail", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter, fromAddressParameter);
        }
    
        public virtual int SendEmailContacts(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailContacts", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailGeneral(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string address, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailGeneral", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, addressParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailHR(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailHR", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailSTI(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailSTI", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailTTT(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailTTT", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual ObjectResult<spAuditHistoryGlobalizationVersion_Result> spAuditHistoryGlobalizationVersion(string languageID, Nullable<System.Guid> parentGUID, string childActions, string childrenGUIDs)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var parentGUIDParameter = parentGUID.HasValue ?
                new ObjectParameter("ParentGUID", parentGUID) :
                new ObjectParameter("ParentGUID", typeof(System.Guid));
    
            var childActionsParameter = childActions != null ?
                new ObjectParameter("ChildActions", childActions) :
                new ObjectParameter("ChildActions", typeof(string));
    
            var childrenGUIDsParameter = childrenGUIDs != null ?
                new ObjectParameter("ChildrenGUIDs", childrenGUIDs) :
                new ObjectParameter("ChildrenGUIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuditHistoryGlobalizationVersion_Result>("spAuditHistoryGlobalizationVersion", languageIDParameter, parentGUIDParameter, childActionsParameter, childrenGUIDsParameter);
        }
    
        public virtual ObjectResult<spAuditReport_Result> spAuditReport(string languageID, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.Guid> actionCategoryGUID, Nullable<System.Guid> actionGUID, Nullable<System.Guid> actionVerbGUID, Nullable<System.Guid> executedByUserGUID, Nullable<System.Guid> executedByUserProfileGUID, string fieldName, string beforeChange, string afterChange, Nullable<System.Guid> organizationGUID, Nullable<int> rankID, string orderBy)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var actionCategoryGUIDParameter = actionCategoryGUID.HasValue ?
                new ObjectParameter("ActionCategoryGUID", actionCategoryGUID) :
                new ObjectParameter("ActionCategoryGUID", typeof(System.Guid));
    
            var actionGUIDParameter = actionGUID.HasValue ?
                new ObjectParameter("ActionGUID", actionGUID) :
                new ObjectParameter("ActionGUID", typeof(System.Guid));
    
            var actionVerbGUIDParameter = actionVerbGUID.HasValue ?
                new ObjectParameter("ActionVerbGUID", actionVerbGUID) :
                new ObjectParameter("ActionVerbGUID", typeof(System.Guid));
    
            var executedByUserGUIDParameter = executedByUserGUID.HasValue ?
                new ObjectParameter("ExecutedByUserGUID", executedByUserGUID) :
                new ObjectParameter("ExecutedByUserGUID", typeof(System.Guid));
    
            var executedByUserProfileGUIDParameter = executedByUserProfileGUID.HasValue ?
                new ObjectParameter("ExecutedByUserProfileGUID", executedByUserProfileGUID) :
                new ObjectParameter("ExecutedByUserProfileGUID", typeof(System.Guid));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var beforeChangeParameter = beforeChange != null ?
                new ObjectParameter("BeforeChange", beforeChange) :
                new ObjectParameter("BeforeChange", typeof(string));
    
            var afterChangeParameter = afterChange != null ?
                new ObjectParameter("AfterChange", afterChange) :
                new ObjectParameter("AfterChange", typeof(string));
    
            var organizationGUIDParameter = organizationGUID.HasValue ?
                new ObjectParameter("OrganizationGUID", organizationGUID) :
                new ObjectParameter("OrganizationGUID", typeof(System.Guid));
    
            var rankIDParameter = rankID.HasValue ?
                new ObjectParameter("RankID", rankID) :
                new ObjectParameter("RankID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuditReport_Result>("spAuditReport", languageIDParameter, fromParameter, toParameter, actionCategoryGUIDParameter, actionGUIDParameter, actionVerbGUIDParameter, executedByUserGUIDParameter, executedByUserProfileGUIDParameter, fieldNameParameter, beforeChangeParameter, afterChangeParameter, organizationGUIDParameter, rankIDParameter, orderByParameter);
        }
    
        public virtual ObjectResult<spFactorsBlackBox_Result> spFactorsBlackBox(string languageID, string bureausGUIDs, string operationsGUIDs, string organizationsGUIDs, string governoratesGUIDs, string countryGUIDs, Nullable<System.Guid> userProfileGUID)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var bureausGUIDsParameter = bureausGUIDs != null ?
                new ObjectParameter("BureausGUIDs", bureausGUIDs) :
                new ObjectParameter("BureausGUIDs", typeof(string));
    
            var operationsGUIDsParameter = operationsGUIDs != null ?
                new ObjectParameter("OperationsGUIDs", operationsGUIDs) :
                new ObjectParameter("OperationsGUIDs", typeof(string));
    
            var organizationsGUIDsParameter = organizationsGUIDs != null ?
                new ObjectParameter("OrganizationsGUIDs", organizationsGUIDs) :
                new ObjectParameter("OrganizationsGUIDs", typeof(string));
    
            var governoratesGUIDsParameter = governoratesGUIDs != null ?
                new ObjectParameter("GovernoratesGUIDs", governoratesGUIDs) :
                new ObjectParameter("GovernoratesGUIDs", typeof(string));
    
            var countryGUIDsParameter = countryGUIDs != null ?
                new ObjectParameter("CountryGUIDs", countryGUIDs) :
                new ObjectParameter("CountryGUIDs", typeof(string));
    
            var userProfileGUIDParameter = userProfileGUID.HasValue ?
                new ObjectParameter("UserProfileGUID", userProfileGUID) :
                new ObjectParameter("UserProfileGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFactorsBlackBox_Result>("spFactorsBlackBox", languageIDParameter, bureausGUIDsParameter, operationsGUIDsParameter, organizationsGUIDsParameter, governoratesGUIDsParameter, countryGUIDsParameter, userProfileGUIDParameter);
        }
    
        public virtual ObjectResult<string> spGetColumnNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetColumnNames");
        }
    
        public virtual ObjectResult<spAuditHistory_Result> spAuditHistory(string languageID, Nullable<System.Guid> recordGUID)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var recordGUIDParameter = recordGUID.HasValue ?
                new ObjectParameter("RecordGUID", recordGUID) :
                new ObjectParameter("RecordGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuditHistory_Result>("spAuditHistory", languageIDParameter, recordGUIDParameter);
        }
    
        public virtual ObjectResult<spSitemap_Result> spSitemap(Nullable<System.Guid> pageID, string languageID)
        {
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("PageID", pageID) :
                new ObjectParameter("PageID", typeof(System.Guid));
    
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSitemap_Result>("spSitemap", pageIDParameter, languageIDParameter);
        }
    
        public virtual ObjectResult<spMedicalItem_Result> spMedicalItem(string lan)
        {
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMedicalItem_Result>("spMedicalItem", lanParameter);
        }
    }
}
