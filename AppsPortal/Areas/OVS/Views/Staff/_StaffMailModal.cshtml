
@model dataElection
@using (Html.BeginForm("ElectionStaffMailBrodcastCreate", "Staff", new { Area = "OVS" }, FormMethod.Post, new { id = "ElectionStaffMailBrodcastForm", enctype = "multipart/form-data" }))
{
    string ModalTitle = resxDbFields.ElectionInivationStaff;
    @Html.Partial("_ModalHeader", ModalTitle)
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @*@Html.FormHiddenFields(model => model.ElectionStatffGUID)*@
        @Html.HiddenFor(model => model.ElectionGUID)
        <div class="form-group">
            @resxDbFields.ElectionVoteMessage
            <div class="form-group" id="customMessageId">
                @Html.TextAreaFor(model => model.CustomMessage, new {@class = "form-control", rows = 15, placeholder = resxDbFields.ChangeDefaultMessage})
            </div>
            <div class="alert alert-warning" id="DefaultmessageId">
                <article>
                    @ViewBag.MailMessage
                </article>
            </div>
            <div class="form-group">
                <input type="button" onclick="ChangeDefaultMessageText()" Value="@resxDbFields.ChangeDefaultMessage"/>
            </div>

        </div>
    </div>
    <div class="modal-footer form-footer">
        @*<input type="submit" class="btn btn-primary SLAME" />*@
        @*@Html.CreateButton(Permissions.ElectionsManagement.Create, Apps.OVS)*@
        <input class="btn btn-primary SLAME ActionControl" onclick="SenMailBroadCast();" type="button" value="@resxDbFields.SendMessage">

        @Html.CloseModalButton()
    </div>
}
<script>
    $('#customMessageId').hide();
    $('#DefaultmessageId').show();
    var ChangeDefaultMessageText = function() {
        $('#customMessageId').toggle();
        $('#DefaultmessageId').toggle();

    }
    var SenMailBroadCast = function () {
        var formData = $("#ElectionStaffMailBrodcastForm").serialize();

        $.ajax({
            url: "@Url.Action("ElectionStaffMailBrodcastCreate", "Staff")",
            method: "Post",
            data: formData,
            success: function(JsonResult, status, xhr) {
                ProcessNotify(JsonResult);
            }
        });
    };


</script>

