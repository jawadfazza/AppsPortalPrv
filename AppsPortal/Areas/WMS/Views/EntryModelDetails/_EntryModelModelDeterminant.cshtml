@model ItemInputDetailModel



<div class=" checkboxs-form">
    <div class="row" >
        <div class="col-md-12">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ItemInputDetailGUID)
            @if (Model.ModelDeterminantVM.Count > 0)
            {
                <div class="mScroll" data-mcs-theme="rounded-dark" style="max-height:400px;">
                    @*<div class="chkHead-accordion-container">
                            <label class="checkbox-label">
                                <input type="checkbox" class="chkHead-accordion" />
                                <span><b>Select All</b></span>
                                <span id="SelectedMessage"></span>
                            </label>
                        </div>*@
                    @for (int i = 0; i < Model.ModelDeterminantVM.Count; i++)
                    {
                        <div class="configOption ">
                            @Html.HiddenFor(m => Model.ModelDeterminantVM[i].WarehouseItemModelDeterminantGUID)
                            @Html.HiddenFor(m => Model.ModelDeterminantVM[i].DeterminantName)
                            <label class="black ClearFindTextBox" style="margin-bottom:0!important">
                                @Html.DisplayFor(m => Model.ModelDeterminantVM[i].DeterminantName)
                                @Html.EditorFor(model => Model.ModelDeterminantVM[i].DeterminantValue, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </label>
                        </div>
                    }
                </div>
         
                 
               
            }
            else if (Model.ItemInputDetailGUID !=null && Model.ModelDeterminantVM.Count == 0)
            {
                <span>No Determinantets for this model!</span>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Qunatity)
                    @Html.EditorFor(model => model.Qunatity, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" , @Value = 1 } })
                </div>
            }
        </div>
    </div>
</div>

