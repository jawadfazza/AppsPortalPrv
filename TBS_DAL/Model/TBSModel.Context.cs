//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TBS_DAL.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TBSEntities : DbContext
    {
        public TBSEntities()
            : base("name=TBSEntities")
        {
            this.Database.CommandTimeout = 600;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<codeCallCost> codeCallCost { get; set; }
        public virtual DbSet<codeOperationsLanguages> codeOperationsLanguages { get; set; }
        public virtual DbSet<codeTablesValuesLanguages> codeTablesValuesLanguages { get; set; }
        public virtual DbSet<codeTelecomCompanyLanguages> codeTelecomCompanyLanguages { get; set; }
        public virtual DbSet<codeTelecomCompanyOperation> codeTelecomCompanyOperation { get; set; }
        public virtual DbSet<configTelecomCompanyOperation> configTelecomCompanyOperation { get; set; }
        public virtual DbSet<codeCDRLocation> codeCDRLocation { get; set; }
        public virtual DbSet<configTelecomCompanyOperationMobileColumn> configTelecomCompanyOperationMobileColumn { get; set; }
        public virtual DbSet<dataBillFile> dataBillFile { get; set; }
        public virtual DbSet<dataBillToProcess> dataBillToProcess { get; set; }
        public virtual DbSet<dataCDRCopiedFile> dataCDRCopiedFile { get; set; }
        public virtual DbSet<dataStaffPhone> dataStaffPhone { get; set; }
        public virtual DbSet<dataUserCustomPhoneDirectory> dataUserCustomPhoneDirectory { get; set; }
        public virtual DbSet<v_BillsDataTable> v_BillsDataTable { get; set; }
        public virtual DbSet<v_BillTotalAmount> v_BillTotalAmount { get; set; }
        public virtual DbSet<v_MyOwnBillsMain> v_MyOwnBillsMain { get; set; }
        public virtual DbSet<codeTelecomCompany> codeTelecomCompany { get; set; }
        public virtual DbSet<userProfiles> userProfiles { get; set; }
        public virtual DbSet<userServiceHistory> userServiceHistory { get; set; }
        public virtual DbSet<codeDepartmentsLanguages> codeDepartmentsLanguages { get; set; }
        public virtual DbSet<codeDutyStationsLanguages> codeDutyStationsLanguages { get; set; }
        public virtual DbSet<userPersonalDetailsLanguage> userPersonalDetailsLanguage { get; set; }
        public virtual DbSet<v_PendingBills> v_PendingBills { get; set; }
        public virtual DbSet<configTelecomCompanyOperationLandColumn> configTelecomCompanyOperationLandColumn { get; set; }
        public virtual DbSet<dataStaffPrivateCall> dataStaffPrivateCall { get; set; }
        public virtual DbSet<v_MyOwnBillsDetailed> v_MyOwnBillsDetailed { get; set; }
        public virtual DbSet<v_STISIMCardCustodian> v_STISIMCardCustodian { get; set; }
        public virtual DbSet<dataUserBillDetail> dataUserBillDetail { get; set; }
        public virtual DbSet<v_FinanceReport> v_FinanceReport { get; set; }
        public virtual DbSet<dataBill> dataBill { get; set; }
        public virtual DbSet<v_LatestUserCalls> v_LatestUserCalls { get; set; }
        public virtual DbSet<StaffCoreData> StaffCoreData { get; set; }
        public virtual DbSet<dataStaffCallsTag> dataStaffCallsTag { get; set; }
        public virtual DbSet<dataUserBill> dataUserBill { get; set; }
        public virtual DbSet<v_UserBillDetailsGrouped> v_UserBillDetailsGrouped { get; set; }
    
        public virtual int sp_deleteEntitlementTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteEntitlementTables");
        }
    
        public virtual ObjectResult<sp_StaffRenewalResidency_Result> sp_StaffRenewalResidency(Nullable<System.Guid> staffRenwalResidencyGUID, string lan)
        {
            var staffRenwalResidencyGUIDParameter = staffRenwalResidencyGUID.HasValue ?
                new ObjectParameter("StaffRenwalResidencyGUID", staffRenwalResidencyGUID) :
                new ObjectParameter("StaffRenwalResidencyGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StaffRenewalResidency_Result>("sp_StaffRenewalResidency", staffRenwalResidencyGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<RP_AppointmentByDate_Result> RP_AppointmentByDate(Nullable<System.Guid> departmentGUID, Nullable<System.Guid> userProfileGUID, Nullable<System.Guid> actionAccessGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var departmentGUIDParameter = departmentGUID.HasValue ?
                new ObjectParameter("DepartmentGUID", departmentGUID) :
                new ObjectParameter("DepartmentGUID", typeof(System.Guid));
    
            var userProfileGUIDParameter = userProfileGUID.HasValue ?
                new ObjectParameter("UserProfileGUID", userProfileGUID) :
                new ObjectParameter("UserProfileGUID", typeof(System.Guid));
    
            var actionAccessGUIDParameter = actionAccessGUID.HasValue ?
                new ObjectParameter("ActionAccessGUID", actionAccessGUID) :
                new ObjectParameter("ActionAccessGUID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_AppointmentByDate_Result>("RP_AppointmentByDate", departmentGUIDParameter, userProfileGUIDParameter, actionAccessGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_AppointmentByExecutionTime_Result> RP_AppointmentByExecutionTime(Nullable<System.Guid> departmentGUID, Nullable<System.Guid> userProfileGUID, Nullable<System.Guid> actionAccessGUID, Nullable<System.Guid> actionAddGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var departmentGUIDParameter = departmentGUID.HasValue ?
                new ObjectParameter("DepartmentGUID", departmentGUID) :
                new ObjectParameter("DepartmentGUID", typeof(System.Guid));
    
            var userProfileGUIDParameter = userProfileGUID.HasValue ?
                new ObjectParameter("UserProfileGUID", userProfileGUID) :
                new ObjectParameter("UserProfileGUID", typeof(System.Guid));
    
            var actionAccessGUIDParameter = actionAccessGUID.HasValue ?
                new ObjectParameter("ActionAccessGUID", actionAccessGUID) :
                new ObjectParameter("ActionAccessGUID", typeof(System.Guid));
    
            var actionAddGUIDParameter = actionAddGUID.HasValue ?
                new ObjectParameter("ActionAddGUID", actionAddGUID) :
                new ObjectParameter("ActionAddGUID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_AppointmentByExecutionTime_Result>("RP_AppointmentByExecutionTime", departmentGUIDParameter, userProfileGUIDParameter, actionAccessGUIDParameter, actionAddGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_AppointmentOverview_Result> RP_AppointmentOverview(Nullable<System.Guid> userProfileGUID, Nullable<System.Guid> actionAccessGUID, Nullable<System.Guid> actionAddGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var userProfileGUIDParameter = userProfileGUID.HasValue ?
                new ObjectParameter("UserProfileGUID", userProfileGUID) :
                new ObjectParameter("UserProfileGUID", typeof(System.Guid));
    
            var actionAccessGUIDParameter = actionAccessGUID.HasValue ?
                new ObjectParameter("ActionAccessGUID", actionAccessGUID) :
                new ObjectParameter("ActionAccessGUID", typeof(System.Guid));
    
            var actionAddGUIDParameter = actionAddGUID.HasValue ?
                new ObjectParameter("ActionAddGUID", actionAddGUID) :
                new ObjectParameter("ActionAddGUID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_AppointmentOverview_Result>("RP_AppointmentOverview", userProfileGUIDParameter, actionAccessGUIDParameter, actionAddGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_AppointmentSlep_Result> RP_AppointmentSlep(Nullable<System.Guid> appointmentGUID, string lAN)
        {
            var appointmentGUIDParameter = appointmentGUID.HasValue ?
                new ObjectParameter("AppointmentGUID", appointmentGUID) :
                new ObjectParameter("AppointmentGUID", typeof(System.Guid));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_AppointmentSlep_Result>("RP_AppointmentSlep", appointmentGUIDParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_AppointmentSlots_Result> RP_AppointmentSlots(Nullable<System.Guid> departmentGUID, Nullable<System.Guid> dutyStationGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var departmentGUIDParameter = departmentGUID.HasValue ?
                new ObjectParameter("DepartmentGUID", departmentGUID) :
                new ObjectParameter("DepartmentGUID", typeof(System.Guid));
    
            var dutyStationGUIDParameter = dutyStationGUID.HasValue ?
                new ObjectParameter("DutyStationGUID", dutyStationGUID) :
                new ObjectParameter("DutyStationGUID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_AppointmentSlots_Result>("RP_AppointmentSlots", departmentGUIDParameter, dutyStationGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual int SendEmail(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments, string fromAddress)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            var fromAddressParameter = fromAddress != null ?
                new ObjectParameter("FromAddress", fromAddress) :
                new ObjectParameter("FromAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmail", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter, fromAddressParameter);
        }
    
        public virtual int SendEmailContacts(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailContacts", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailGeneral(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string address, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailGeneral", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, addressParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailHR(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailHR", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailSTI(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailSTI", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int SendEmailTTT(string recipients, string copy_recipients, string blind_copy_recipients, string subject, string body, string body_format, string importance, string file_attachments)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("Copy_recipients", copy_recipients) :
                new ObjectParameter("Copy_recipients", typeof(string));
    
            var blind_copy_recipientsParameter = blind_copy_recipients != null ?
                new ObjectParameter("Blind_copy_recipients", blind_copy_recipients) :
                new ObjectParameter("Blind_copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("Body_format", body_format) :
                new ObjectParameter("Body_format", typeof(string));
    
            var importanceParameter = importance != null ?
                new ObjectParameter("Importance", importance) :
                new ObjectParameter("Importance", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("File_attachments", file_attachments) :
                new ObjectParameter("File_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmailTTT", recipientsParameter, copy_recipientsParameter, blind_copy_recipientsParameter, subjectParameter, bodyParameter, body_formatParameter, importanceParameter, file_attachmentsParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spAuditHistory_Result> spAuditHistory(string languageID, Nullable<System.Guid> recordGUID)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var recordGUIDParameter = recordGUID.HasValue ?
                new ObjectParameter("RecordGUID", recordGUID) :
                new ObjectParameter("RecordGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuditHistory_Result>("spAuditHistory", languageIDParameter, recordGUIDParameter);
        }
    
        public virtual ObjectResult<spAuditHistoryGlobalizationVersion_Result> spAuditHistoryGlobalizationVersion(string languageID, Nullable<System.Guid> parentGUID, string childActions, string childrenGUIDs)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var parentGUIDParameter = parentGUID.HasValue ?
                new ObjectParameter("ParentGUID", parentGUID) :
                new ObjectParameter("ParentGUID", typeof(System.Guid));
    
            var childActionsParameter = childActions != null ?
                new ObjectParameter("ChildActions", childActions) :
                new ObjectParameter("ChildActions", typeof(string));
    
            var childrenGUIDsParameter = childrenGUIDs != null ?
                new ObjectParameter("ChildrenGUIDs", childrenGUIDs) :
                new ObjectParameter("ChildrenGUIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuditHistoryGlobalizationVersion_Result>("spAuditHistoryGlobalizationVersion", languageIDParameter, parentGUIDParameter, childActionsParameter, childrenGUIDsParameter);
        }
    
        public virtual ObjectResult<spAuditReport_Result> spAuditReport(string languageID, Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<System.Guid> actionCategoryGUID, Nullable<System.Guid> actionGUID, Nullable<System.Guid> actionVerbGUID, Nullable<System.Guid> executedByUserGUID, Nullable<System.Guid> executedByUserProfileGUID, string fieldName, string beforeChange, string afterChange, Nullable<System.Guid> organizationGUID, Nullable<int> rankID, string orderBy)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var actionCategoryGUIDParameter = actionCategoryGUID.HasValue ?
                new ObjectParameter("ActionCategoryGUID", actionCategoryGUID) :
                new ObjectParameter("ActionCategoryGUID", typeof(System.Guid));
    
            var actionGUIDParameter = actionGUID.HasValue ?
                new ObjectParameter("ActionGUID", actionGUID) :
                new ObjectParameter("ActionGUID", typeof(System.Guid));
    
            var actionVerbGUIDParameter = actionVerbGUID.HasValue ?
                new ObjectParameter("ActionVerbGUID", actionVerbGUID) :
                new ObjectParameter("ActionVerbGUID", typeof(System.Guid));
    
            var executedByUserGUIDParameter = executedByUserGUID.HasValue ?
                new ObjectParameter("ExecutedByUserGUID", executedByUserGUID) :
                new ObjectParameter("ExecutedByUserGUID", typeof(System.Guid));
    
            var executedByUserProfileGUIDParameter = executedByUserProfileGUID.HasValue ?
                new ObjectParameter("ExecutedByUserProfileGUID", executedByUserProfileGUID) :
                new ObjectParameter("ExecutedByUserProfileGUID", typeof(System.Guid));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var beforeChangeParameter = beforeChange != null ?
                new ObjectParameter("BeforeChange", beforeChange) :
                new ObjectParameter("BeforeChange", typeof(string));
    
            var afterChangeParameter = afterChange != null ?
                new ObjectParameter("AfterChange", afterChange) :
                new ObjectParameter("AfterChange", typeof(string));
    
            var organizationGUIDParameter = organizationGUID.HasValue ?
                new ObjectParameter("OrganizationGUID", organizationGUID) :
                new ObjectParameter("OrganizationGUID", typeof(System.Guid));
    
            var rankIDParameter = rankID.HasValue ?
                new ObjectParameter("RankID", rankID) :
                new ObjectParameter("RankID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuditReport_Result>("spAuditReport", languageIDParameter, fromParameter, toParameter, actionCategoryGUIDParameter, actionGUIDParameter, actionVerbGUIDParameter, executedByUserGUIDParameter, executedByUserProfileGUIDParameter, fieldNameParameter, beforeChangeParameter, afterChangeParameter, organizationGUIDParameter, rankIDParameter, orderByParameter);
        }
    
        public virtual ObjectResult<spFactorsBlackBox_Result> spFactorsBlackBox(string languageID, string bureausGUIDs, string operationsGUIDs, string organizationsGUIDs, string governoratesGUIDs, string countryGUIDs, Nullable<System.Guid> userProfileGUID)
        {
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            var bureausGUIDsParameter = bureausGUIDs != null ?
                new ObjectParameter("BureausGUIDs", bureausGUIDs) :
                new ObjectParameter("BureausGUIDs", typeof(string));
    
            var operationsGUIDsParameter = operationsGUIDs != null ?
                new ObjectParameter("OperationsGUIDs", operationsGUIDs) :
                new ObjectParameter("OperationsGUIDs", typeof(string));
    
            var organizationsGUIDsParameter = organizationsGUIDs != null ?
                new ObjectParameter("OrganizationsGUIDs", organizationsGUIDs) :
                new ObjectParameter("OrganizationsGUIDs", typeof(string));
    
            var governoratesGUIDsParameter = governoratesGUIDs != null ?
                new ObjectParameter("GovernoratesGUIDs", governoratesGUIDs) :
                new ObjectParameter("GovernoratesGUIDs", typeof(string));
    
            var countryGUIDsParameter = countryGUIDs != null ?
                new ObjectParameter("CountryGUIDs", countryGUIDs) :
                new ObjectParameter("CountryGUIDs", typeof(string));
    
            var userProfileGUIDParameter = userProfileGUID.HasValue ?
                new ObjectParameter("UserProfileGUID", userProfileGUID) :
                new ObjectParameter("UserProfileGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFactorsBlackBox_Result>("spFactorsBlackBox", languageIDParameter, bureausGUIDsParameter, operationsGUIDsParameter, organizationsGUIDsParameter, governoratesGUIDsParameter, countryGUIDsParameter, userProfileGUIDParameter);
        }
    
        public virtual ObjectResult<string> spGetColumnNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetColumnNames");
        }
    
        public virtual ObjectResult<spSitemap_Result> spSitemap(Nullable<System.Guid> pageID, string languageID)
        {
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("PageID", pageID) :
                new ObjectParameter("PageID", typeof(System.Guid));
    
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSitemap_Result>("spSitemap", pageIDParameter, languageIDParameter);
        }
    
        public virtual int Zero_Call___ConstantsClasses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Zero_Call___ConstantsClasses");
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> Zero_Call___GetNewID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("Zero_Call___GetNewID");
        }
    
        public virtual ObjectResult<string> Zero_Call___spGetColumnNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Zero_Call___spGetColumnNames");
        }
    
        public virtual int sp_UpdateCasesNearestAppointmentDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCasesNearestAppointmentDate");
        }
    
        [DbFunction("Entities", "ListOfGuid")]
        public virtual IQueryable<Nullable<System.Guid>> ListOfGuid(string list)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<System.Guid>>("[Entities].[ListOfGuid](@list)", listParameter);
        }
    
        public virtual int sp_alterdiagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition1_Result> sp_helpdiagramdefinition1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition1_Result>("sp_helpdiagramdefinition1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams1_Result> sp_helpdiagrams1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams1_Result>("sp_helpdiagrams1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram1(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram1", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams1");
        }
    
        [DbFunction("Entities", "Split")]
        public virtual IQueryable<Split_Result> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[Entities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("Entities", "Zero_Call___DeleteAudit")]
        public virtual IQueryable<Zero_Call___DeleteAudit_Result> Zero_Call___DeleteAudit(Nullable<System.Guid> userGUID, Nullable<System.Guid> actionGUID, string list)
        {
            var userGUIDParameter = userGUID.HasValue ?
                new ObjectParameter("UserGUID", userGUID) :
                new ObjectParameter("UserGUID", typeof(System.Guid));
    
            var actionGUIDParameter = actionGUID.HasValue ?
                new ObjectParameter("ActionGUID", actionGUID) :
                new ObjectParameter("ActionGUID", typeof(System.Guid));
    
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Zero_Call___DeleteAudit_Result>("[Entities].[Zero_Call___DeleteAudit](@UserGUID, @ActionGUID, @list)", userGUIDParameter, actionGUIDParameter, listParameter);
        }
    
        [DbFunction("Entities", "Zero_Call_tvf_LookupResolver")]
        public virtual IQueryable<Zero_Call_tvf_LookupResolver_Result> Zero_Call_tvf_LookupResolver(string lookupGUID, string languageID)
        {
            var lookupGUIDParameter = lookupGUID != null ?
                new ObjectParameter("LookupGUID", lookupGUID) :
                new ObjectParameter("LookupGUID", typeof(string));
    
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Zero_Call_tvf_LookupResolver_Result>("[Entities].[Zero_Call_tvf_LookupResolver](@LookupGUID, @LanguageID)", lookupGUIDParameter, languageIDParameter);
        }
    
        public virtual ObjectResult<RP_ConsumptionMedicine_Result> RP_ConsumptionMedicine(string medicalPharmacyGUID, string medicalItemGUID, string medicalPharmacologicalFormGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var medicalPharmacyGUIDParameter = medicalPharmacyGUID != null ?
                new ObjectParameter("MedicalPharmacyGUID", medicalPharmacyGUID) :
                new ObjectParameter("MedicalPharmacyGUID", typeof(string));
    
            var medicalItemGUIDParameter = medicalItemGUID != null ?
                new ObjectParameter("MedicalItemGUID", medicalItemGUID) :
                new ObjectParameter("MedicalItemGUID", typeof(string));
    
            var medicalPharmacologicalFormGUIDParameter = medicalPharmacologicalFormGUID != null ?
                new ObjectParameter("MedicalPharmacologicalFormGUID", medicalPharmacologicalFormGUID) :
                new ObjectParameter("MedicalPharmacologicalFormGUID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_ConsumptionMedicine_Result>("RP_ConsumptionMedicine", medicalPharmacyGUIDParameter, medicalItemGUIDParameter, medicalPharmacologicalFormGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_ConsumptionMedicineByBeneficiariesTypeHeatMap_Result> RP_ConsumptionMedicineByBeneficiariesTypeHeatMap(string medicalPharmacyGUID, string medicalItemGUID, string medicalPharmacologicalFormGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string medicalBeneficiaryGUID, string lAN)
        {
            var medicalPharmacyGUIDParameter = medicalPharmacyGUID != null ?
                new ObjectParameter("MedicalPharmacyGUID", medicalPharmacyGUID) :
                new ObjectParameter("MedicalPharmacyGUID", typeof(string));
    
            var medicalItemGUIDParameter = medicalItemGUID != null ?
                new ObjectParameter("MedicalItemGUID", medicalItemGUID) :
                new ObjectParameter("MedicalItemGUID", typeof(string));
    
            var medicalPharmacologicalFormGUIDParameter = medicalPharmacologicalFormGUID != null ?
                new ObjectParameter("MedicalPharmacologicalFormGUID", medicalPharmacologicalFormGUID) :
                new ObjectParameter("MedicalPharmacologicalFormGUID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var medicalBeneficiaryGUIDParameter = medicalBeneficiaryGUID != null ?
                new ObjectParameter("MedicalBeneficiaryGUID", medicalBeneficiaryGUID) :
                new ObjectParameter("MedicalBeneficiaryGUID", typeof(string));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_ConsumptionMedicineByBeneficiariesTypeHeatMap_Result>("RP_ConsumptionMedicineByBeneficiariesTypeHeatMap", medicalPharmacyGUIDParameter, medicalItemGUIDParameter, medicalPharmacologicalFormGUIDParameter, startDateParameter, endDateParameter, medicalBeneficiaryGUIDParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_DispatchedMedicine_Result> RP_DispatchedMedicine(string medicalPharmacyGUID, string medicalItemGUID, string medicalPharmacologicalFormGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var medicalPharmacyGUIDParameter = medicalPharmacyGUID != null ?
                new ObjectParameter("MedicalPharmacyGUID", medicalPharmacyGUID) :
                new ObjectParameter("MedicalPharmacyGUID", typeof(string));
    
            var medicalItemGUIDParameter = medicalItemGUID != null ?
                new ObjectParameter("MedicalItemGUID", medicalItemGUID) :
                new ObjectParameter("MedicalItemGUID", typeof(string));
    
            var medicalPharmacologicalFormGUIDParameter = medicalPharmacologicalFormGUID != null ?
                new ObjectParameter("MedicalPharmacologicalFormGUID", medicalPharmacologicalFormGUID) :
                new ObjectParameter("MedicalPharmacologicalFormGUID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_DispatchedMedicine_Result>("RP_DispatchedMedicine", medicalPharmacyGUIDParameter, medicalItemGUIDParameter, medicalPharmacologicalFormGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_PrescriptionsDispensed_Result> RP_PrescriptionsDispensed(string medicalPharmacyGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var medicalPharmacyGUIDParameter = medicalPharmacyGUID != null ?
                new ObjectParameter("MedicalPharmacyGUID", medicalPharmacyGUID) :
                new ObjectParameter("MedicalPharmacyGUID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_PrescriptionsDispensed_Result>("RP_PrescriptionsDispensed", medicalPharmacyGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual ObjectResult<RP_TransferMedicine_Result> RP_TransferMedicine(string medicalPharmacyGUID, string medicalItemGUID, string medicalPharmacologicalFormGUID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lAN)
        {
            var medicalPharmacyGUIDParameter = medicalPharmacyGUID != null ?
                new ObjectParameter("MedicalPharmacyGUID", medicalPharmacyGUID) :
                new ObjectParameter("MedicalPharmacyGUID", typeof(string));
    
            var medicalItemGUIDParameter = medicalItemGUID != null ?
                new ObjectParameter("MedicalItemGUID", medicalItemGUID) :
                new ObjectParameter("MedicalItemGUID", typeof(string));
    
            var medicalPharmacologicalFormGUIDParameter = medicalPharmacologicalFormGUID != null ?
                new ObjectParameter("MedicalPharmacologicalFormGUID", medicalPharmacologicalFormGUID) :
                new ObjectParameter("MedicalPharmacologicalFormGUID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lANParameter = lAN != null ?
                new ObjectParameter("LAN", lAN) :
                new ObjectParameter("LAN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_TransferMedicine_Result>("RP_TransferMedicine", medicalPharmacyGUIDParameter, medicalItemGUIDParameter, medicalPharmacologicalFormGUIDParameter, startDateParameter, endDateParameter, lANParameter);
        }
    
        public virtual ObjectResult<spMedicalItem_Result> spMedicalItem(string lan)
        {
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMedicalItem_Result>("spMedicalItem", lanParameter);
        }
    
        public virtual ObjectResult<RP_NoteVerbale_Result> RP_NoteVerbale(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_NoteVerbale_Result>("RP_NoteVerbale", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<string> RP_NoteVerbaleOrganization(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RP_NoteVerbaleOrganization", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<RP_NoteVerbaleStaff_Result> RP_NoteVerbaleStaff(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_NoteVerbaleStaff_Result>("RP_NoteVerbaleStaff", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<RP_NoteVerbaleVehicle_Result> RP_NoteVerbaleVehicle(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_NoteVerbaleVehicle_Result>("RP_NoteVerbaleVehicle", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<RP_PartnerCenter_Result> RP_PartnerCenter(Nullable<System.DateTime> endDate, Nullable<System.Guid> reportGUID, string organizationInstanceGUID, string partnerCenterGUID, string categoryGUID2, string categoryGUID3, string aggregationGUID, string languageID)
        {
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var reportGUIDParameter = reportGUID.HasValue ?
                new ObjectParameter("ReportGUID", reportGUID) :
                new ObjectParameter("ReportGUID", typeof(System.Guid));
    
            var organizationInstanceGUIDParameter = organizationInstanceGUID != null ?
                new ObjectParameter("OrganizationInstanceGUID", organizationInstanceGUID) :
                new ObjectParameter("OrganizationInstanceGUID", typeof(string));
    
            var partnerCenterGUIDParameter = partnerCenterGUID != null ?
                new ObjectParameter("PartnerCenterGUID", partnerCenterGUID) :
                new ObjectParameter("PartnerCenterGUID", typeof(string));
    
            var categoryGUID2Parameter = categoryGUID2 != null ?
                new ObjectParameter("CategoryGUID2", categoryGUID2) :
                new ObjectParameter("CategoryGUID2", typeof(string));
    
            var categoryGUID3Parameter = categoryGUID3 != null ?
                new ObjectParameter("CategoryGUID3", categoryGUID3) :
                new ObjectParameter("CategoryGUID3", typeof(string));
    
            var aggregationGUIDParameter = aggregationGUID != null ?
                new ObjectParameter("AggregationGUID", aggregationGUID) :
                new ObjectParameter("AggregationGUID", typeof(string));
    
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_PartnerCenter_Result>("RP_PartnerCenter", endDateParameter, reportGUIDParameter, organizationInstanceGUIDParameter, partnerCenterGUIDParameter, categoryGUID2Parameter, categoryGUID3Parameter, aggregationGUIDParameter, languageIDParameter);
        }
    
        public virtual ObjectResult<RP_PartnerReports_Result> RP_PartnerReports(Nullable<System.DateTime> endDate, Nullable<System.Guid> reportGUID, string organizationInstanceGUID, string dutyStationGUID, string languageID)
        {
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var reportGUIDParameter = reportGUID.HasValue ?
                new ObjectParameter("ReportGUID", reportGUID) :
                new ObjectParameter("ReportGUID", typeof(System.Guid));
    
            var organizationInstanceGUIDParameter = organizationInstanceGUID != null ?
                new ObjectParameter("OrganizationInstanceGUID", organizationInstanceGUID) :
                new ObjectParameter("OrganizationInstanceGUID", typeof(string));
    
            var dutyStationGUIDParameter = dutyStationGUID != null ?
                new ObjectParameter("DutyStationGUID", dutyStationGUID) :
                new ObjectParameter("DutyStationGUID", typeof(string));
    
            var languageIDParameter = languageID != null ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_PartnerReports_Result>("RP_PartnerReports", endDateParameter, reportGUIDParameter, organizationInstanceGUIDParameter, dutyStationGUIDParameter, languageIDParameter);
        }
    
        public virtual ObjectResult<PrinterLogs_Result> PrinterLogs(Nullable<System.DateTime> logDateTimeStart, Nullable<System.DateTime> logDateTimeEnd, Nullable<System.Guid> printerConfigurationGUID, Nullable<System.Guid> oIDTypeGUID)
        {
            var logDateTimeStartParameter = logDateTimeStart.HasValue ?
                new ObjectParameter("LogDateTimeStart", logDateTimeStart) :
                new ObjectParameter("LogDateTimeStart", typeof(System.DateTime));
    
            var logDateTimeEndParameter = logDateTimeEnd.HasValue ?
                new ObjectParameter("LogDateTimeEnd", logDateTimeEnd) :
                new ObjectParameter("LogDateTimeEnd", typeof(System.DateTime));
    
            var printerConfigurationGUIDParameter = printerConfigurationGUID.HasValue ?
                new ObjectParameter("PrinterConfigurationGUID", printerConfigurationGUID) :
                new ObjectParameter("PrinterConfigurationGUID", typeof(System.Guid));
    
            var oIDTypeGUIDParameter = oIDTypeGUID.HasValue ?
                new ObjectParameter("OIDTypeGUID", oIDTypeGUID) :
                new ObjectParameter("OIDTypeGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrinterLogs_Result>("PrinterLogs", logDateTimeStartParameter, logDateTimeEndParameter, printerConfigurationGUIDParameter, oIDTypeGUIDParameter);
        }
    
        public virtual int RP_ShuttleReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lan, string dutyStationGUID, string userPassengerGUID, string userDriverGUID, string vehicleGUID, string startLocationGUID, string endLocationGUID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            var dutyStationGUIDParameter = dutyStationGUID != null ?
                new ObjectParameter("DutyStationGUID", dutyStationGUID) :
                new ObjectParameter("DutyStationGUID", typeof(string));
    
            var userPassengerGUIDParameter = userPassengerGUID != null ?
                new ObjectParameter("UserPassengerGUID", userPassengerGUID) :
                new ObjectParameter("UserPassengerGUID", typeof(string));
    
            var userDriverGUIDParameter = userDriverGUID != null ?
                new ObjectParameter("UserDriverGUID", userDriverGUID) :
                new ObjectParameter("UserDriverGUID", typeof(string));
    
            var vehicleGUIDParameter = vehicleGUID != null ?
                new ObjectParameter("VehicleGUID", vehicleGUID) :
                new ObjectParameter("VehicleGUID", typeof(string));
    
            var startLocationGUIDParameter = startLocationGUID != null ?
                new ObjectParameter("StartLocationGUID", startLocationGUID) :
                new ObjectParameter("StartLocationGUID", typeof(string));
    
            var endLocationGUIDParameter = endLocationGUID != null ?
                new ObjectParameter("EndLocationGUID", endLocationGUID) :
                new ObjectParameter("EndLocationGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RP_ShuttleReport", startDateParameter, endDateParameter, lanParameter, dutyStationGUIDParameter, userPassengerGUIDParameter, userDriverGUIDParameter, vehicleGUIDParameter, startLocationGUIDParameter, endLocationGUIDParameter);
        }
    }
}
