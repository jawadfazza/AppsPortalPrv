@model ItemRequestUpdateModel
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/Layouts/_SiteLayout.cshtml";
}
@{string PageTitle = (Model.ItemRequestGUID == Guid.Empty) ? "New  Request " : "Edit Request"; }

@Html.PageHeader("60f22f53-8b04-498a-beee-4e283dd290e9")
<link href="~/Assets/Plugin/JQuaryConfirm/jquery-confirm.min.css" rel="stylesheet" />
<script src="~/Assets/Plugin/JQuaryConfirm/jquery-confirm.min.js"></script>
<script src="~/Assets/Plugin/JQuery/jquery.ui.touch-punch.min.js"></script>
<style>
    ul.a {
        list-style-position: outside;
    }
</style>

<div class="page--content">
    <div class="forms-fadeIn">
        <div class="row">

            <div class="panel-heading" id="step1panelcreate">
                @*Delegation Request for : @Model.StaffName in @Model.StartDate*@


            </div>
            <div>
                @using (Html.BeginForm("MissionRequestCreate", "MissionRequest", new { Area = "AHD" }, FormMethod.Post, new { id = "MissionRequestWizardform", @class = "main-form", enctype = "multipart/form-data" }))
                {

                    @Html.AntiForgeryToken()

                    @Html.FormHiddenFields(model => model.ItemRequestGUID)
                    @Html.FormHiddenFields(model => model.StaffGUID)

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" id="step1InfoBox">
                        <div class="panel panel-primary newPanelSettings">
                            <div class="panel-heading" style="background-color: #cbcece;border-color: #cbcece;">
                                <h3 class="box-title">Step-1 Mission Information</h3>

                            </div>
                            <div class="panel-body">

                                <div class="row">

                                    <div class="form-group">


                                        <div class="col-md-4">
                                            <div class="form-group HANDLER" id="itemparenetId">
                                                @Html.LabelFor(model => model.TypeOfTravelGUID)

                                                @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                {
                                                    @Html.DropDownListFor(model => model.TypeOfTravelGUID, new DropDownList().AHDMissionTravelTypes(), "", new
                                                                         {
                                                                         @class = "form-control select2-basic-search",
                                                                         style = "width:100%",

                                                                         })
                                                }
                                                else
                                                {
                                                    @Html.HiddenFor(model => model.TypeOfTravelGUID)
                                                    <br />
                                                    @Html.DisplayFor(model => model.TypeOfTravel, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }


                                            </div>


                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TypeOfMissionGUID)
                                                @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                {
                                                    @Html.DropDownListFor(model => model.TypeOfMissionGUID, new DropDownList().AHDMissionTypes(), "", new
                                                                            {
                                                                            @class = "form-control select2-basic-search",
                                                                            style = "width:100%",

                                                                            })
                                                }
                                                else
                                                {
                                                    <br />
                                                    @Html.DisplayFor(model => model.TypeOfMission, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }

                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ReferenceNumber)

                                                @*@if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                    {
                                                        @Html.EditorFor(model => model.ReferenceNumber, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                    }
                                                    else
                                                    {*@
                                                <br />
                                                <h4>This number is auto generated</h4>
                                                @Html.DisplayFor(model => model.ReferenceNumber, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                @*}*@


                                            </div>
                                        </div>



                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.Label("the mission include transit in Damascus?")
                                                @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                {
                                                    @Html.CheckBoxFor(model => model.HasDamascusTransit, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }
                                                else
                                                {
                                                    <br />
                                                    @Html.DisplayFor(model => model.HasDamascusTransit, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }

                                            </div>
                                        </div>


                                        <div class="col-md-3">

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IsMissionCombinedWithLeave)
                                                @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                {
                                                    @Html.CheckBoxFor(model => model.IsMissionCombinedWithLeave, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }
                                                else
                                                {
                                                    <br />
                                                    @Html.DisplayFor(model => model.IsMissionCombinedWithLeave, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }

                                            </div>


                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.IsMissionCombinedWithRR)
                                                @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                {
                                                    @Html.CheckBoxFor(model => model.IsMissionCombinedWithRR, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }
                                                else
                                                {
                                                    <br />
                                                    @Html.DisplayFor(model => model.IsMissionCombinedWithRR, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }

                                            </div>
                                        </div>

                                        @*<div class="col-md-3">
                                                <div class="form-group HANDLER" id="itemparenetId">
                                                    @Html.LabelFor(model => model.RestAndRecuperationLeaveGUID)

                                                    @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                    {
                                                        @Html.DropDownListFor(model => model.RestAndRecuperationLeaveGUID, new DropDownList().InternationalStaffUsers(false), "", new
                                                                             {
                                                                             @class = "form-control select2-basic-search",
                                                                             style = "width:100%",

                                                                             })
                                                    }
                                                    else
                                                    {
                                                        @Html.HiddenFor(model => model.RestAndRecuperationLeaveGUID)
                                                        <br />
                                                        @Html.DisplayFor(model => model.RestAndRecuperationLeaveGUID, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                    }


                                                </div>


                                            </div>*@



                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PurposeOfMission)
                                                @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                {
                                                    @Html.EditorFor(model => model.PurposeOfMission, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }
                                                else
                                                {
                                                    <br />
                                                    @Html.DisplayFor(model => model.PurposeOfMission, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }

                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Comments)
                                                @if ((Model.AccessLevel == 1 || Model.AccessLevel == null) && (Model.CurrentStep == 1 || Model.CurrentStep == 0))
                                                {
                                                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }
                                                else
                                                {
                                                    <br />
                                                    @Html.DisplayFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
                                                }

                                            </div>
                                        </div>
                                    </div>




                                </div>
                            </div>
                            <div class="panel-footer  showstep1body">

                                <i class="far fa-hand-point-down showfooterstep1 pull-left"></i>
                                <br />
                                <input type="button" onclick="MoveToStep2()" value="Save and move to next step" id="movetosetp2id"
                                       class="btn btn-primary showfooterstep1" />



                            </div>
                        </div>
                    </div>


                    <div id="step2InfoBox" style="display:none;">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <div class="panel panel-primary ">
                                <div class="panel-heading" style="background-color: #cbcece;border-color: #cbcece;">

                                    <h3 class="box-title"> Step-2  Traveller Information </h3>

                                </div>
                                <div class="panel-body showstep2body">

                                    @Html.Partial("~/Areas/AHD/Views/MissionRequest/Traveler/_MissionRequestTravelerDataTable.cshtml", new MasterRecordStatus { ParentGUID = (Guid)Model.ItemRequestGUID, IsParentActive = Model.Active })




                                </div>
                                <div class="panel-footer  showstep2body">

                                    <i class="far fa-hand-point-down showfooterstep2 pull-left"></i>
                                    <br />
                                    <input type="button" onclick="MoveToStep3()" value="Save and move to next step" id="movetosetp3id"
                                           class="btn btn-primary showfooterstep2" />



                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" id="step3InfoBox" style="display:none;">
                        <div class="panel panel-primary ">
                            <div class="panel-heading" style="background-color: #cbcece;border-color: #cbcece;">

                                <h3 class="box-title"> Step-3 Itinerary </h3>

                            </div>
                            <div class="panel-body showstep3body">

                                <div id="itinerarydivid" class="form-group">

                                    @Html.Partial("~/Areas/AHD/Views/MissionRequest/Itinerary/_MissionRequestItineraryDataTable.cshtml", new MasterRecordStatus { ParentGUID = (Guid)Model.ItemRequestGUID, IsParentActive = Model.Active })
                                </div>




                            </div>
                            <div class="panel-footer  showstep3body">

                                <i class="far fa-hand-point-down showfooterstep3 pull-left"></i>
                                <br />
                                <input type="button" onclick="MoveToStep4()" value="Save and move to next step" id="movetosetp3id"
                                       class="btn btn-primary showfooterstep3" />



                            </div>

                        </div>
                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" id="step4InfoBox" style="display:none;">
                        <div class="panel panel-primary ">
                            <div class="panel-heading" style="background-color: #cbcece;border-color: #cbcece;">

                                <h3 class="box-title"> Step-4 Documents </h3>

                            </div>
                            <div class="panel-body showstep4body">


                                @Html.Partial("~/Areas/AHD/Views/MissionRequest/Documents/_DocumentDataTable.cshtml", new MasterRecordStatus { ParentGUID = (Guid)Model.ItemRequestGUID, IsParentActive = Model.Active })



                            </div>
                            <div class="panel-footer  showstep4body">

                                <i class="far fa-hand-point-down showfooterstep3 pull-left"></i>
                                <br />
                                <input type="button" onclick="MoveToStep5()" value="Save and send" id="movetosetp4id"
                                       class="btn btn-primary showfooterstep4" />
                                <input type="button" onclick="CancelMissionRequest()" value="Cancel the mission" id="movetosetp4Cancleid"
                                       class="btn btn-primary showfooterstep4" />




                            </div>

                        </div>
                    </div>















                }

            </div>


        </div>
    </div>
</div>


<script>
            var _ItemRequestGUID = $("#ItemRequestGUID").val();
            var MoveToStep2 = function () {

                var _ItemRequestGUID = $("#ItemRequestGUID").val();
                var _TypeOfMissionGUID = $("#TypeOfMissionGUID").val();
                var _TypeOfTravelGUID = $("#TypeOfTravelGUID").val();
                var _PurposeOfMission = $("#PurposeOfMission").val();
                var _HasDamascusTransit = $("#HasDamascusTransit").val();
                var _IsMissionCombinedWithLeave = $("#IsMissionCombinedWithLeave").val();
                var _IsMissionCombinedWithRR = $("#IsMissionCombinedWithRR").val();
                var _RestAndRecuperationLeaveGUID = $("#RestAndRecuperationLeaveGUID").val();

                var _Comments = $("#Comments").val();
                if (_TypeOfMissionGUID != null && _TypeOfMissionGUID == '') {
                    Notify(NotificationType.Warning, 'Please indicate mission type ');

                }

                else if (_TypeOfTravelGUID != null && _TypeOfTravelGUID == '') {
                    Notify(NotificationType.Warning, 'Please indicate travel type ');
                }
                else {



                    $.ajax({
                        url: '@Url.Action("UpdateMissionRequestFirstStep", "MissionRequest")',
                        type: 'post',
                        data: {
                            _ItemRequestGUID: _ItemRequestGUID,
                            _TypeOfMissionGUID: _TypeOfMissionGUID,
                            _TypeOfTravelGUID: _TypeOfTravelGUID,
                            _HasDamascusTransit: _HasDamascusTransit,
                            _IsMissionCombinedWithLeave: _IsMissionCombinedWithLeave,
                            _IsMissionCombinedWithRR: _IsMissionCombinedWithRR,


                            //ShelfGUID: $scope.ShelfGUID,
                            //MetaDataDocumentsGUIDs: $scope.MetaDataDocumentsGUIDs
                        },
                        success: function (data) {
                            if (data.success == 1) {
                                $('#step2InfoBox').show();
                                $('.showstep3body').show();
                                $('#showEditStep3id').hide();

                                $('#step4checkid').hide();
                                $('html, body').animate({
                                    scrollTop: $("#step2InfoBox").offset().top
                                }, 2000);
                                $('.showfooterstep2').show();
                                $('#movetosetp2id').hide();
                                Notify(NotificationType.Success, 'Saved successfully');
                                //  $scope.mysearchKey = null;

                            }
                            else {

                                Notify(NotificationType.Warning, 'Warning');
                            }



                        }
                    });


                }
            }


            var MoveToStep3 = function () {



                $('#step3InfoBox').show();
                $('.showstep3body').show();
                //$('#showEditStep3id').hide();

                $('#step4checkid').hide();
                $('html, body').animate({
                    scrollTop: $("#step3InfoBox").offset().top
                }, 2000);
                $('.showfooterstep2').hide();
                //$('.beforstep2').hide();
                //$('.afterstep2').show();
            }

            var MoveToStep4 = function () {

                $('#step4InfoBox').show();
            }

            var MoveToStep5 = function () {

                $.ajax({
                    url: '@Url.Action("SubmitMissionRequestToAdmin", "MissionRequest")',
                    type: 'post',
                    data: {
                        _ItemRequestGUID: _ItemRequestGUID,
                    },
                    success: function (data) {
                        if (data.success == 1) {

                            //$('#showEditStep3id').hide();



                            $('.showfooterstep4').hide();

                            Notify(NotificationType.Success, 'Saved successfully');
                            //  $scope.mysearchKey = null;

                        }
                        else {

                            Notify(NotificationType.Warning, 'Warning');
                        }



                    }
                });
            }
         var CancelMissionRequest = function () {

                      $.ajax({
                        url: '@Url.Action("CancelMissionRequest", "MissionRequest")',
                        type: 'post',
                        data: {
                            _ItemRequestGUID: _ItemRequestGUID,
                                   },
                        success: function (data) {
                            if (data.success == 1) {

                                //$('#showEditStep3id').hide();



                                $('.showfooterstep4').hide();

                                Notify(NotificationType.Success, 'Saved successfully');
                                //  $scope.mysearchKey = null;

                            }
                            else {

                                Notify(NotificationType.Warning, 'Warning');
                            }



                        }
                      });



            }


            $(document).on('click', ".NewLocation", function () {
                var Error = 0;
                var DropDownUpdate = "";
                var LocationlevelID = '0';
                var LocationTypeGUID = '';
                var CountryGUID = '';
                var LocationParentGUID = '';
                if ($(this).hasClass("FromLocation")) {
                    DropDownUpdate = "FromLocation";
                    LocationlevelID = 1;
                    LocationTypeGUID = 'c970ddf5-31e5-47a1-be76-af15833d4e6a';
                    if ($('#CountryGUID').val() == "") {
                        Notify(NotificationType.Warning, "Please Choose Departure Country!");
                        Error = 1;
                    } else {
                        CountryGUID = $('#CountryGUID').val();
                        LocationParentGUID = $('#CountryGUID').val();
                    }
                }

                if (Error != 1) {
                    $.confirm({
                        title: 'Add New Location',
                        content: '' +
                            '<form action="" class="main-form"  id="LocationForm" method="post">' +
                            '<div class="form-group">' +
                            '<label>Location Description</label>' +
                            '<input type="LocationDescription" id="LocationDescription" name="LocationDescription" placeholder="Location" class="name form-control" required />' +
                            '</div>' +
                            '<input class="PK" data-val="true" id="LocationGUID" name="LocationGUID" type="hidden" value="00000000-0000-0000-0000-000000000000">' +
                            '<input data-val="true" id="Active" name="Active" type="hidden" value="False">' +
                            '<input id="LocationlevelID" name="LocationlevelID" type="hidden" value="' + LocationlevelID + '">' +
                            '<input id="LocationTypeGUID" name="LocationTypeGUID" type="hidden" value="' + LocationTypeGUID + '">' +
                            '<input id="CountryGUID" name="CountryGUID" type="hidden" value="' + CountryGUID + '">' +
                            '<input id="LocationParentGUID" name="LocationParentGUID" type="hidden" value="' + LocationParentGUID + '">' +
                            '<input id="Latitude" name="Latitude" type="hidden" value="0">' +
                            '<input id="Longitude" name="Longitude" type="hidden" value="0">' +
                            '<input id="codeLocationsRowVersion" name="codeLocationsRowVersion" type="hidden" value="">' +
                            '<input id="codeLocationsLanguagesRowVersion" name="codeLocationsLanguagesRowVersion" type="hidden" value="">' +
                            '</form>',
                        buttons: {
                            formSubmit: {
                                text: 'Submit',
                                btnClass: 'btn-blue',
                                action: function () {
                                    var form = $('#LocationForm');
                                    var formData = form.serialize();

                                    $.ajax({
                                        type: "Post",
                                        url: "/AHD/MissionRequest/LocationCreate",
                                        dataType: "json",
                                        data: formData,
                                        success: function (response) {
                                            if (DropDownUpdate == "FromLocation") {
                                                UpdateDropDownList([$('#CountryGUID').val()], [{ DropDownListID: 'StartLocationGUID', Action: 'RemoteLocationsByGovernorate' }]);
                                            }

                                            Notify(NotificationType.Success, response.data);
                                        },
                                        error: function (errorStatus) {
                                            DecideWhenLoadComplete();
                                        }
                                    });

                                }
                            },
                            cancel: function () {
                                //close
                            },
                        },
                        onContentReady: function () {
                            // bind to events
                            var jc = this;
                            this.$content.find('form').on('submit', function (e) {
                                // if the user submits the form by pressing enter in the field.
                                //e.preventDefault();
                                jc.$$formSubmit.trigger('click'); // reference the button and click it
                                alert("");
                            });
                        }
                    });
                }
            });



















</script>
