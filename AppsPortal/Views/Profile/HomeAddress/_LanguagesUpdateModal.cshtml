@model userHomeAddressLanguage
@using (Html.BeginForm("HomeAddressLanguage", "Profile", FormMethod.Post, new { id = "HomeAddressLanguage" }))
{
    string ModalTitle = Model.HomeAddressLanguageGUID.ToString() == Guid.Empty.ToString() ? resxPages.NameLanguageNew : resxPages.NameLanguageEdit;
    @Html.Partial("_ModalHeader", ModalTitle)
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserGUID)
        @Html.HiddenFor(model => model.HomeAddressLanguageGUID, new { @class = "PK" })
        @Html.HiddenFor(model => model.userHomeAddressLanguageRowVersion)
        @Html.HiddenFor(model => model.Active)
        <div class="form-group row">
            @Html.LabelFor(model => model.LanguageID, new { @class = "col-sm-3 col-form-label" })
            <div class="col-sm-9">
                <div class="input-group">
                    @Html.DropDownListFor(model => model.LanguageID, new DropDownList().Languages(false), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.LanguageID)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.HomeAddress, new { @class = "col-sm-3 col-form-label" })
            <div class="col-sm-9">
                <div class="input-group">
                    @Html.EditorFor(model => model.HomeAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.HomeAddress)
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer form-footer">
        @if (Model.HomeAddressLanguageGUID == Guid.Empty)
        {
            @Html.CreateButton()
        }
        else
        {
            if (Model.Active)
            {
                @Html.UpdateButton()
                @Html.DeleteSwitchButton()
            }
            else
            {
                @Html.RestoreSwitchButton()
            }
        }
        @Html.CloseModalButton()
    </div>
}
