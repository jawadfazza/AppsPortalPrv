<!DOCTYPE html>
<html>
@model MissionReportFormUpdateModel
@{
    ViewBag.Title = "IMS";
    Layout = "~/Views/Shared/Layouts/_SiteLayout.cshtml";
}
<head>
    <meta charset='utf-8'/>
    <title>Create a draggable Marker</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/>
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css' rel='stylesheet'/>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            /*position: absolute;
                top: 0;
                bottom: 0;*/
            width: 100%;
            /*height: 100%;*/
        }
    </style>
</head>
<body>
<style>
    .coordinates {
        background: rgba(0, 0, 0, 0.5);
        color: #fff;
        position: fixed;
        bottom: 10px;
        left: 10px;
        padding: 5px 10px;
        margin: 0;
        font-size: 11px;
        line-height: 18px;
        border-radius: 3px;
        display: none;
    }
</style>


<div class="page--content">
<div class="forms-fadeIn">

<div class="panel-body">
@using (Html.BeginForm("MissionReportFormCreate", "MissionReportForm", new {Area = "IMS"}, FormMethod.Post, new {id = "MissonReportForm", @class = "main-form"}))
{
    @Html.AntiForgeryToken()
    <div class="panel-group">
    <div class="panel panel-default">
    <div class="panel-heading">Mission Report</div>
    <div class="panel-body">
    <div class="panel panel-default">
        <div class="panel-heading">Destination</div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group HANDLER">
                            @Html.LabelFor(model => model.MissionStartDate) *
                            @Html.EditorFor(model => model.MissionStartDate, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })

                        </div>

                    </div>
                    <div class="col-md-3">
                        <div class="form-group HANDLER">
                            @Html.LabelFor(model => model.MissionEndDate)
                            @Html.EditorFor(model => model.MissionEndDate, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })

                        </div>

                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.MissionStatusGUID) *


                        @Html.DropDownListFor(model => model.MissionStatusGUID, new DropDownList().MissionStatus(), "", new { style = "width:100%", @class = "form-control select2-basic-search" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.DutyStationGUID) *


                        @Html.DropDownListFor(model => model.DutyStationGUID, new DropDownList().SyriaDutyStations(), "", new { style = "width:100%", @class = "form-control select2-basic-search" })
                    </div>

                </div>
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group HANDLER">
                            @Html.LabelFor(model => model.GovernorateGUID) *
                            @Html.DropDownListFor(model => model.GovernorateGUID, new DropDownList().Governorates(Guid.Parse("699287E8-754D-4A63-B8DD-5344CFBAFD22")), "", new
                    {
                        @class = "form-control select2-basic-search",
                        style = "width:100%",
                        onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'DistrictGUID', Action : 'RemoteDistricts'}]);"
                    })
                        </div>

                    </div>
                    <div class="col-md-3">
                        <div class="form-group HANDLER">
                            @Html.LabelFor(model => model.DistrictGUID) *
                            @Html.DropDownListFor(model => model.DistrictGUID, new DropDownList().Empty(), "", new
                    {
                        @class = "form-control select2-basic-search",
                        style = "width:100%",
                        onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'SubDistrictGUID', Action : 'RemoteSubDistricts'}]);"
                    })
                        </div>

                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SubDistrictGUID) *

                            @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                            @Html.DropDownListFor(model => model.SubDistrictGUID, new DropDownList().Empty(), "",
                             new
                             {
                                 style = "width:100%",
                                 @class = "form-control select2-basic-search",
                                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'CommunityGUID', Action : 'RemoteCommunities'}]);"
                             })
                        </div>

                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CommunityGUID) *
                            @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                            @Html.DropDownListFor(model => model.CommunityGUID, new DropDownList().Empty(), "",
                             new
                             {
                                 style = "width:100%",
                                 @class = "form-control select2-basic-search",
                                        //onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'RequesterNameGUID', Action : 'RemoteWarehouseRequestTypes'}]);"
                                    })
                        </div>

                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="col-md-6 ">
                            @Html.LabelFor(model => model.Address)
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })
                        </div>
                        <div class="col-md-6 ">
                            @Html.LabelFor(model => model.MissionFormDepartments) *
                            @Html.DropDownListFor(model => model.MissionFormDepartments, new DropDownList().Departments(), "",
                             new
                             {
                                 style = "width:100%",
                                 @class = "form-control select2-basic-search",
                                 Multiple = true
                             })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.MissionLeaderGUID) *
                                @Html.DropDownListFor(model => model.MissionLeaderGUID, new DropDownList().Users(true), "", new { style = "width:100%", @class = "form-control select2-basic-search" })


                            </div>
                            <div class="col-md-9">
                                @Html.LabelFor(model => model.MissionStaffMembers) *
                                @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                                @Html.DropDownListFor(model => model.MissionStaffMembers, new DropDownList().Users(true), "",
                                 new
                                 {
                                     style = "width:100%",
                                     @class = "form-control select2-basic-search",
                                     Multiple = true
                                 })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
     
            <div class="form-group"> *
                <div class="col-md-12">
                    <div id="map" style='width: 100%; height: 400px;' class='map'></div>
                    <pre id='coordinates' class='coordinates'></pre>
                </div>
                <div class="col-md-12 pull-right">
                    <div class="col-md-3">
                        <div class="form-group HANDLER">
                            @Html.LabelFor(model => model.Latitude)
                            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })
                        </div>

                    </div>
                    <div class="col-md-3">
                        <div class="form-group HANDLER">
                            @Html.LabelFor(model => model.Longitude)
                            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })
                        </div>

                    </div>


                </div>
            </div>
          


        </div>
    </div>
        
    <div class="panel panel-default">
        <div class="panel-heading">Mission Plan</div>
        <div class="panel-body">
            <div class="form-group">

                <div class="col-md-6">
                    @Html.LabelFor(model => model.MissionStaffMembers)
                    @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                    @Html.DropDownListFor(model => model.MissionStaffMembers, new DropDownList().Users(true), "",
                        new
                        {
                            style = "width:100%",
                            @class = "form-control select2-basic-search",
                            Multiple = true
                        })
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.VisitObjectives)
                    @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                    @Html.DropDownListFor(model => model.VisitObjectives, new DropDownList().VisitObjectives(), "",
                        new
                        {
                            style = "width:100%",
                            @class = "form-control select2-basic-search",
                            Multiple = true
                        })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.HumanitarianNeeds)
                    @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                    @Html.DropDownListFor(model => model.HumanitarianNeeds, new DropDownList().HumanitarianNeeds(), "",
                        new
                        {
                            style = "width:100%",
                            @class = "form-control select2-basic-search",
                            Multiple = true
                        })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.OngoingResponses)
                    @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                    @Html.DropDownListFor(model => model.OngoingResponses, new DropDownList().OngoingResponses(), "",
                        new
                        {
                            style = "width:100%",
                            @class = "form-control select2-basic-search",
                            Multiple = true
                        })

                </div>


            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.MissionChallenges)
                    @*@Html.DropDownListFor(model => model.ItemModelWarehouseGUID, new DropDownList().WarehouseModels(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@
                    @Html.DropDownListFor(model => model.MissionChallenges, new DropDownList().MissionChallenges(), "",
                        new
                        {
                            style = "width:100%",
                            @class = "form-control select2-basic-search",
                            Multiple = true
                        })

                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.LinkToMissionReport)
                    @Html.EditorFor(model => model.LinkToMissionReport, new {htmlAttributes = new {@class = "form-control PageTitle abc", autocomplete = "off"}})

                </div>


            </div>


        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">Mission Results</div>
        <div class="panel-body">
            <div class="form-group">
                <div class="form-group">
                    <div class="col-md-12">

                        <div class="col-md-6">

                            @Html.CheckBoxFor(model => model.IsAnyPresenceOtherOrganization, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })
                            @Html.Label("Is there a Presence of Other Organizations?")
                        </div>
                        <div class="col-md-6">

                            @Html.CheckBoxFor(model => model.IsThereMissionReport, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })
                            @Html.Label("Is There A Mission Report For This Mission?")
                        </div>
                    </div>
                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.Gaps)
                    @Html.TextAreaFor(model => model.Gaps, new { @class = "form-control", rows = 3 })


                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.Recommendations)
                    @Html.TextAreaFor(model => model.Recommendations, new { @class = "form-control", rows = 3 })


                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.ActionRequired)
                    @Html.TextAreaFor(model => model.ActionRequired, new { @class = "form-control", rows = 3 })


                </div>


            </div>


        </div>
    </div>




    </div>
    <div class="panel-footer">

        <input type="submit" value="Save Changes" class="btn btn-primary"/>

    </div>
    </div>
    </div>
}

</div>
</div>
</div>


<script src="https://unpkg.com/supercluster@4.1.1/dist/supercluster.min.js"></script>


<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.min.js'></script>
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.css' type='text/css'/>
<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoibWFrc291ZCIsImEiOiJjam9lNGV5ZWkwNWFkM3RwaTJzY3k5dXUzIn0.2dJy6LxlyhA_2sjgqTFkCQ';
    var coordinates = document.getElementById('coordinates');
    var map = new mapboxgl.Map({
        container: 'map',

        style: 'mapbox://styles/mapbox/streets-v10',
        center: [38.23242187500426, 33.69486597787042],
        zoom: 5
    });
    mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.0/mapbox-gl-rtl-text.js');
    this.map.on('load', () => {
        this.map.resize();
    });  
    var geojson = [
        {
            type: 'Feature',
            geometry: {
                type: 'Point',
                coordinates: [-77.031952, 38.913184]
            },
            properties: {
                'marker-color': '#3bb2d0',
                'marker-size': 'large',
                'marker-symbol': 'rocket'
            }
        },
        {
            type: 'Feature',
            geometry: {
                type: 'Point',
                coordinates: [-122.413682, 37.775408]
            },
            properties: {
                'marker-color': '#3bb2d0',
                'marker-size': 'large',
                'marker-symbol': 'rocket'
            }
        }
    ];


    var marker = new mapboxgl.Marker({
            draggable: true,


        })
        .setLngLat([38.23242187500426, 33.69486597787042])
        .addTo(map);


    map.addControl(new MapboxGeocoder({
        accessToken: mapboxgl.accessToken
    }));
    //var changeMarker = function () {

    //    marker.remove();
    //    marker = new mapboxgl.Marker({
    //            draggable: true,


    //        }).addTo(map);
    //    //    .addTo(map);

    //}


    map.on('click',
        function(e) {
            marker.remove();

            document.getElementById('coordinates').innerHTML =
                // e.point is the x, y coordinates of the mousemove event relative
                // to the top-left corner of the map
                JSON.stringify(e.point) +
                '<br />' +
                // e.lngLat is the longitude, latitude geographical position of the event
                JSON.stringify(e.lngLat);
            marker = new mapboxgl.Marker()
                .setLngLat(e.lngLat)
                .addTo(map);

            var lngLat = marker.getLngLat();
            coordinates.style.display = 'block';
            coordinates.innerHTML = 'Longitude: ' + lngLat.lng + '<br />Latitude: ' + lngLat.lat;
            $("#Latitude").val(lngLat.lng);
            $("#longitude").val(lngLat.lat);
            $("#altitude").val(lngLat.altitude);


        });


    //map.on('click', addMarker());

    function addMarker(e) {
        if (typeof circleMarker !== "undefined") {
            map.removeLayer(circleMarker);
        }
        onDragEnd();
        document.getElementById('info').innerHTML =
            // e.point is the x, y coordinates of the mousemove event relative
            // to the top-left corner of the map
            JSON.stringify(e.point) +
            '<br />' +
            // e.lngLat is the longitude, latitude geographical position of the event
            JSON.stringify(e.lngLat);


        var marker1 = new mapboxgl.Marker()
            .setLngLat([30.5, 50.5])
            .addTo(map);


    }
    //function addMarker(e){
    //    if (typeof circleMarker !== "undefined" ){
    //        map.removeLayer(circleMarker);
    //    }
    //    //add marker
    //    circleMarker = new  L.circle(e.latlng, 200, {
    //        color: 'red',
    //        fillColor: '#f03',
    //        fillOpacity: 0.5
    //    }).addTo(map);
    //}


    map.addControl(new mapboxgl.NavigationControl());

    function onDragEnd() {
        var lngLat = marker.getLngLat();
        coordinates.style.display = 'block';
        coordinates.innerHTML = 'Longitude: ' + lngLat.lng + '<br />Latitude: ' + lngLat.lat;
        $("#Latitude").val(lngLat.lng);
        $("#longitude").val(lngLat.lat);
        $("#altitude").val(lngLat.altitude);

    }

    marker.on('dragend', onDragEnd);


</script>
</body>
</html>