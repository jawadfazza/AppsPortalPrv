@model dataPersonalHistoryLicenceAndCertificateUpdateModel

@using (Html.BeginForm("LicencesAndCertificates", "Applications", new { Area = "GTP" }, FormMethod.Post, new { id = "LicencesAndCertificatesForm", @class = "main-form" }))
{
    string ModalTitle = Model.GTPPHLicenceGUID.ToString() == Guid.Empty.ToString() ? "Add new licence / certificate" : "update licence / certificate";
    @Html.Partial("_ModalHeader", ModalTitle)

    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.FormHiddenFields(model => model.GTPPHLicenceGUID)

        <div class="col-md-12">
            <div class="row" style="padding-top:10px;">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LicenceIssueDate)
                        @Html.EditorFor(model => model.LicenceIssueDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LicenceExpirationDate)
                        @Html.EditorFor(model => model.LicenceExpirationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LicenceDescription)
                        @Html.EditorFor(model => model.LicenceDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="div-country-city-container">


                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryGUID)
                            @Html.DropDownListFor(model => model.CountryGUID, new DropDownList().GTPCountries(), "",
                         new
                              {
                             @class = "form-control select2-basic-search",
                             style = "width:100%",
                             onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'CityGUID', Action : 'RemoteGTPCities'}]);"
                         })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CityGUID)
                            @if (Model.CountryGUID != null)
                            {
                                @Html.DropDownListFor(model => model.CityGUID, new DropDownList().GTPCities(Model.CountryGUID.Value), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.CityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsLicenceRenewalInProgres)
                        @if (Model.IsLicenceRenewalInProgres != null)
                        {
                            @Html.DropDownListFor(model => model.IsLicenceRenewalInProgres, new DropDownList().GTPYesNo(Model.IsLicenceRenewalInProgres.Value), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.IsLicenceRenewalInProgres, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                        }
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LicenceNumber)
                        @Html.EditorFor(model => model.LicenceNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LicenceIssuedBy)
                        @Html.EditorFor(model => model.LicenceIssuedBy, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="modal-footer form-footer">
        @if (Model.GTPPHLicenceGUID == Guid.Empty)
        {
            @Html.CreateButtonNoPermission()
        }
        else
        {
            if (Model.Active)
            {
                @Html.UpdateButtonNoPermission()
                @Html.DeleteSwitchButtonNoPermission()
            }
            else
            {
                @Html.RestoreSwitchButtonNoPermission()
            }
        }
        @Html.CloseModalButton()

    </div>
}
