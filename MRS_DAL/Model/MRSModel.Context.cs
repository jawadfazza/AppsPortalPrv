//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MRS_DAL.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MRSEntities : DbContext
    {
        public MRSEntities()
            : base("name=MRSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<dataNoteVerbaleOrganization> dataNoteVerbaleOrganization { get; set; }
        public virtual DbSet<userPersonalDetailsLanguage> userPersonalDetailsLanguage { get; set; }
        public virtual DbSet<codeLocations> codeLocations { get; set; }
        public virtual DbSet<codeLocationsLanguages> codeLocationsLanguages { get; set; }
        public virtual DbSet<codeReferralStatus> codeReferralStatus { get; set; }
        public virtual DbSet<codeReferralStatusLanguage> codeReferralStatusLanguage { get; set; }
        public virtual DbSet<codeOrganizationsInstances> codeOrganizationsInstances { get; set; }
        public virtual DbSet<codeOrganizationsInstancesLanguages> codeOrganizationsInstancesLanguages { get; set; }
        public virtual DbSet<codeDutyStationsLanguages> codeDutyStationsLanguages { get; set; }
        public virtual DbSet<codeTablesValues> codeTablesValues { get; set; }
        public virtual DbSet<codeTablesValuesLanguages> codeTablesValuesLanguages { get; set; }
        public virtual DbSet<codeVehicle> codeVehicle { get; set; }
        public virtual DbSet<dataNoteVerbale> dataNoteVerbale { get; set; }
        public virtual DbSet<dataNoteVerbaleVehicle> dataNoteVerbaleVehicle { get; set; }
        public virtual DbSet<dataNoteVerbaleStaff> dataNoteVerbaleStaff { get; set; }
    
        public virtual ObjectResult<string> RP_NoteVerbaleOrganization(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RP_NoteVerbaleOrganization", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<RP_NoteVerbaleStaff_Result> RP_NoteVerbaleStaff(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_NoteVerbaleStaff_Result>("RP_NoteVerbaleStaff", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<RP_NoteVerbaleVehicle_Result> RP_NoteVerbaleVehicle(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_NoteVerbaleVehicle_Result>("RP_NoteVerbaleVehicle", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<string> RP_NoteVerbaleOrg(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RP_NoteVerbaleOrg", noteVerbaleGUIDParameter, lanParameter);
        }
    
        public virtual ObjectResult<RP_NoteVerbale_Result> RP_NoteVerbale(Nullable<System.Guid> noteVerbaleGUID, string lan)
        {
            var noteVerbaleGUIDParameter = noteVerbaleGUID.HasValue ?
                new ObjectParameter("NoteVerbaleGUID", noteVerbaleGUID) :
                new ObjectParameter("NoteVerbaleGUID", typeof(System.Guid));
    
            var lanParameter = lan != null ?
                new ObjectParameter("Lan", lan) :
                new ObjectParameter("Lan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RP_NoteVerbale_Result>("RP_NoteVerbale", noteVerbaleGUIDParameter, lanParameter);
        }
    }
}
