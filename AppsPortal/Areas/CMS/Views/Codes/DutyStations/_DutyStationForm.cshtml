@model DutyStationsUpdateModel
@using (Html.BeginForm("DutyStation", "Codes", new { Area = "CMS" }, FormMethod.Post, new { id = "DutyStationForm", @class = "main-form" }))
{
    <h3>@resxPages.Details</h3>
    @Html.AntiForgeryToken()
    @Html.FormHiddenFields(model => model.DutyStationGUID)

    <div class="form-group">
        @Html.LabelFor(model => model.DutyStationDescription)
        @Html.EditorFor(model => model.DutyStationDescription, new { htmlAttributes = new { @class = "form-control PageTitle abc", autocomplete = "off" } })
    </div>
    <div class="form-group HANDLER">
        @Html.LabelFor(model => model.CountryGUID)
        @Html.DropDownListFor(model => model.CountryGUID, new DropDownList().Countries(), new { @class = "form-control select2-basic-search", style = "width:100%" })
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-xs-12">
                @Html.Partial("_SearchLocation", new MapModel { Height = "450px", Zoom = 6, Latitude = Model.Latitude, Longitude = Model.Longitude })
            </div>
        </div>
    </div>
    <div id="DutyStationFormControls" class="form-group form-footer">
        @if (Model.DutyStationGUID == Guid.Empty)
                {
            @Html.CreateButton(Permissions.DutyStations.Create, Apps.CMS)
        }
        else
        {
            if (Model.Active)
            {
                @Html.UpdateButton(Permissions.DutyStations.Update, Apps.CMS)
                @Html.CreateNewButton(Permissions.DutyStations.Create, Apps.CMS, Url.Action("DutyStations/Create", "Codes", new { Area = "CMS" }))
                @Html.DeleteButton(Permissions.DutyStations.Delete, Apps.CMS)
            }
            else
            {
                @Html.RestoreButton(Permissions.DutyStations.Restore, Apps.CMS)
            }
        }
        @Html.BackToList(Url.Action("DutyStations", "Codes", new { Area = "CMS" }))
    </div>
}
