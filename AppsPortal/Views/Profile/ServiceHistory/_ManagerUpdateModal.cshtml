@model userManagersHistory
@using (Html.BeginForm("Manager", "Profile", FormMethod.Post, new { id = "ManagerForm" }))
{
    string ModalTitle = Model.UserManagersHistoryGUID.ToString() == Guid.Empty.ToString() ? resxPages.ManagerNew : resxPages.ManagerEdit;
    @Html.Partial("_ModalHeader", ModalTitle)
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.FormHiddenFields(model => model.UserManagersHistoryGUID)
        @Html.HiddenFor(model => model.UserProfileGUID)
        <div class="form-group">
            @Html.LabelFor(model => model.ManagerGUID)
            @Html.DropDownListFor(model => model.ManagerGUID, new DropDownList().Users(false), "", new {
            @class = "form-control select2-basic-search",
            style = "width:100%" })
        </div>
        <div class="row">
            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.ManagerTypeGUID)
                @Html.DropDownListFor(model => model.ManagerTypeGUID, new DropDownList().ManagerTypes(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.FromDate)
                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>
    </div>
    <div class="modal-footer form-footer">
        @if (Model.UserManagersHistoryGUID == Guid.Empty)
        {
            @Html.CreateButton()
        }
        else
        {
            if (Model.Active)
            {
                @Html.UpdateButton()
                @Html.DeleteSwitchButton()
            }
        }
        @Html.CloseModalButton()
        </div>
}
