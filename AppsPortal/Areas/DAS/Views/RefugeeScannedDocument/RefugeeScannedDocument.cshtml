@model ScannNewDocumentModel
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/Layouts/_SiteLayout.cshtml";
}
@{string PageTitle = (Model.ScannDocumentGUID == Guid.Empty) ? "Search  Document " : "Search Document"; }
<link href="~/Assets/Plugin/bootstrap-multiselect/bootstrap-multiselect.css" rel="stylesheet" />
@Html.PageHeader("3daaeff4-eba6-4427-9f8e-ed34a1ec5aeb")
<div data-ng-app="myApp">
    <div data-ng-controller="MyCtrl">

        <div class="page--content">
            <div id="TabContainer">
                <div id="exTab1">
                    <ul class="nav nav-pills">

                        <li class="active">
                            <a href="#FileTransferHistory" data-toggle="tab">  Transfer History</a>
                        </li>
                        <li>
                            <a href="#FileLocationMovementTracking" data-toggle="tab"> File Locations</a>
                        </li>
                        <li>
                            <a href="#OldFtsHistory" data-toggle="tab"> Old FTS History</a>
                        </li>
                        <li>
                            <a href="#FileImages" data-toggle="tab">File Images </a>
                        </li>
                        <li>
                            <a href="#FileVersionsHistory" data-toggle="tab">File Image Versions</a>
                        </li>
                        <li>

                    </ul>
                </div>
                <div class="tab-content clearfix">



                    <div class="tab-pane active" id="FileTransferHistory">
                        @Html.Partial("~/Areas/DAS/Views/FileTransfer/_TransferFileHistoryDataTable.cshtml", new MasterRecordStatus { ParentGUID = (Guid)Model.FileGUID, IsParentActive = Model.Active })
                    </div>
                    <div class="tab-pane" id="FileLocationMovementTracking">
                        @Html.Partial("~/Areas/DAS/Views/FileLocationMovement/_FileLocationMovementDataTable.cshtml", new ScannNewDocumentModel { FileGUID = (Guid)Model.FileGUID, Active = Model.Active, OwnedByStaff = Model.OwnedByStaff })
                    </div>
                    <div class="tab-pane" id="OldFtsHistory">
                        @Html.Partial("~/Areas/DAS/Views/OldFTS/_OldFTSFileMovementDataTable.cshtml", new ScannNewDocumentModel { FileGUID = (Guid)Model.FileGUID, Active = Model.Active, OwnedByStaff = Model.OwnedByStaff })
                    </div>
                    <div class="tab-pane" id="FileImages">


                        <div class="form-group">
                            @Html.HiddenFor(m => m.FileNumber)

                            <div class="form-group"></div>

                            <div>
                                @Html.Partial("~/Areas/DAS/Views/RefugeeScannedDocument/_FileResult.cshtml", Model)
                            </div>

                            <div class="overlay">
                                <i class="fa fa-refresh fa-spin"></i>
                            </div>
                        </div>
                        <div>
                            <form id="form1" action="~/ScanDocument/SaveImagesSannned" method="POST" enctype="multipart/form-data" target="_blank">
                                <input type="hidden" name="mysearchKey" value="{{mysearchKey}}" />
                                <input type="hidden" name="New" value="{{New}}" />

                            </form>
                        </div>
                        <div>

                            <form id="form2" action="~/ScanDocument/SavwNewSacanImages" method="POST" enctype="multipart/form-data" target="_blank">

                                <input type="hidden" name="mysearchKey" value="{{mysearchKey}}" ng-model="mysearchKey" />
                                <input type='hidden' value='' id='txt_id' name="ImageId">
                                <input type='hidden' value='' id='txt_dir_scan' name="dir_scan">

                            </form>
                        </div>
                        <div class='context-menu'>
                            <ul class="form-group-lg form-control-highlight">
                                <li><span class='Delete'></span>&nbsp;<span>Delete </span></li>
                                <li><span class='NewScanafter'></span>&nbsp;<span>New Scan after</span> </li>
                                <li><span class='NewScanbefor'></span>&nbsp;<span>New Scan befor</span> </li>
                                <li><span class='MetaData'></span>&nbsp;<span>Add Meta Data</span></li>
                            </ul>
                        </div>
                        <input type='hidden' value='' id='txt_id'>

                    </div>

                    <div class="tab-pane" id="FileVersionsHistory">



                    </div>

                    <div class="tab-pane" id="ProfileContainer">
                        <div class="forms-fadeIn ">

                        </div>
                    </div>
                </div>


            </div>


        </div>

    </div>
</div>

<script src="~/Assets/Plugin/ScannerJs/scanner.js"></script>
<script src="~/Assets/Plugin/bootstrap-multiselect/bootstrap-multiselect.js"></script>

<script src="~/Assets/Plugin/Zooming/zoomerang.js"></script>
<script src="~/Assets/Plugin/contexmenu/jquery.contextmenu.min.js"></script>
<script>

    var myApp = angular.module('myApp', []);
    //Controller
    myApp.controller('MyCtrl',
        [
            '$scope', '$http', '$timeout', '$window',
            function ($scope, $http, $timeout, $window) {

                    //Rest vars -
                    $scope.ResetPage = function () {
                        $('#verifyScanId').hide();
                        $scope.FileResultShow = false;
                        $scope.form1 = true;
                        $scope.FileResultShow = false;
                        $scope.ExistCaseShow = false;
                        $scope.NewCaseShow = false;
                        $scope.filename = null;
                        $scope.merge = false
                        $scope.ImageId1 = 0;
                        $scope.documentImagesShow = false;
                        $scope.NewScan = 0;

                }
                $scope.searchKey = $("#FileNumber").val();




                $scope.LoadModelTransferFile = function () {

                    var URL = "/DAS/ScanDocument/GetTransferFile?id=" + $scope.searchKey;
                    $('#TranferFile').load(URL,
                        function () { });
                };
                $scope.ResetPage();
                    $("#searchKey").keypress(function (e) {
                        if (e.which == 13) {

                            $scope.ExecuteCaseSearch();
                        }
                    });
                $scope.SearchByKey = function () {

                        $scope.ResetPage();
                        if (!$scope.searchKey) {
                            $("#searchKey").val("Please check the case number ").css("color", "red")
                                .css("border-color", "red");

                            $('#searchKey').effect("shake", { times: 4 }, 300);
                        } else if ($scope.searchKey.length == 0 || $scope.searchKey.length < 5) {

                            $("#searchKey").val("Please check the case number ").css("color", "red")
                                .css("border-color", "red");
                            $('#searchKey').effect("shake", { times: 4 }, 300);
                        } else {

                            $scope.ExecuteCaseSearch();
                        }
                }



                    $scope.ExecuteCaseSearch = function () {
                        if ($scope.searchKey) {
                            $(':button').prop('disabled', true);
                            $scope.FileResult = null;
                            $('#verifyScanId').show();
                            $scope.mysearchKey = $scope.searchKey;
                            $http({
                                method: 'POST',
                                url: "@Url.Action("SearchByCase", "ScanDocument")",
                                data: {
                                    searchKey: $scope.searchKey,
                                }
                            }).success(function (data) {
                                if (data.success == 0) {
                                    Notify(NotificationType.Warning, 'Warning');
                                }
                                else {
                                    $scope.FileResult = data.result;
                                    $scope.FileResultShow = true;
                                    $scope.codeCabinets = data.codeCabinets;
                                    $scope.codeCabinetShelfs = data.codeCabinetShelfs;
                                    $scope.codeMetaDatas = data.codeMetaDatas;
                                    $scope.MergeFiles = data.ScannDocumentGUID;
                                    $scope.New = data.isNew;
                                    $scope.currentUserScannerSetting = data.currentUserScannerSetting;
                                    var idm = $scope.searchKey;

                                    //$("#fileTransferId").attr("href",
                                    //    "/DAS/ScanDocument/GetTransferFile?id=" + idm);
                                    $('select').select2();

                                    if (data.isNew == 1) {
                                        $scope.NewCaseShow = true;
                                    }
                                    else {

                                        $scope.VersionNumber = data.VersionNumber;
                                        $scope.ExistCaseShow = true;
                                        $('select').select2();
                                        $scope.documentImagesShow = true;

                                        $scope.ReadImagesToShow();
                                    }

                                }
                                $(':button').prop('disabled', false);
                                $('#verifyScanId').hide();

                            })
                        }
                    }


                    $("#searchKey").focusin(function () {

                        $("#searchKey").val("").css("color", "red").css("border-color", "red");
                    });

                $scope.SearchByKey();
                    $scope.convertToDate = function (data) {

                        return convertToDate(data);
                    }

                    //Scanner Settings
                    @*$scope.ShowScannerSettings = function () {
                        $scope.scannerSetting = null;


                        $http({
                            method: 'POST',
                            url: "@Url.Action("InitScannerSettings", "ScanDocument")",


                        }).success(function (data) {


                            $scope.ScanningTypes = data.ScanningTypes;
                            $scope.PaperSize = data.PaperSize;
                            $scope.ColorMode = data.ColorMode;
                            $scope.Resolution = data.Resolution;
                            $scope.PaperFormat = data.PaperFormat;

                        });
                    };*@
                    $scope.SaveScannerSettings = function () {
                        $http({
                            method: 'POST',
                            url: "@Url.Action("SaveScannerSettings","ScanDocument")",
                            data: { scannerSetting: $scope.scannerSetting }


                        }).success(function (data) {
                            if (data.success == 1) {
                                $scope.currentUserScannerSetting = data.currentUserScannerSetting;

                                //NotifyMessage("Success message", "Success ", "success", true);
                                Notify(NotificationType.Success, 'Success');

                            }
                            else {
                                NotifyMessage("Warnning Message",
                                    "Nothing change ",
                                    "warnning",
                                    true);
                                Notify(NotificationType.Warning, 'Warning');
                            }

                        });

                    }
                    //save imagesscanned in Temp

                    $scope.submitFormWithScannedImages = function () {

                        if (scanner.submitFormWithImages('form1', $scope.imagesScanned, function (xhr) {

                        if (xhr.readyState == 4) { // 4: request finished and response is ready

                            //NotifyMessage("Success message", "imagescanned save in Temp successfully ", "success", true);
                            Notify(NotificationType.Success, 'Saved successfully');

                                  $scope.ReadImagesToShow();
                                  $scope.documentImagesShow = true;
                                  $scope.imagesScanned = [];


                        }
                        })) {
                            //document.getElementById('server_response').innerHTML = "Submitting, please stand by ...";
                            //document.getElementById('server_response').innerHTML = "Form submission cancelled. Please scan first.";
                        }

                    }
                    ////submit for new scann
                    $scope.submitFormWithNewScannedImages = function () {

                        if (scanner.submitFormWithImages('form2', $scope.imagesScanned, function (xhr) {

                        if (xhr.readyState == 4) { // 4: request finished and response is ready

                            //NotifyMessage("Success message", "imagescanned save in Temp successfully ", "success", true);
                            Notify(NotificationType.Success, 'Saved successfully');

                                  $scope.ReadImagesToShow();
                                  $scope.documentImagesShow = true;
                                  $scope.imagesScanned = [];
                                  $scope.NewScan = 0;
                                   $("#txt_id").val("");



                        }
                        })) {
                                //document.getElementById('server_response').innerHTML = "Submitting, please stand by ...";
                                //document.getElementById('server_response').innerHTML = "Form submission cancelled. Please scan first.";
                        }

                    }
                    //read images from TEM
                    $scope.ReadImagesToShow = function () {


                        $http({
                            method: 'POST',
                            url: "@Url.Action("ReadImagesFromTem", "ScanDocument")",
                            data: { data: $scope.mysearchKey }


                        }).success(function (data) {
                            if (data.success == 1) {
                                // alert(5)
                                $scope.filename = data.filename1;
                                $scope.userGuid = data.userGuid;

                                //   alert($scope.filename)

                                //   NotifyMessage("Success message", " images save sucessfully", "success", true);
                            }
                            else {
                                Notify(NotificationType.Warning, 'Warning');
                            }

                        });

                    }
                    //save images finalFileResult
                    $scope.SaveFinal = function () {
                        $.ajax({
                            url: '@Url.Action("SaveFinal", "ScanDocument")',
                            type: 'post',
                            data: {
                                search: $scope.FileResult,
                                ShelfGUID: $scope.ShelfGUID,
                                MetaDataDocumentsGUIDs: $scope.MetaDataDocumentsGUIDs
                            },
                            success: function (data) {
                                if (data.success == 1) {
                                    $scope.ResetPage();
                                    $scope.imagesScanned = [];


                                    Notify(NotificationType.Success, 'Saved successfully');
                                    //  $scope.mysearchKey = null;

                                }
                                else {

                                    Notify(NotificationType.Warning, 'Warning');
                                }



                            }
                        });
                    }


                    $scope.ScannDocument = function () {

                        //if ($scope.currentUserScannerSetting == null) {

                        //  NotifyMessage("select your de....",
                        ///     "Nothing change ",
                        //   "warnning",
                        //  true);
                        //}
                        //else {


                        var idd = $scope.ImageId1;
                        $scope.ImageId2 = idd;
                        $scope.imagesScanned = [];

                        scanner.scan(displayImagesOnPage,
                            {
                                "source_name": "select",
                                "detect_blank_pages": true,
                                "prompt_scan_more": false,
                                "use_asprise_dialog": false,
                                "show_scanner_ui": false,
                                "twain_cap_setting": {
                                    "ICAP_PIXELTYPE": $scope.currentUserScannerSetting.ColorMode, // Preferrs GRAY, fall back Color; TWPT_BW
                                    // Resets a capability
                                    "ICAP_SUPPORTEDSIZES": $scope.currentUserScannerSetting.PaperSize,
                                    //TWSS_C8  TWSS_USLETTER  TWSS_USLEGAL  TWSS_USEXECUTIVE
                                    "ICAP_XRESOLUTION": $scope.currentUserScannerSetting.Resolution, // Sets the resolution
                                    "ICAP_YRESOLUTION": $scope.currentUserScannerSetting.Resolution, // Sets the resolution
                                    "CAP_FEEDERENABLED": true,// TW_BOOL, No default; TRUE to use ADF or FALSE to use Flatbed
                                    "CAP_AUTOFEED": true
                                    // "ICAP_FRAMES": "(0, 0, 4, 6)" // Scan part of the image only

                                },
                                "output_settings": [
                                    {  // "ICAP_PIXELTYPE": "TWPT_GRAY,TWPT_RGB",
                                        "type": "return-base64",
                                        "format": $scope.currentUserScannerSetting.format
                                    },
                                    {
                                        "type": "return-base64-thumbnail",
                                        "format": "jpg",
                                        "thumbnail_height": 100
                                    }
                                ]
                            }

                        );
                        //}
                    }

                    /** Processes the scan result */
                    function displayImagesOnPage(successful, mesg, response) {

                        if (successful == 0) {

                            return 0;
                        }


                        var scannedImages = scanner.getScannedImages(response, true, false); // returns an array of ScannedImage


                        for (var i = 0; (scannedImages instanceof Array) && i < scannedImages.length; i++) {

                            $scope.imagesScanned.push(scannedImages[i]);
                            // processThumbnailImage(scannedImages[i]);
                        }

                        if ($scope.NewScan == 0) {
                            //    alert($scope.NewScan)
                            $scope.submitFormWithScannedImages();
                        }
                        else {
                            //   alert($scope.NewScan)
                            $scope.submitFormWithNewScannedImages();
                        }




                        var scannedThumbnailImages = scanner.getScannedImages(response, false, true); // returns an array of ThumbnailImage

                        for (var i = 0; (scannedThumbnailImages instanceof Array) && i < scannedThumbnailImages.length; i++) {

                            //  processThumbnailImage(scannedThumbnailImages[i]);
                        }

                    }

                    /** Processes a thumnail pages */
                    function processThumbnailImage(scannedImage) {
                        // imagesScanned.push(scannedImage);

                        var elementImg = scanner.createDomElementFromModel({
                            'name': 'img',
                            'attributes': {
                                'class': 'scanned zoom thumb thumb-img',
                                'src': scannedImage.src,
                                'width': 200,


                            }
                        });


                        document.getElementById('images2').appendChild(elementImg);

                        //  enableZoom();
                    }
                    /// for delet image
                    $scope.DeleteImage = function () {
                        $http({
                            method: 'POST',
                            url: "@Url.Action("DeleteImage", "ScanDocument")",
                            data: {
                                CaseNumber: $scope.searchKey,
                                ImageId: $scope.ImageId
                            }
                        }).success(function (data) {
                            if (data.success == 1) {
                                $scope.ReadImagesToShow();
                                $scope.documentImagesShow = true;
                            }
                        });
                    }
                    /// for get meta data
                    $scope.getMetaDataInf = function () {

                        $('#modal-container2').modal('show');
                        $('#modal-container2 select').css('width', '100%');
                        $('select').select2();
                        $('#modal-container2 select').css('width', '100%');

                    }
                    //for merge file
                    /// for get meta data
                    $scope.getmergefile = function () {

                        $('#modal-container3').modal('show');
                        $('#modal-container3 select').css('width', '100%');
                        $('select').select2();
                        $('#modal-container3 select').css('width', '100%');

                    }

                    $scope.MergeFile = function () {

                        if ($scope.ScannDocumentGUID.length) {
                            $.ajax({
                                url: '@Url.Action("MergeFile", "ScanDocument")',
                                type: 'post',
                                data: {
                                    ScannDocumentGUID: $scope.ScannDocumentGUID,
                                    searchKey: $scope.searchKey
                                },
                                success: function (data) {
                                    $scope.filenames = data.filename;
                                    $scope.FileNumber = data.FileNumber;
                                    $scope.userGuid = data.userGuid;
                                    $scope.ReadImagesToShow();
                                    $('#modal-container3').modal('hide');
                                    Notify(NotificationType.Success, 'Saved successfully');
                                }
                            });
                        }
                        else {

                            Notify(NotificationType.Warnning, '"Kindly chose at least one meta data for this image');

                        }


                    }
                    // end merge
                    ///enf function meta data

                    $(document).ready(function () {
                        var message = [];
                        $(function () {
                            $('#Metadatalist').multiselect({
                                includeSelectAllOption: true,
                                buttonWidth: 250,
                                enableFiltering: true
                            });
                        });

                        $scope.SaveImageMetaData = function () {
                            if (1 == 1) {
                                $.ajax({
                                    url: '@Url.Action("SaveMetaDataImages", "ScanDocument")',
                                    type: 'post',
                                    data: {
                                        ImageId: $scope.ImageId,
                                        MetaDataGUIDs: $scope.MetaDataGUIDs
                                    },
                                    success: function (data) {
                                        message = [];
                                        $('#modal-container2').modal('hide');

                                        Notify(NotificationType.Success, 'Success');
                                    }
                                });
                            }
                            else {

                                Notify(NotificationType.Warnning, 'Kindly chose at least one meta data for this image');
                            }


                        }

                        var dropIndex;
                        $("#image-list").sortable({
                            update: function (event, ui) {
                                dropIndex = ui.item.index();
                            }
                        });
                        $('#SaveScannid').click(function (e) {
                            var imageIdsArray = [];
                            $('#image-list td').each(function (index) {
                                var id = $(this).attr('id');
                                imageIdsArray.push(id);
                            });
                            $.ajax({
                                url: '@Url.Action("UpdateItem", "ScanDocument")',
                                type: 'post',
                                data: { imageIds: imageIdsArray },
                                success: function (data) {

                                    console.log(data);
                                }
                            });
                            e.preventDefault();
                        });
                        // Hide context menu
                        $(document).bind('contextmenu click', function () {
                            $(".context-menu").hide();
                            //    $("#txt_id").val("");
                        });

                        // disable right click and show custom context menu
                        $('#DisplayImages').on('contextmenu', "td ", function (e) {

                            $scope.id = this.id;
                            var id = this.id;
                            var ImageId2 = id;

                            $scope.ImageId = id;
                            // alert(id)
                            $("#txt_id").val(id);
                            var top = e.pageY + 5;
                            var left = e.pageX;
                            // Show contextmenu
                            $(".context-menu").toggle(100).css({
                                top: top + "px",
                                left: left + "px"
                            });

                            // Disable default menu
                            return false;
                        });

                        // disable context-menu from custom menu
                        $('.context-menu').bind('contextmenu', function () {
                            return false;
                        });

                        // Clicked context-menu item
                        $('.context-menu li').click(function () {
                            var className = $(this).find("span:nth-child(1)").attr("class");
                            var id = $('#txt_id').val();
                            if (className == 'Delete') {
                                //  alert('Delete')
                                // $scope.ImageId = id;
                                $scope.DeleteImage();
                            }
                            if (className == 'NewScanafter') {
                                // alert('NewScanafter')
                                $("#txt_dir_scan").val("NewScanafter");
                                $scope.NewScan = 1;
                                //    alert($scope.ImageId)
                                $scope.ScannDocument();
                            }
                            if (className == 'NewScanbefor') {
                                $("#txt_dir_scan").val("NewScanbefor");

                                $scope.NewScan = 1;
                                //    alert($scope.ImageId)
                                $scope.ScannDocument();
                            }
                            if (className == 'MetaData') {
                                //  alert('MetaData')
                                ///   alert($scope.ImageId);
                                $scope.getMetaDataInf();

                            }


                            $("#" + id).css("background-color", 'red');
                            // $scope.ExecuteCaseSearch();
                            $(".context-menu").hide();
                        });
                    });


            }
        ]);
</script>

