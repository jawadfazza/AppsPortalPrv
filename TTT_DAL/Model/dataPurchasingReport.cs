
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TTT_DAL.Model
{
    
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using RES_Repo.Globalization;
    using System.ComponentModel.DataAnnotations.Schema;
    using Portal_BL.Library;
    
    public partial class dataPurchasingReport
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public dataPurchasingReport()
        {
            this.dataRequisition = new HashSet<dataRequisition>();
        }
    
        [Required(ErrorMessageResourceName = "RequiredField" , ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "PurchasingReportGUID", ResourceType = typeof(resxDbFields))]
    	public System.Guid PurchasingReportGUID{ get; set; }
    	
        [StringLength(50, ErrorMessageResourceName = "StringLengthMax", ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "ReportID", ResourceType = typeof(resxDbFields))]
    	public string ReportID{ get; set; }
    	
        [StringLength(50, ErrorMessageResourceName = "StringLengthMax", ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "BusinessUnit", ResourceType = typeof(resxDbFields))]
    	public string BusinessUnit{ get; set; }
    	
        [StringLength(50, ErrorMessageResourceName = "StringLengthMax", ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "Buyer", ResourceType = typeof(resxDbFields))]
    	public string Buyer{ get; set; }
    	
        [StringLength(50, ErrorMessageResourceName = "StringLengthMax", ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "Vendor", ResourceType = typeof(resxDbFields))]
    	public string Vendor{ get; set; }
    	
        [StringLength(50, ErrorMessageResourceName = "StringLengthMax", ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "PuchaseOrder", ResourceType = typeof(resxDbFields))]
    	public string PuchaseOrder{ get; set; }
    	
        [DataType(DataType.Date)]
    	[Display(Name = "BudgetDateFrom", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> BudgetDateFrom{ get; set; }
    	
        [DataType(DataType.Date)]
    	[Display(Name = "BudgetDateTo", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> BudgetDateTo{ get; set; }
    	
        [Display(Name = "RemainingAmount", ResourceType = typeof(resxDbFields))]
    	public Nullable<double> RemainingAmount{ get; set; }
    	
        [Display(Name = "BgtYr", ResourceType = typeof(resxDbFields))]
    	public Nullable<int> BgtYr{ get; set; }
    	
        [Display(Name = "CostCentre", ResourceType = typeof(resxDbFields))]
    	public Nullable<int> CostCentre{ get; set; }
    	
        [Required(ErrorMessageResourceName = "RequiredField" , ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "Active", ResourceType = typeof(resxDbFields))]
    	public bool Active{ get; set; }
    	
        public byte[] dataPurchasingReportRowVersion{ get; set; }
    	
        [DataType(DataType.DateTime)]
    	[Display(Name = "DeletedOn", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> DeletedOn{ get; set; }
    	
    	[NotMapped]
    	[Display(Name = "DeletedOn", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> LocalDeletedOn { get { return new Portal().LocalTime(this.DeletedOn); } }
    	
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<dataRequisition> dataRequisition { get; set; }
    }
}
