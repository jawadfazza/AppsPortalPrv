
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PCR_DAL.Model
{
    
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using RES_Repo.Globalization;
    using System.ComponentModel.DataAnnotations.Schema;
    using Portal_BL.Library;
    
    public partial class dataPartnerReportCompiled
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public dataPartnerReportCompiled()
        {
            this.dataPartnerReportDetail = new HashSet<dataPartnerReportDetail>();
        }
    
        [Required(ErrorMessageResourceName = "RequiredField" , ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "PartnerReportCompiledGUID", ResourceType = typeof(resxDbFields))]
    	public System.Guid PartnerReportCompiledGUID{ get; set; }
    	
        [Required(ErrorMessageResourceName = "RequiredField" , ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "PartnerReportGUID", ResourceType = typeof(resxDbFields))]
    	public System.Guid PartnerReportGUID{ get; set; }
    	
        [Required(ErrorMessageResourceName = "RequiredField" , ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "ReportGUID", ResourceType = typeof(resxDbFields))]
    	public System.Guid ReportGUID{ get; set; }
    	
        [Display(Name = "FileReportGUID", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.Guid> FileReportGUID{ get; set; }
    	
        [DataType(DataType.Date)]
    	[Display(Name = "StartDate", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> StartDate{ get; set; }
    	
        [DataType(DataType.Date)]
    	[Display(Name = "EndDate", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> EndDate{ get; set; }
    	
        [DataType(DataType.DateTime)]
    	[Display(Name = "UploadDateTime", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> UploadDateTime{ get; set; }
    	
    	[NotMapped]
    	[Display(Name = "UploadDateTime", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> LocalUploadDateTime { get { return new Portal().LocalTime(this.UploadDateTime); } }
    	
        [StringLength(100, ErrorMessageResourceName = "StringLengthMax", ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "UploadByUser", ResourceType = typeof(resxDbFields))]
    	public string UploadByUser{ get; set; }
    	
        [Display(Name = "ErrorFound", ResourceType = typeof(resxDbFields))]
    	public Nullable<bool> ErrorFound{ get; set; }
    	
        [Required(ErrorMessageResourceName = "RequiredField" , ErrorMessageResourceType = typeof(resxHttpErrors))]
    	[Display(Name = "Active", ResourceType = typeof(resxDbFields))]
    	public bool Active{ get; set; }
    	
        public byte[] dataPartnerReportCompiledRowVersion{ get; set; }
    	
        [DataType(DataType.DateTime)]
    	[Display(Name = "DeletedOn", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> DeletedOn{ get; set; }
    	
    	[NotMapped]
    	[Display(Name = "DeletedOn", ResourceType = typeof(resxDbFields))]
    	public Nullable<System.DateTime> LocalDeletedOn { get { return new Portal().LocalTime(this.DeletedOn); } }
    	
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<dataPartnerReportDetail> dataPartnerReportDetail { get; set; }
        public virtual dataPartnerReport dataPartnerReport { get; set; }
        public virtual dataFileReport dataFileReport { get; set; }
    }
}
