@model MedicalItemTransferUpdateModel
@using (Html.BeginForm("MedicalItemInputTransfer", "MedicalItemInputs", new { Area = "EMT" }, FormMethod.Post, new { id = "MedicalItemInputSupplyDetailForm" }))
{
    string ModalTitle = resxPages.TransferPartnerWarehouseItemstoPartnerPharmacies;
    @Html.Partial("_ModalHeader", ModalTitle)
<div class="modal-body">
    @Html.AntiForgeryToken()
    @Html.FormHiddenFields(model => model.MedicalItemTransferGUID)
    @Html.HiddenFor(model => model.OrganizationInstanceGUID)
    @Html.HiddenFor(model=>model.ProvidedByOrganizationInstanceGUID)
    <div class="form-group">
        @Html.Label(resxDbFields.TransferDate)
        @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group HANDLER">
        @Html.LabelFor(model => model.MedicalPharmacyGUID) || @Html.Label(resxDbFields.WarehouseGUID)
        @Html.DropDownListFor(model => model.MedicalPharmacyGUID, new DropDownList().MedicalPharmacyByOrganizationInsatanceExcludeTransferSourcePharmacy(Model.MedicalPharmacyGUID), "", new { style = "width:100%", @class = "form-control select2-basic-search" })
    </div>
    <hr />
    <div class="row">

        <div class="col-sm-4"> @Html.Label(resxDbFields.BrandName) </div>
        <div class="col-sm-2">@Html.Label(resxDbFields.ExpirtionDate) </div>
        <div class="col-sm-2">@Html.Label(resxDbFields.BatchNumber) </div>
        <div class="col-sm-2"> @Html.Label(resxDbFields.QuantityByPackingUnit) </div>
        <div class="col-sm-2"> @Html.Label(resxDbFields.PartnerRemainingItems) </div>
    </div>
    <hr />
    <div class="mScroll blueDataTableHeader" data-mcs-theme="rounded-dark" style="max-height:300px;">
        @for (var i = 0; i < Model.MedicalItemInputDetailsDataTableModel.Count; i++)
        {
        <div class="row">
            @Html.HiddenFor(model => model.MedicalItemInputDetailsDataTableModel[i].MedicalItemInputDetailGUID)
            @Html.HiddenFor(model => model.MedicalItemInputDetailsDataTableModel[i].RemainingItems)
            @Html.HiddenFor(model => model.MedicalItemInputDetailsDataTableModel[i].BrandName)
            @Html.HiddenFor(model => model.MedicalItemInputDetailsDataTableModel[i].BatchNumber)
            @Html.HiddenFor(model => model.MedicalItemInputDetailsDataTableModel[i].MedicalItemGUID)
            @Html.HiddenFor(model => model.MedicalItemInputDetailsDataTableModel[i].ExpirationDate)
            <div class="col-sm-4"> @Html.DisplayFor(model => model.MedicalItemInputDetailsDataTableModel[i].BrandName) </div>
            <div class="col-sm-2">@Html.Raw(Model.MedicalItemInputDetailsDataTableModel[i].ExpirationDate.Value.ToString("dd/MM/yyyy")) </div>
            <div class="col-sm-2">@Html.DisplayFor(model => model.MedicalItemInputDetailsDataTableModel[i].BatchNumber) </div>
            <div class="col-sm-2"> @Html.EditorFor(model => model.MedicalItemInputDetailsDataTableModel[i].QuantityByPackingUnit, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" }, @style = "width:50px;" }) </div>
            <div class="col-sm-2">@Html.DisplayFor(model => model.MedicalItemInputDetailsDataTableModel[i].RemainingItems) </div>
        </div>
            <hr />
        }
    </div>
</div>
    <div class="modal-footer form-footer">

        @Html.CreateButton(Permissions.MedicalItemInput.Create, Apps.EMT)
        @Html.CloseModalButton()
    </div>
    }
