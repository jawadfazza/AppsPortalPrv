@model StaffProfileFeedbackUpdateModel


@using (Html.BeginForm("StaffFeedbackFlow", "StaffProfile", new { Area = "ORG" }, FormMethod.Post, new { id = "FlowForm" }))
{
    string ModalTitle = Model.StaffProfileFeedbackGUID.ToString() == Guid.Empty.ToString() ? " Confirm Request" : "Confirm Request ";
    @Html.Partial("_ModalHeader", ModalTitle)
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.FormHiddenFields(model => model.StaffProfileFeedbackGUID)
        @Html.HiddenFor(model => model.UserGUID)
        



        <div class="form-group">
            @Html.LabelFor(model => model.LastFlowStatusGUID)
            @Html.DropDownListFor(model => model.LastFlowStatusGUID, new DropDownList().ProfileStaffFeedbackFlowStatus(Model.flowStep), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
        </div>
        @if (Model.flowStep == 4)
        {
    <div class="form-group">
        @Html.LabelFor(model => model.ResloveDescription)
        @Html.TextAreaFor(model => model.ResloveDescription, new { @class = "form-control", rows = 5 })
        @*@Html.EditorFor(model => model.ResloveDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })*@
    </div>
        }

    </div>
    <div class="modal-footer form-footer">
        @if (Model.StaffProfileFeedbackGUID != Guid.Empty)
        {
            @Html.CreateButtonNoPermission()
        }
        
        @Html.CloseModalButton()
    </div>
}

