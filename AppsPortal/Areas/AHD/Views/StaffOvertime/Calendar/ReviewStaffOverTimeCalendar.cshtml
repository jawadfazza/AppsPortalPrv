@model StffCalendarOvertimeUpdateModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Layouts/_SiteLayout.cshtml";

}
<style>
    .fc-time {
        display: none !important;
    }

    .fc-fri {
        color: red;
        background-color: lightgoldenrodyellow;
    }

    .fc-sat {
        color: red;
        background-color: lightgoldenrodyellow;
    }
</style>
@Html.PageHeader("ade1c326-7df9-4031-bd7d-1658a626337e")
<div class="page--content">
    <div class="forms-fadeIn">
        <h3></h3>
        <div class="row">
            @Html.HiddenFor(m => m.UserGUID)
            @Html.HiddenFor(m => m.OvertimeMonthCycleGUID)
            @Html.HiddenFor(m => m.OvertimeMonthCycleStaffGUID)
            @Html.HiddenFor(m => m.FirstDateInMonth)
            <div class="col-md-6 ">
                <span>Staff : @Model.FullName </span>
                <span>Grade: @Model.Grade </span>
                <span>Step: @Model.Step </span>
                <span>Job Title: @Model.JobTitle </span>
            </div>
            @*<div class="col-lg-3 col-md-3 col-sm-8 col-xs-12">
                    <div class="form-group">
                        @Html.Label(resxDbFields.UserGUID, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList(resxDbFields.UserGUID, new DropDownList().InternationalStaffUsers(true), "", new
                   {
                       style = "width:100%",
                       @class = "form-control select2-basic-search UserGUID filter",
                       onchange = "ShowStaffLeaves($(this).val());"

                   })
                    </div>

                </div>*@
            @*<div class="col-lg-3 col-md-3 col-sm-8 col-xs-12">
                     <div class="form-group">
                         @Html.Label(resxDbFields.DayWorkingTypeGUID)
                         @Html.DropDownList(resxDbFields.DayWorkingTypeGUID, new DropDownList().AHDOvertivemWorkingDayType(), "", new
                {
                    style = "width:100%",
                    @class = "form-control select2-basic-search DayWorkingTypeGUID filter",
                    onchange = "ShowLeavTypes($(this).val())"

                })
                     </div>
                 </div>*@

        </div>
        @*<div class="row">
                <div class="col-md-3 col-sm-10 col-lg-5 dt-controls-index">
                    <input type="text" id="search-term" autocomplete="off" class="form-control" placeholder="Search Calender ..." style="width:100%" />
                </div>

            </div>*@
    </div>

    <h4 style='color:red'>Payed Hours: @Model.TotalHoursPayed - Performed Hours: @Model.TotalPerformedHours Total Pay $: @Model.TotalPay</h4>
    @* driver*@


    @Html.ActionLink(" Export Overtime(xls)", "ExportOverTimeForMonth", "StaffOvertime", new { id = Model.OvertimeMonthCycleStaffGUID }, new { @class = " fa fa-file-o" })

    <div class="row">
        @if (Model.JobTitleGUID == Guid.Parse("7FFA5C6F-FA42-4DC4-A072-2BD5C4ED53C8") && Model.FlowStatusGUID == Guid.Parse("66CD375C-A576-4AA4-8AF4-FF3C1C5E7369"))
        {
            if (new CMS().HasAction(88, Guid.Parse("F18DEA05-B3E5-43E4-B1BC-900D0B66D77E"), null))
            {
                //Pending Supervisor approval for driver
                <br />
                <input type="button" value="Approve Staff Overtime" id="btnApproveDriverSupervisorApprovalToReviewID" class="btn btn-info pull-right" />
            }
        }
        @if (Model.JobTitleGUID == Guid.Parse("7FFA5C6F-FA42-4DC4-A072-2BD5C4ED53C8") && Model.FlowStatusGUID == Guid.Parse("66CD375C-A576-4AA4-8AF4-FF3C1C5E7362"))
        {
            if (new CMS().HasAction(89, Guid.Parse("F18DEA05-B3E5-43E4-B1BC-900D0B66D77E"), null))
            {

                //Pending Authorizor approval for driver
                <br />
                <input type="button" value="Approve Staff Overtime" id="btnApproveDriverCertivorApprovalToReviewID" class="btn btn-info pull-right" />

            }
        }
        @*not driver*@
        @if (Model.JobTitleGUID != Guid.Parse("7FFA5C6F-FA42-4DC4-A072-2BD5C4ED53C8") && Model.FlowStatusGUID == Guid.Parse("66CD375C-A576-4AA4-8AF4-FF3C1C5E7369"))
        {
            if (new CMS().HasAction(94, Guid.Parse("F18DEA05-B3E5-43E4-B1BC-900D0B66D77E"), null))
            {<br />
                //Pending Supervisor approval for other staff
                <input type="button" value="Approve Staff Overtime" id="btnApproveStaffSupervisorApprovalToReviewID" class="btn btn-info pull-right" />
            }
        }
        @if (Model.JobTitleGUID != Guid.Parse("7FFA5C6F-FA42-4DC4-A072-2BD5C4ED53C8") && Model.FlowStatusGUID == Guid.Parse("66CD375C-A576-4AA4-8AF4-FF3C1C5E7362"))
        {
            if (new CMS().HasAction(95, Guid.Parse("F18DEA05-B3E5-43E4-B1BC-900D0B66D77E"), null))
            {<br />
                //Pending Authorizor approval for staff
                <input type="button" value="Approve Staff Overtime" id="btnApproveStaffCertivorApprovalToReviewID" class="btn btn-info pull-right" />
            }
        }
    </div>
    <div id='calendar'></div>
</div>

<script type="text/javascript">
    var Source;
    var events = [];
    var curSource = new Array();
    var staffGUID = $("#UserGUID").val();
    var _firstDateInMonth = $("#FirstDateInMonth").val();
    $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
    var _OvertimeMonthCycleStaffGUID = $("#OvertimeMonthCycleStaffGUID").val();
    var _OvertimeMonthCycleGUID = $("#OvertimeMonthCycleGUID").val();
    //first source uses querystring to determine what events to pull back
    curSource[0] = '/hackyjson/cal?e1=' + $('#e1').is(':checked') + '&e2=' + $('#e2').is(':checked');
    //second source just returns all events
    curSource[1] = '/hackyjson/anothercal/';
    var newSource = new Array();
    $(document).ready(function () {
        $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
        InitializeCalendarLeavs();
    });
    function searchAppointment() {
        if ($('#search-term').val() != '') {
            newSource = Source.filter(elem =>
                (elem.title.toLowerCase().indexOf($('#search-term').val().toLowerCase()) > -1));
            refreshCalendar(newSource);

        } else {
            refreshCalendar(Source);
        }
    }
    function refreshCalendar(newSource) {
        
        $('#calendar').fullCalendar('removeEvents');
        $('#calendar').fullCalendar('addEventSource', newSource);
        $('#calendar').fullCalendar('refetchEvents');
        $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
    }


    $(document).keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            event.preventDefault();
            searchAppointment();
        }

    });

    var SlotWorkDays = [];
    function InitializeCalendarLeavs() {
        $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
        $.ajax({
            url: "/AHD/StaffOvertime/GetWorkingDay",
            dataType: 'json',
            type: "post",
            success: function (data) {
                $.each(data.WorkDays, function (key, value) {
                    SlotWorkDays.push(value.Day);
                });
                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    header: {
                        left: 'prev,next today,myCustomButton',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay,list'
                    },

                    height: 700,
                    allDayText: 'Events',
                    selectable: true,
                    overflow: 'auto',
                    editable: true,
                    firstDay: 0,
                    businessHours: true,
                    businessHours:
                    {
                        start: '8:30',
                        end: '04:00',
                        dow: SlotWorkDays
                    },

                    //eventLimit: true, // for all non-agenda views
                    //views: {
                    //    agenda: {
                    //        eventLimit: 4 // adjust to 6 only for agendaWeek/agendaDay
                    //    }
                    //},
                    events: function (start, end, timezone, callback) {
                        $.ajax({
                            url: "/AHD/StaffOvertime/GetCalendarDataFromDatabaseFilterByUser",
                            dataType: 'json',
                            type: "post",
                            data: {
                                // our hypothetical feed requires UNIX timestamps
                                start: start.format('YYYY-MM-DD HH:mm'),
                                end: end.format('YYYY-MM-DD HH:mm'),
                                staffGUID: staffGUID,
                                _OvertimeMonthCycleGUID: _OvertimeMonthCycleGUID
                            },
                            success: function (data) {
                                
                                $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
                                


                                events = [];
                                //alert(JSON.stringify(data.CalendarEvents, null, 2));
                                $.map(data.CalendarEvents, function (item, i) {
                                    var eventStartDate = new Date(parseInt(item.EventStartDate.substr(6)));
                                    var eventEndDate = new Date(parseInt(item.EventEndDate.substr(6)));
                                    var event = new Object();
                                    event.id = item.EventId;
                                    event.UserGUID = item.UserGUID;
                                    event.start = new Date(eventStartDate.getFullYear(), eventStartDate.getMonth(), eventStartDate.getDate(), eventStartDate.getHours(), eventEndDate.getMinutes(), 0, 0);
                                    event.end = new Date(eventEndDate.getFullYear(), eventEndDate.getMonth(), eventEndDate.getDate(), eventEndDate.getHours(), eventEndDate.getMinutes(), 0, 0);
                                    event.title = item.Title;
                                    event.allDay = false;
                                    event.backgroundColor = item.backgroundColor;
                                    event.borderColor = item.borderColor;
                                    //if (item.PublicHolday) { event.color = 'red'; event.overlap = false; }
                                    //if (item.PreventAppointments) { event.color = 'orange'; event.allDay = item.AllDayEvent; }
                                    events.push(event)
                                });
                                callback(events);
                                $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
                            }
                        });
                    },
                    eventClick: function (calEvent, jsEvent, view) {
                        
         
                        $.ajax({
                            type: "GET",
                            url: '/AHD/StaffOvertime/StaffOvertimeUpdate?PK=' + calEvent.id,
                            success: function (data) {
                                $('#FormModal').modal('show');
                                // inject your content into the "placeholder" div
                                $('#Partial-Container').html(data);
                                $('#Loading-Container').hide();
                                InitPlugins($('#Partial-Container'));
                                $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
                            },
                            error: function (err) {
                                console.log(err);
                            }
                        });
                    },
                    
                    select: function (start, end) {

                    },
                    eventDrop: function (event, delta, revertFunc) {
                        $.ajax({
                            type: "post",
                            url: '/AHD/StaffOvertime/OvertimeUpdateDropEvent?PK=' + event.id + "&startDate=" + event.start.format() + "&endDate=" + event.end.format(),
                            success: function (JsonResult) {
                                if (JsonResult.Notify != null) {
                                    ProcessNotify(JsonResult);
                                    if (JsonResult.Notify.Type == NotificationType.Error) {
                                        revertFunc();
                                    }
                                }
                            },
                            error: function (err) {
                                console.log(err);
                            }
                        });

                    }
                });
            }
        });


    }

    $("#btnApproveDriverSupervisorApprovalToReviewID").click(function () {
        $('#btnApproveDriverSupervisorApprovalToReviewID').hide();

        $.ajax({
            url: "/AHD/StaffOvertime/ApproveDriverSupervisorOvertime",
            dataType: 'json',
            type: "post",
            data: {
                _OvertimeMonthCycleStaffGUID: _OvertimeMonthCycleStaffGUID,

            },
            success: function (data) {

                if (data.success == 1) {
                    Notify(NotificationType.Success, 'Your request has been submitted');
                    //$('.certifiy').hide();
                }
                else {
                    Notify(NotificationType.Error, 'Error during saving ');
                }
            }

        });
    });
    $("#btnApproveDriverCertivorApprovalToReviewID").click(function () {
        $('#btnApproveDriverCertivorApprovalToReviewID').hide();

        $.ajax({
            
            url: "/AHD/StaffOvertime/ApproveDriverAuthroizorOvertime",
            dataType: 'json',
            type: "post",
            data: {
                _OvertimeMonthCycleStaffGUID: _OvertimeMonthCycleStaffGUID,

            },
            success: function (data) {

                if (data.success == 1) {
                    Notify(NotificationType.Success, 'Your request has been submitted');
                    //$('.certifiy').hide();
                }
                else {
                    Notify(NotificationType.Error, 'Error during saving ');
                }
            }

        });
    });

    $("#btnApproveStaffSupervisorApprovalToReviewID").click(function () {
        $('#btnApproveStaffSupervisorApprovalToReviewID').hide();

        $.ajax({
            url: "/AHD/StaffOvertime/ApproveStaffSupervisorOvertime",
            dataType: 'json',
            type: "post",
            data: {
                _OvertimeMonthCycleStaffGUID: _OvertimeMonthCycleStaffGUID,

            },
            success: function (data) {

                if (data.success == 1) {
                    Notify(NotificationType.Success, 'Your request has been submitted');
                    //$('.certifiy').hide();
                }
                else {
                    Notify(NotificationType.Error, 'Error during saving ');
                }
            }

        });
    });
    $("#btnApproveStaffCertivorApprovalToReviewID").click(function () {
        $('#btnApproveStaffCertivorApprovalToReviewID').hide();

        $.ajax({

            url: "/AHD/StaffOvertime/ApproveStaffAuthroizorOvertime",
            dataType: 'json',
            type: "post",
            data: {
                _OvertimeMonthCycleStaffGUID: _OvertimeMonthCycleStaffGUID,

            },
            success: function (data) {

                if (data.success == 1) {
                    Notify(NotificationType.Success, 'Your request has been submitted');
                    //$('.certifiy').hide();
                }
                else {
                    Notify(NotificationType.Error, 'Error during saving ');
                }
            }

        });
    });

    



    function ShowStaffLeaves(guid) {


        events = events.filter(function (event) {
            return event.UserGUID == guid;
        });

        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today,myCustomButton',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,list'
            },

            height: 700,
            allDayText: 'Events',
            selectable: true,
            overflow: 'auto',
            editable: true,
            firstDay: 0,
            businessHours: true,
            businessHours:
            {
                start: '8:30',
                end: '04:00',
                dow: SlotWorkDays
            },

            //eventLimit: true, // for all non-agenda views
            //views: {
            //    agenda: {
            //        eventLimit: 4 // adjust to 6 only for agendaWeek/agendaDay
            //    }
            //},
            events: function (start, end, timezone, callback) {




                $.map(events, function (item, i) {
                    var eventStartDate = new Date(parseInt(item.EventStartDate.substr(6)));
                    var eventEndDate = new Date(parseInt(item.EventEndDate.substr(6)));
                    var event = new Object();
                    event.id = item.EventId;
                    event.UserGUID = item.UserGUID;
                    event.start = new Date(eventStartDate.getFullYear(), eventStartDate.getMonth(), eventStartDate.getDate(), eventStartDate.getHours(), eventEndDate.getMinutes(), 0, 0);
                    event.end = new Date(eventEndDate.getFullYear(), eventEndDate.getMonth(), eventEndDate.getDate(), eventEndDate.getHours(), eventEndDate.getMinutes(), 0, 0);
                    event.title = item.Title;
                    event.allDay = false;
                    event.backgroundColor = item.backgroundColor;
                    event.borderColor = item.borderColor;
                    //if (item.PublicHolday) { event.color = 'red'; event.overlap = false; }
                    //if (item.PreventAppointments) { event.color = 'orange'; event.allDay = item.AllDayEvent; }
                    events.push(event)
                });
                callback(events);

                $('#calendar').fullCalendar('gotoDate', _firstDateInMonth);
            },

        });
    }

</script>


