
@model ArchiveTemplateUpdateModel
@using (Html.BeginForm("ArchiveTemplate", "ArchivedDocument", new { Area = "DAS" }, FormMethod.Post, new { id = "ArchivedDocumentUpdateForm", @class = "main-form", enctype = "multipart/form-data" }))
{
    <h3>Archived Document</h3>
    @Html.AntiForgeryToken()

    @Html.FormHiddenFields(model => model.ArchiveTemplateGUID)
    @Html.HiddenFor(model => model.ArchiveTemplateCodeNumber)
    @Html.HiddenFor(model => model.FileReferenceTypeName)
    
    @Html.HiddenFor(model => model.TemplateName)
    <div class="row">

        <div class="col-lg-5 col-md-5 col-sm-8 col-xs-12">
            @Html.AntiForgeryToken()
            @Html.FormHiddenFields(model => model.ArchiveTemplateGUID)
            @Html.HiddenFor(model => model.ArchiveTemplateCodeNumber)
            <div class="form-group">
                @Html.LabelFor(model => model.TemplateTypeGUID)
                @Html.DropDownListFor(model => model.TemplateTypeGUID, new DropDownList().DASTemplateType(), "", new
                {
               style = "width:100%",
               @class = "form-control select2-basic-search",
               onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'FileReferenceGUID', Action : 'RemoteTemplateOwnerTypes'}]);"
           })
            </div>



            @if (Model.FileReferenceGUID != null)
            {
                <div class="form-group HANDLER">
                    @Html.LabelFor(model => model.FileReferenceGUID)
                    @Html.DropDownListFor(model => model.FileReferenceGUID, new DropDownList().FileReferenceTypes((Guid)Model.TemplateTypeGUID), "", new { style = "width:100%", @class = "form-control select2-basic-search" })
                </div>
            }
            else
            {
                <div class="form-group HANDLER">
                    @Html.LabelFor(model => model.FileReferenceGUID)
                    @Html.DropDownListFor(model => model.FileReferenceGUID, new DropDownList().Empty(), "", new { style = "width:100%", @class = "form-control select2-basic-search" })
                </div>
            }
            @*<div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress)
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName)
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                </div>*@

            <div id="RefugeeScannedDocumentFormControls" class="form-group form-footer">
                @if (Model.ArchiveTemplateGUID == Guid.Empty)
                {
                    @Html.CreateButton(Permissions.RefugeeScannedDocument.Create, Apps.DAS)
                }
                else
                {
                    if (Model.Active)
                    {

                        @Html.UpdateButton(Permissions.RefugeeScannedDocument.Update, Apps.DAS)
                        @Html.CreateNewButton(Permissions.RefugeeScannedDocument.Create, Apps.DAS, Url.Action("/Create", new { Area = "DAS" }))
                        @Html.DeleteButton(Permissions.RefugeeScannedDocument.Delete, Apps.DAS)
                    }
                    else
                    {
                        @Html.RestoreButton(Permissions.RefugeeScannedDocument.Restore, Apps.DAS)
                    }
                }
                @Html.BackToList(Url.Action("UnitHome", "Configuration", new { Area = "DAS" }))
            </div>
        </div>
    </div>
}
