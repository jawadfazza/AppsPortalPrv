@model BugReportModel
@using (Html.BeginForm("BugReports", "ServiceRequest", new { Area = "SRS" }, FormMethod.Post, new { id = "BugReportsForm", @class = "main-form" }))
{


    @Html.AntiForgeryToken()
    @Html.FormHiddenFields(model => model.AppBugReportGUID)
    @Html.HiddenFor(model => model.BugReportByProfileGUID)
    @Html.HiddenFor(model => model.BugReporttDate)
    @Html.HiddenFor(model => model.BugFixDate)

    <div class="row">

        <div class="col-lg-6 col-md-6 col-sm-8 col-xs-12">
            <h3>Bug Report Details</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.ApplicationGUID)
                @Html.DropDownListFor(model => model.ApplicationGUID, new DropDownList().Applications(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BugDetails)
                @Html.TextAreaFor(model => model.BugDetails, new { @class = "form-control", autocomplete = "off", @style = "width:100%;", @rows = 5 })
            </div>

        </div>
        <div class="col-lg-6 col-md-6 col-sm-8 col-xs-12">
            <h3>Authorization Details</h3>

            @if (new CMS().HasAction(Permissions.Bugreportmanagement.Update, Apps.SRS))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.BugStatus)
                    @Html.DropDownListFor(model => model.BugStatus, new DropDownList().NewAppReqApprovalStatuses(), "", new { @class = "form-control select2-basic-single MustReadOnly", style = "width:100%" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SolvedBugComments)
                    @Html.TextAreaFor(model => model.SolvedBugComments, new { @class = "form-control", autocomplete = "off", @style = "width:100%;", @rows = 5 })
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.BugStatus)
                    @Html.DropDownListFor(model => model.BugStatus, new DropDownList().NewAppReqApprovalStatuses(), "", new { disabled = "disabled", @readonly = "readonly", @class = "form-control select2-basic-single MustReadOnly", style = "width:100%" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SolvedBugComments)
                    @Html.TextAreaFor(model => model.SolvedBugComments, new { disabled = "disabled", @readonly = "readonly", @class = "form-control MustReadOnly", autocomplete = "off", @style = "width:100%;", @rows = 5 })
                </div>
            }




        </div>

    </div>

    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-8 col-xs-12">
            <div id="ApplicationEnhancementFormControls" class="form-group form-footer">
                @if (Model.AppBugReportGUID == Guid.Empty)
                {
                    @Html.CreateButtonNoPermission()
                }
                else
                {
                    if (Model.Active)
                    {
                        @Html.UpdateButtonNoPermission()
                        @Html.CreateNewButtonNoPermission(Url.Action("BugReports/Create", "BugReports", new { Area = "SRS" }))
                        @Html.DeleteButtonNoPermission()
                    }
                    else
                    {
                        @Html.RestoreButtonNoPermission()
                    }
                }
                @Html.BackToList(Url.Action("BugReports", "", new { Area = "SRS" }))
            </div>
        </div>
    </div>
}
