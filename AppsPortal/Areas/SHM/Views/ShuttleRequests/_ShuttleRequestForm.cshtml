@model ShuttleRequestUpdateModel
@using (Html.BeginForm("ShuttleRequest", "ShuttleRequest", new { Area = "SHM" }, FormMethod.Post, new { id = "ShuttleRequestForm", @class = "main-form" }))
{
    <h3>@resxPages.Details</h3>
    @Html.AntiForgeryToken()
    @Html.FormHiddenFields(model => model.ShuttleRequestGUID)
    @Html.HiddenFor(model => model.AdminComment)
    @Html.HiddenFor(model => model.UserGUID)
    @Html.HiddenFor(model => model.ReferralStatusGUID)
    @Html.HiddenFor(model => model.OrganizationInstanceGUID)
    <div class="row">
        <div class="col-lg-5 col-md-5 col-sm-8 col-xs-12">
            <div class="form-group">
                @Html.LabelFor(model => model.ShuttleTravelPurposeGUID)
                <div class="input-group">
                    @Html.DropDownListFor(model => model.ShuttleTravelPurposeGUID, new DropDownList().ShuttleTravelPurpose(), "",
                   new
                        {
                       style = "width:100%",
                       @class = "form-control select2-basic-search",
                       onchange = "CheckWithReturnDate($('#ShuttleTravelPurposeGUID').val())"
                   })
                    @*@if (Model.ShuttleRequestGUID != Guid.Empty)
                {
                    <span class="input-group-btn">
                        <button type="button" title="Upload New Files" class=" Modal-Link  btn-primary" style="color:#FFF !important;" data-url="@Url.Action("Upload", "SHM/ShuttleRequests", new { PK = Model.ShuttleRequestGUID })">
                            <i class="fa fa-upload fa-1x" style="color: white; width: 50px; height: 22px;"></i>
                        </button>
                    </span>

                }*@

                </div>
                @*@if (Model.ShuttleRequestGUID != Guid.Empty)
            {
                <div class="alert alert-info fade in alert-dismissible">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
                    <strong>Info! </strong>In Case Shuttle Travel Purpose R&R Or Mission It Should Be Attached with Supporting Documents.
                </div>
            }*@
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DepartureDate)
                @Html.EditorFor(model => model.DepartureDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReturnDateTime)
                @Html.EditorFor(model => model.ReturnDateTime, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })

            </div>
            <div class="form-group">

                @Html.Label("Request To Fleet Manager of Selected Duty Station")
                @Html.DropDownListFor(model => model.DutyStationGUID, new DropDownList().DutyStations(Model.OrganizationInstanceGUID.Value), "",
new
{
 style = "width:100%",
 @class = "form-control select2-basic-search"
})
            </div>
            <div id="exTab1">
                <ul class="nav nav-pills">
                    <li class="active">
                        <a href="#1a" data-toggle="tab">Departure Travel</a>
                    </li>
                    <li>
                        <a href="#2a" data-toggle="tab">Return Travel</a>
                    </li>

                </ul>
            </div>
            <div class="tab-content clearfix">
                <div class="tab-pane active table-bordered" id="1a">
                    <div class="row">
                        <div class="col-lg-6 col-sm-12" style="border-right:solid;">
                            <div class="form-group">
                                @Html.Label("Departure Country")
                                @Html.DropDownListFor(model => model.CountryGUID, new DropDownList().CountriesSyriaShuttle(), "",
             new
             {
                 @class = "form-control select2-basic-search",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'StartLocationGUID', Action : 'RemoteLocationsByGovernorate'}]);",
                 style = "width:100%"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Departure City")
                                @Html.DropDownListFor(model => model.StartLocationGUID, new DropDownList().LocationOneValue(Model.StartLocationGUID), "",
             new
             {
                 style = "width:100%",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'DeparturePointGUID', Action : 'RemoteLocationsByLocationType'}]);",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Departure Point")
                                @Html.DropDownListFor(model => model.DeparturePointGUID, new DropDownList().LocationOneValue(Model.DeparturePointGUID), "",
             new
             {
                 style = "width:100%",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <hr style="border:solid;" />
                        </div>
                        <div class="col-lg-6 col-sm-12">
                            <div class="form-group">
                                @Html.Label("Drop Off Country")
                                @Html.DropDownListFor(model => model.CountryGUID1, new DropDownList().CountriesSyriaShuttle(), "",
             new
             {
                 @class = "form-control select2-basic-search",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'EndLocationGUID', Action : 'RemoteLocationsByGovernorate'}]);",
                 style = "width:100%"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Drop Off City")
                                @Html.DropDownListFor(model => model.EndLocationGUID, new DropDownList().LocationOneValue(Model.EndLocationGUID), "",
             new
             {
                 style = "width:100%",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'DropOffPointGUID', Action : 'RemoteLocationsByLocationType'}]);",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Drop Off Point")
                                @Html.DropDownListFor(model => model.DropOffPointGUID, new DropDownList().LocationOneValue(Model.DropOffPointGUID), "",
             new
             {
                 style = "width:100%",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <hr style="border:solid;" />
                        </div>
                    </div>


                </div>
                <div class="tab-pane  table-bordered" id="2a">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="alert alert-info fade in alert-dismissible">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
                                <strong>Info: </strong>In case you don't have a plan for your  travel  return back,
                                You can leave the (Return back From Travel) Tab empty until deciding,
                                The system will notify you to complete the shuttle request before 24h of your departure.
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-12" style="border-right:solid;">
                            <div class="form-group">
                                @Html.Label("Departure Country")
                                @Html.DropDownListFor(model => model.CountryReturnGUID, new DropDownList().CountriesSyriaShuttle(), "",
             new
             {
                 @class = "form-control select2-basic-search",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'StartLocationReturnGUID', Action : 'RemoteLocationsByGovernorate'}]);",
                 style = "width:100%"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Departure City")
                                @Html.DropDownListFor(model => model.StartLocationReturnGUID, new DropDownList().LocationOneValue(Model.StartLocationReturnGUID), "",
             new
             {
                 style = "width:100%",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'DeparturePointReturnGUID', Action : 'RemoteLocationsByLocationType'}]);",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Departure Point")
                                @Html.DropDownListFor(model => model.DeparturePointReturnGUID, new DropDownList().LocationOneValue(Model.DeparturePointReturnGUID), "",
             new
             {
                 style = "width:100%",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <hr style="border:solid;" />
                        </div>
                        <div class="col-lg-6 col-sm-12">
                            <div class="form-group">
                                @Html.Label("Drop Off Country")
                                @Html.DropDownListFor(model => model.CountryReturnGUID1, new DropDownList().CountriesSyriaShuttle(), "",
             new
             {
                 @class = "form-control select2-basic-search",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'EndLocationReturnGUID', Action : 'RemoteLocationsByGovernorate'}]);",
                 style = "width:100%"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Drop Off City")
                                @Html.DropDownListFor(model => model.EndLocationReturnGUID, new DropDownList().LocationOneValue(Model.EndLocationReturnGUID), "",
             new
             {
                 style = "width:100%",
                 onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'DropOffPointReturnGUID', Action : 'RemoteLocationsByLocationType'}]);",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <div class="form-group">
                                @Html.Label("Drop Off Point")
                                @Html.DropDownListFor(model => model.DropOffPointReturnGUID, new DropDownList().LocationOneValue(Model.DropOffPointReturnGUID), "",
             new
             {
                 style = "width:100%",
                 @class = "form-control select2-basic-search"
             })
                            </div>
                            <hr style="border:solid;" />
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.StaffComment)
                @Html.TextAreaFor(model => model.StaffComment, new { @class = "form-control", rows = 5 })
            </div>
            <div class="form-group">
                <div class="notification-contents">@Model.AdminComment</div>
            </div>

            <div id="ShuttleRequestFormControls" class="form-group form-footer">

                @if (Model.ShuttleRequestGUID == Guid.Empty)
                {
                    @Html.CreateButtonNoPermission()
                }
                else
                {
                    if (Model.Active)
                    {
                        @Html.UpdateButtonNoPermission()
                        @Html.CreateNewButtonNoPermission(Url.Action("Create", "ShuttleRequest", new { Area = "SHM" }))

                        @Html.DeleteButtonNoPermission()
                    }
                    else
                    {
                        @Html.RestoreButtonNoPermission()
                    }
                }

                @Html.BackToList(Url.Action("Index", "ShuttleRequests", new { Area = "SHM" }))

            </div>

        </div>
    </div>
}



<script>
    $(function () {
        CheckWithReturnDate($('#ShuttleTravelPurposeGUID').val());
    });

    function CheckWithReturnDate(SelectedOption) {
        var bool = false;
        $.ajax({
            url: "/SHM/ShuttleRequest/CheckWithReturnDate?PK=" + SelectedOption,
            dataType: 'json',
            type: "post",
            async: false,
            success: function (result) {
                if (result["Message"] == "0") {
                    $("#ReturnDateTime").prop("disabled", true)
                    $("#ReturnDateTime").val("");
                } else {
                    $("#ReturnDateTime").prop("disabled", false)
                }

            }
        });
        return bool;
    }
</script>
