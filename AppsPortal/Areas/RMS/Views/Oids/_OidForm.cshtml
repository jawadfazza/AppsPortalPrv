
@model OidUpdateModel
@using (Html.BeginForm("Oid", "Oid", new { Area = "RMS" }, FormMethod.Post, new { id = "OidForm", @class = "main-form" }))
{
    <h3>@resxPages.Details</h3>
    @Html.AntiForgeryToken()
    @Html.FormHiddenFields(model => model.OidGUID)
    <div class="row">
        <div class="col-lg-5 col-md-5 col-sm-8 col-xs-12">
            <div class="form-group">
                @Html.LabelFor(model => model.PrinterModelGUID)
                @Html.DropDownListFor(model => model.PrinterModelGUID, new DropDownList().LookupValues(LookupTables.PrinterModel), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PrinterTypeGUID)
                @Html.DropDownListFor(model => model.PrinterTypeGUID, new DropDownList().LookupValues(LookupTables.PrinterType), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OIDTypeGUID)
                @Html.DropDownListFor(model => model.OIDTypeGUID, new DropDownList().LookupValues(LookupTables.OidType), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OIDDescription)
                @Html.EditorFor(model => model.OIDDescription, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ValueType)
                @Html.EditorFor(model => model.ValueType, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OIDNumber)
                @Html.EditorFor(model => model.OIDNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
            <div class="form-group">
                @*<input type="checkbox" name="IsImport" id="IsImport" value="@Model.IsImport" class="checkbox">*@
                @Html.LabelFor(model => model.IsImport)
                @Html.CheckBoxFor(model => model.IsImport, new { @class = "chkNode-accordion" })
            </div>
            <div id="OidFormControls" class="form-group form-footer">
                @if (Model.OidGUID == Guid.Empty)
                {
                    @Html.CreateButton(Permissions.Oid.Create, Apps.RMS)
                }
                else
                {
                    if (Model.Active)
                    {
                        @Html.UpdateButton(Permissions.Oid.Update, Apps.RMS)
                        @Html.CreateNewButton(Permissions.Oid.Create, Apps.RMS, Url.Action("Oid/Create", "Oid", new { Area = "RMS" }))
                        @Html.DeleteButton(Permissions.Oid.Delete, Apps.RMS)
                    }
                    else
                    {
                        @Html.RestoreButton(Permissions.Oid.Restore, Apps.RMS)
                    }
                }
                @Html.BackToList(Url.Action("Index", "Oids", new { Area = "RMS" }))
            </div>
        </div>
    </div>
}

