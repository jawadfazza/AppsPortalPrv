
@model PrintersConfigUpdateModel
@using (Html.BeginForm("PrinterConfiguration", "PrinterConfiguration", new { Area = "RMS" }, FormMethod.Post, new { id = "PrinterConfigurationForm", @class = "main-form" }))
{
    <h3>@resxPages.Details</h3>
    @Html.AntiForgeryToken()
    @Html.FormHiddenFields(model => model.PrinterConfigurationGUID)
    <div class="row">
        <div class="col-lg-5 col-md-5 col-sm-8 col-xs-12">
            <div class="form-group">
                @Html.LabelFor(model => model.PrinterModelGUID)
                @Html.DropDownListFor(model => model.PrinterModelGUID, new DropDownList().LookupValues(LookupTables.PrinterModel), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PrinterTypeGUID)
                @Html.DropDownListFor(model => model.PrinterTypeGUID, new DropDownList().LookupValues(LookupTables.PrinterType), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PrinterName)
                @Html.EditorFor(model => model.PrinterName, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IPAddress)
                @Html.EditorFor(model => model.IPAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OrganizationInstanceGUID)
                @Html.DropDownListFor(model => model.OrganizationInstanceGUID, new DropDownList().OrganizationsInstancesByProfile(), "",
               new { @class = "form-control select2-basic-single",
                   onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'DutyStationGUID', Action : 'RemoteOrganizationInstanceDutyStation'}]);",
                   style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DutyStationGUID)
                @Html.DropDownListFor(model => model.DutyStationGUID, new DropDownList().DutyStationsByProfile(), "",
               new { @class = "form-control select2-basic-single",
                   onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'BuildingGUID', Action : 'RemoteOfficesByDutyStation'}]);",
                   style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BuildingGUID)
                @Html.DropDownListFor(model => model.BuildingGUID, new DropDownList().Offices(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FloorNumber)
                @Html.EditorFor(model => model.FloorNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OfficeNumber)
                @Html.EditorFor(model => model.OfficeNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
            <div id="PrinterConfigurationFormControls" class="form-group form-footer">
                @if (Model.PrinterConfigurationGUID == Guid.Empty)
                {
                    @Html.CreateButton(Permissions.PrintersConfiguration.Create, Apps.RMS)
                }
                else
                {
                    if (Model.Active)
                    {
                        @Html.UpdateButton(Permissions.PrintersConfiguration.Update, Apps.RMS)
                        @Html.CreateNewButton(Permissions.PrintersConfiguration.Create, Apps.RMS, Url.Action("Create", "PrinterConfiguration", new { Area = "RMS" }))
                        @Html.DeleteButton(Permissions.PrintersConfiguration.Delete, Apps.RMS)
                    }
                    else
                    {
                        @Html.RestoreButton(Permissions.PrintersConfiguration.Restore, Apps.RMS)
                    }
                }
                <a class="btn btn-default pull-right"><span class="fa fa-link" style="color:#333;"></span></a>
               
            </div>
        </div>
    </div>
}

