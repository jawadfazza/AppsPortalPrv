@model userServiceHistoryModel
@using (Html.BeginForm("Experience", "Profile", FormMethod.Post, new { id = "ExperienceForm" }))
{
    string ModalTitle = Model.ServiceHistoryGUID.ToString() == Guid.Empty.ToString() ? resxPages.ExperienceNew : resxPages.ExperienceEdit;
    @Html.Partial("_ModalHeader", ModalTitle)
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.FormHiddenFields(model => model.ServiceHistoryGUID)
        @Html.HiddenFor(model => model.UserGUID)
        <div class="form-group">
            @Html.LabelFor(model => model.OrganizationGUID)
            @Html.DropDownListFor(model => model.OrganizationGUID, new DropDownList().Organizations(), "", new { @readonly = "readonly", @class = "form-control select2-basic-search", style = "width:100%" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress)
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", autocomplete = "off" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeNumber)
            @Html.EditorFor(model => model.EmployeeNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IndexNumber)
            @Html.EditorFor(model => model.IndexNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
        </div>
    </div>
    <div class="modal-footer form-footer">
        @if (Model.ServiceHistoryGUID == Guid.Empty)
        {
            @Html.CreateButton()
        }
        else
        {
            if (Model.Active)
            {
                @Html.UpdateButton()
                @Html.DeleteSwitchButton()
            }
        }
        @Html.CloseModalButton()
    </div>
}
