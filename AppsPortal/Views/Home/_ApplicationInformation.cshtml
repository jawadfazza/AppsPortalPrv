@model AppInfoViewModel
@using (Html.BeginForm("RequestPermission", "Profile", FormMethod.Post, new { id = "ExperienceForm" }))
{
    string ModalTitle = Model.ApplicationName;
    @Html.Partial("_ModalHeader", ModalTitle)
<div class="modal-body">
    @Html.AntiForgeryToken()
    @Html.FormHiddenFields(model => model.ApplicationGUID)
    @Html.HiddenFor(model => model.ApplicationOwnerGUID)
    @Html.HiddenFor(model => model.AppOwnerEmailAddress)
    @Html.HiddenFor(model => model.StaffEmailAddress)
    @Html.HiddenFor(model => model.UserGUID)
    @Html.HiddenFor(model => model.ApplicationOwner)
    @Html.HiddenFor(model => model.StaffName)
    @Html.HiddenFor(model => model.ApplicationName)


    <div class="form-group">
        @Html.Label("About Application")
        @Html.DisplayFor(model => model.AboutApplication, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.Label("Business Owner")
        @Html.DisplayFor(model => model.ApplicationOwner, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.Label("Unit")
        <br />

    </div>
    <div class="form-group">
        @Html.Label("Technical support")
        <br />

    </div>
</div>
    <div class="modal-footer form-footer">
        @if (Model.ApplicationGUID != Guid.Empty && Model.AppAccess==0)
        {
            @Html.RequestPermissionButton()
        }
     
        @Html.CloseModalButton()
    </div>
}
