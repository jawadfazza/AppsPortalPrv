@model PartnerCenterUpdateModel
@using (Html.BeginForm("PartnerCenter", "PartnerCenters", new { Area = "PCR" }, FormMethod.Post, new { id = "PartnerCenterForm", @class = "main-form" }))
{
<h3>@resxPages.Details</h3>
    @Html.AntiForgeryToken()

    @Html.FormHiddenFields(model => model.PartnerCenterGUID)
<div class="row">
    <div class="col-lg-5 col-md-5 col-sm-8 col-xs-12">

        <div class="form-group">
            @Html.Label(resxDbFields.CommunityCenters)
            @Html.EditorFor(model => model.PartnerCenterDescription, new { htmlAttributes = new { @class = "form-control PageTitle", autocomplete = "off" } })
        </div>
        <div class="form-group">
            @Html.Label(resxDbFields.CommunityCenterCode)
            @Html.EditorFor(model => model.Sequence, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
        </div>
        <div class="form-group HANDLER">
            @Html.Label(resxDbFields.Partner)
            @Html.DropDownListFor(model => model.OrganizationInstanceGUID, new DropDownList().OrganizationsInstancesAcronymByProfileAll(), "", new {
            style = "width:100%",
            @class = "form-control select2-basic-search",
            onchange = "UpdateDropDownList([$(this).val()], [{ DropDownListID : 'DutyStationGUID', Action : 'RemoteOrganizationInstanceDutyStation'}]);"
            })
        </div>
        <div class="form-group HANDLER">
            @Html.Label(resxDbFields.Governorate)
            @Html.DropDownListFor(model => model.DutyStationGUID, new DropDownList().DutyStationsOneValue(Model.DutyStationGUID), "", new {
            style = "width:100%",
            @class = "form-control select2-basic-search"

            })
        </div>

        <div id="PartnerCenterFormControls" class="form-group form-footer">
            @if (Model.PartnerCenterGUID == Guid.Empty)
            {
            @Html.CreateButton(Permissions.CommunityCenterCode.Create, Apps.PCR)
            }
            else
            {
            if (Model.Active)
            {
            @Html.UpdateButton(Permissions.CommunityCenterCode.Update, Apps.PCR)
            @Html.CreateNewButton(Permissions.CommunityCenterCode.Create, Apps.PCR, Url.Action("/Create", new { Area = "PCR" }))
            @Html.DeleteButton(Permissions.CommunityCenterCode.Delete, Apps.PCR)
            }
            else
            {
            @Html.RestoreButton(Permissions.CommunityCenterCode.Restore, Apps.PCR)
            }
            }
            @Html.BackToList(Url.Action("Index", "PartnerCenters", new { Area = "PCR" }))
        </div>
    </div>
</div>
}
