@model GTPPersonalHistoryFormUpdateModel
<style>
    .span-required-field {
        color: red;
    }
</style>
@using (Html.BeginForm("PersonalHistoryForm", "Applications", new { Area = "GTP" }, FormMethod.Post, new { id = "PersonalHistoryForm", @class = "main-form" }))
{
    @Html.AntiForgeryToken()

    @Html.FormHiddenFields(model => model.GTPApplicationGUID)

    @Html.HiddenFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.ClientNationalityAtBirth,  new { @class = "ClientNationalityAtBirth", autocomplete = "off" })
    @Html.HiddenFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.ClientCurrentNationality,  new { @class = "ClientCurrentNationality", autocomplete = "off" })

    <div class="row">
        <br />
        <div class="col-md-12">
            <div>
                This form allows you to apply or express interest for Field positions in the General Service and National Professional categories, for Temporary Appointments in the Professional category, or for working under one of the affiliate schemes (UNOPS, Individual consultant or contractor, deployee, secondee, etc.).
            </div>
            <br />
            <div>
                Please complete the form carefully, answering all mandatory sections fully and as completely as possible.
            </div>
            <br />
            <div>
                <b>Your Personal History Form will be reviewed in the near future, and you will be contacted if you are short-listed for an interview.</b>
            </div>
            <div>
                <b>Note: Please do not contact UNHCR directly regarding the status of this application.</b>
            </div>
            <br />
            <div>
                If you need assistance in completing this form, please contact UNHCR via the email address provided in the vacancy notice or liaise with your nearest UNHCR Office.
            </div>
            <br />
            <br />
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>1. GENERAL INFORMATION </b> (Mandatory to complete) </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.GTPPHGeneralInfoGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.dataPersonalHistoryGeneralInfoRowVersion)
                <div class="panel-body">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.FirstName) <span class="span-required-field">*</span>
                            @Html.EditorFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.FirstName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.LastName)     <span class="span-required-field">*</span>
                            @Html.EditorFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.LastName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.MiddleName)
                            @Html.EditorFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.MiddleName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.MaidenName)
                            @Html.EditorFor(model => model.dataPersonalHistoryGeneralInfoUpdateModel.MaidenName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>2. PERSONAL INFORMATION </b> (Mandatory to complete)</span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.GTPPHPersonalInfoGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.dataPersonalHistoryPersonalInfoRowVersion)
                <div class="panel-body">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.DateOfBirth)  <span class="span-required-field">*</span>
                            @Html.EditorFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.DateOfBirth, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.Gender)   <span class="span-required-field">*</span>
                            @Html.DropDownListFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.Gender, new DropDownList().GTPGenders(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.MaritalStatus)  <span class="span-required-field">*</span>
                            @Html.DropDownListFor(model => model.dataPersonalHistoryPersonalInfoUpdateModel.MaritalStatus, new DropDownList().GTPMaritalStatuses(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>3. CONTACT INFORMATION </b> (Mandatory to complete)   </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryContactInfoUpdateModel.GTPPHContactInfoGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryContactInfoUpdateModel.dataPersonalHistoryContactInfoRowVersion)
                <div class="panel-body">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-12" style="padding-bottom:10px;">
                                <span style="font-weight:bold;color:black;padding-bottom:10px;">Current Address</span>
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressLine1)   <span class="span-required-field">*</span>
                                @Html.TextAreaFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressLine1, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressLine2)
                                @Html.TextAreaFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressLine2, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressLine3)
                                @Html.TextAreaFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressLine3, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                            </div>
                            <div class="div-country-city-container">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressCountryGUID) <span class="span-required-field">*</span>
                                        @Html.DropDownListFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressCountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressCityGUID)  <span class="span-required-field">*</span>
                                        @if (Model.dataPersonalHistoryContactInfoUpdateModel == null)
                                        {
                                            @Html.DropDownListFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressCountryGUID), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressPostalCode)
                                    @Html.EditorFor(model => model.dataPersonalHistoryContactInfoUpdateModel.CurrentAddressPostalCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-12" style="padding-bottom:10px;">
                                <span style="font-weight:bold;color:black;padding-bottom:10px;">Permanent Address</span>
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressLine1)  <span class="span-required-field">*</span>
                                @Html.TextAreaFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressLine1, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressLine2)
                                @Html.TextAreaFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressLine2, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressLine3)
                                @Html.TextAreaFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressLine3, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                            </div>
                            <div class="div-country-city-container">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressCountryGUID)    <span class="span-required-field">*</span>
                                        @Html.DropDownListFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressCountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressCityGUID)  <span class="span-required-field">*</span>
                                        @if (Model.dataPersonalHistoryContactInfoUpdateModel == null)
                                        {
                                            @Html.DropDownListFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressCountryGUID), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressPostalCode)
                                    @Html.EditorFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PermanentAddressPostalCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PreferredContactMethod)
                                    @Html.DropDownListFor(model => model.dataPersonalHistoryContactInfoUpdateModel.PreferredContactMethod, new DropDownList().GTPPreferredContactMethod(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                </div>
                            </div>
                        </div>
                    </div>



                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>4. PHONE NUMBERS </b> (Mandatory to complete)   </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.GTPPHPhoneNumberGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.dataPersonalHistoryPhoneNumberRowVersion)
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-2" style="padding-top:30px">
                            <span style="font-weight:bold;color:black;padding-bottom:10px;">Home Phone</span>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.HomePhoneCountryCode) <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.HomePhoneCountryCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.HomePhoneTelephoneExt)
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.HomePhoneTelephoneExt, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.HomePhoneTelephoneNumber)  <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.HomePhoneTelephoneNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2" style="padding-top:30px">
                            <span style="font-weight:bold;color:black;padding-bottom:10px;">Business Phone</span>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.BusinessPhoneCountryCode)     <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.BusinessPhoneCountryCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.BusinessPhoneExt)
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.BusinessPhoneExt, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.BusinessPhoneTelephoneNumber)   <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.BusinessPhoneTelephoneNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2" style="padding-top:30px">
                            <span style="font-weight:bold;color:black;padding-bottom:10px;">Mobile Phone</span>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.MobilePhoneCountryCode)     <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.MobilePhoneCountryCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.MobilePhoneExt)
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.MobilePhoneExt, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.MobilePhoneTelephoneNumber)   <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.MobilePhoneTelephoneNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.PreferedPhone)     <span class="span-required-field">*</span>
                            @Html.DropDownListFor(model => model.dataPersonalHistoryPhoneNumberUpdateModel.PreferedPhone, new DropDownList().GTPPreferredPhoneNumber(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>5. EMAIL ADDRESSES </b> (Mandatory to complete)   </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.GTPPHEmailAddressGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.dataPersonalHistoryEmailAddressRowVersion)

                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.HomeEmailAddress)   <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.HomeEmailAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.BusinessEmailAddress)   <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.BusinessEmailAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.PreferedEmailAddress)  <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryEmailAddressUpdateModel.PreferedEmailAddress, new DropDownList().GTPPreferredEmailAddress(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>6. NATIONALITY INFORMATIONS </b> (Mandatory to complete)   </span>

                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.GTPPHNationalityInfoGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.dataPersonalHistoryNationalityInfoRowVersion)

                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                Please list all COUNTRIES as applicable
                            </span>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.NationalityAtBirth)  <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.NationalityAtBirth, new DropDownList().GTPNationalities(), "", new { @class = "form-control select2-basic-multiple NationalityAtBirth", style = "width:100%" , multiple = "multiple"})

                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.CurrentNationality)  <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.CurrentNationality, new DropDownList().GTPNationalities(), "", new { @class = "form-control select2-basic-multiple CurrentNationality", style = "width:100%" , multiple = "multiple"})

                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.PermanentResidency)   <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryNationalityInfoUpdateModel.PermanentResidency, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>7.	LETTER OF INTEREST </b> (Mandatory to complete if applying for a specific vacancy announcement) </span>

                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryLetterOfInterestUpdateModel.GTPPHLetterOfInterestGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryLetterOfInterestUpdateModel.dataPersonalHistoryLetterOfInterestRowVersion)

                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-3">
                            <span>
                                Please indicate the position you are applying for
                            </span>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                @Html.EditorFor(model => model.dataPersonalHistoryLetterOfInterestUpdateModel.PositionDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                Please answer the following questions.
                            </span>
                        </div>
                        <div class="col-md-12">
                            <span>
                                1.	How have your achievements and operational experience to date prepared you for this position?
                                Please refer to the job description and to the essential requirements therein.	(1500 characters max)
                            </span>
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.dataPersonalHistoryLetterOfInterestUpdateModel.AchievementsDescription, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 10 })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <span>
                                2.	Please describe any skills and competencies you have, and which may be of particular relevance to this position.
                                (1500 characters max)
                            </span>
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.dataPersonalHistoryLetterOfInterestUpdateModel.SkillsDescription, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 10 })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <span>
                                3.	How does this position align with your career aspirations?	(1000 characters max)
                            </span>
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.dataPersonalHistoryLetterOfInterestUpdateModel.PositionAlignDescription, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 10 })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>8.	WORK EXPERIENCE  </b> (Mandatory to complete, if any)   </span>
                    <br />
                    <span style="color:black">For all work experience, please complete as much information as possible.</span>
                    <div class="pull-right" style="margin-top:-15px;">
                        <input id="btn-add-workExperience" type="button" value="+ Add Work Experience" class="btn btn-default" />
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                Starting with your present position, list in REVERSE ORDER all employment you have had, using a separate block for each work experience. Aslo include service in the armed forces. Two blocks are provided; if you need more space, click the plus button on the top-right of this section.
                            </span>
                        </div>
                    </div>

                    <div id="div_workexperience_container">
                        @if (Model.dataPersonalHistoryWorkExperienceUpdateModel != null && Model.dataPersonalHistoryWorkExperienceUpdateModel.Count > 0)
                        {
                            for (int i = 0; i < Model.dataPersonalHistoryWorkExperienceUpdateModel.Count; i++)
                            {
                                <div class="div_workexperience_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].GTPPHWorkExperienceGUID)
                                    @Html.HiddenFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].dataPersonalHistoryWorkExperienceRowVersion)

                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="workExperienceNumber"><b>Work Experience @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].StartDate)     <span class="span-required-field">*</span>
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].StartDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndDate)   <span class="span-required-field">*</span>
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="dataPersonalHistoryWorkExperienceUpdateModel_0__FullTimeOrPartTime">
                                                        FullTime or PartTime
                                                    </label>                      <span class="span-required-field">*</span>

                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].FullTimeOrPartTime, new DropDownList().GTPFullTimePartTime(Model.dataPersonalHistoryWorkExperienceUpdateModel[i].FullTimeOrPartTime), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Employer)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Employer, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].JobTitle)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].JobTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorName)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfEmployment)   <span class="span-required-field">*</span>
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfEmployment, new DropDownList().GTPEmploymentTypes(Model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfEmployment), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OtherTypeOfEmploymentDesc)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OtherTypeOfEmploymentDesc, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfWorkersSupervised)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfWorkersSupervised, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].NumberOfPersonSupervised)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].NumberOfPersonSupervised, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorEmail)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorEmail, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorPhone)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorPhone, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndingPayRateAmount)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndingPayRateAmount, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Currency)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Currency, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OnGoingJob)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OnGoingJob, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ReasonForLeaving)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ReasonForLeaving, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].DescriptionOfDuties)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].DescriptionOfDuties, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine1)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine1, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine2)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine2, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine3)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine3, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="div-country-city-container">

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCountryGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCountryGUID, new DropDownList().GTPCountries(Model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCountryGUID), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCityGUID)
                                                        @if (Model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCountryGUID != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCountryGUID.Value, Model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCityGUID), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                        }

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressPostalCode)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressPostalCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfBusinessGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfBusinessGUID, new DropDownList().GTPBusinessTypes(Model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfBusinessGUID), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3" style="padding-top:30px;">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNExperience)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNExperience, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].GradeGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].GradeGUID, new DropDownList().StaffGrades(Model.dataPersonalHistoryWorkExperienceUpdateModel[i].GradeGUID), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNIndexNumber)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNIndexNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3" style="padding-top:30px;">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNHCRExperience)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNHCRExperience, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNHCRMsrpID)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNHCRMsrpID, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ContractTypeGUID)       <span class="span-required-field">*</span>
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ContractTypeGUID, new DropDownList().GTPContractTypes(Model.dataPersonalHistoryWorkExperienceUpdateModel[i].ContractTypeGUID), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label for="dataPersonalHistoryWorkExperienceUpdateModel_0__IfOtherContractTypeDesc">
                                                        If ‘Other Arrangement’ please indicate the Type of Arrangement
                                                        (e.g. UN Volunteer, UNOPS ICA, Individual Consultant, Intern, ICNC, Danish Refugee Council etc.)
                                                    </label>
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IfOtherContractTypeDesc, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            }
                        }
                        else
                        {
                            for (int i = 0; i < 1; i++)
                            {
                                <div class="div_workexperience_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].GTPPHWorkExperienceGUID)
                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="workExperienceNumber"><b>Work Experience @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].StartDate)     <span class="span-required-field">*</span>
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].StartDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndDate)   <span class="span-required-field">*</span>
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="dataPersonalHistoryWorkExperienceUpdateModel_0__FullTimeOrPartTime">
                                                        FullTime or PartTime
                                                    </label>                      <span class="span-required-field">*</span>
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].FullTimeOrPartTime, new DropDownList().GTPFullTimePartTime(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Employer)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Employer, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].JobTitle)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].JobTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorName)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfEmployment)   <span class="span-required-field">*</span>
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfEmployment, new DropDownList().GTPEmploymentTypes(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OtherTypeOfEmploymentDesc)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OtherTypeOfEmploymentDesc, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfWorkersSupervised)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfWorkersSupervised, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].NumberOfPersonSupervised)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].NumberOfPersonSupervised, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorEmail)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorEmail, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorPhone)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].SupervisorPhone, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndingPayRateAmount)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EndingPayRateAmount, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Currency)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].Currency, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OnGoingJob)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].OnGoingJob, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ReasonForLeaving)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ReasonForLeaving, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].DescriptionOfDuties)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].DescriptionOfDuties, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine1)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine1, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine2)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine2, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine3)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressLine3, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                            <div class="div-country-city-container">

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCountryGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCityGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressPostalCode)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].EmployerAddressPostalCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfBusinessGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].TypeOfBusinessGUID, new DropDownList().GTPBusinessTypes(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3" style="padding-top:30px;">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNExperience)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNExperience, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].GradeGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].GradeGUID, new DropDownList().StaffGrades(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNIndexNumber)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNIndexNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3" style="padding-top:30px;">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNHCRExperience)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IsUNHCRExperience, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNHCRMsrpID)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].UNHCRMsrpID, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ContractTypeGUID)       <span class="span-required-field">*</span>
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].ContractTypeGUID, new DropDownList().GTPContractTypes(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label for="dataPersonalHistoryWorkExperienceUpdateModel_0__IfOtherContractTypeDesc">
                                                        If ‘Other Arrangement’ please indicate the Type of Arrangement
                                                        (e.g. UN Volunteer, UNOPS ICA, Individual Consultant, Intern, ICNC, Danish Refugee Council etc.)
                                                    </label>
                                                    @Html.EditorFor(model => model.dataPersonalHistoryWorkExperienceUpdateModel[i].IfOtherContractTypeDesc, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>9.	SPECIALIZED TRAINING  </b> (if any)   </span>
                    <br />
                    <div class="pull-right" style="margin-top:-25px;">
                        <input id="btn-add-specializedTraining" type="button" value="+ Add Specialized Training" class="btn btn-default" />
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                Two blocks are provided; if you need more space, click the plus button on the top-right of this section.
                            </span>
                        </div>
                    </div>

                    <div id="div_specializedtraining_container">
                        @if (Model.dataPersonalHistorySpecializedTrainingUpdateModel != null && Model.dataPersonalHistorySpecializedTrainingUpdateModel.Count > 0)
                        {
                            for (int i = 0; i < Model.dataPersonalHistorySpecializedTrainingUpdateModel.Count; i++)
                            {
                                <div class="div_specializedtraining_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].GTPPHSpecializedTrainingGUID)
                                    @Html.HiddenFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].dataPersonalHistorySpecializedTrainingRowVersion)

                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="SpecializedTrainingNumber"><b>Specialized Training @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTitle)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].SchoolName)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].SchoolName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CountryGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(Model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CountryGUID), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })

                                                    @*@Html.DropDownListFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseStartDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseStartDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseEndDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseEndDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTopicAreaDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTopicAreaDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTrainingMethodologyGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTrainingMethodologyGUID, new DropDownList().GTPTrainingMethodologies(Model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTrainingMethodologyGUID), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseDescription)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseDescription, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            }
                        }
                        else
                        {
                            for (int i = 0; i < 1; i++)
                            {
                                <div class="div_specializedtraining_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].GTPPHSpecializedTrainingGUID)
                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="SpecializedTrainingNumber"><b>Specialized Training @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTitle)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].SchoolName)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].SchoolName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CountryGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })

                                                    @*@Html.DropDownListFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-single", style = "width:100%" })*@

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseStartDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseStartDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseEndDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseEndDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTopicAreaDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTopicAreaDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTrainingMethodologyGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseTrainingMethodologyGUID, new DropDownList().GTPTrainingMethodologies(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseDescription)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistorySpecializedTrainingUpdateModel[i].CourseDescription, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            }
                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>10.	EDUCATION </b>(Mandatory to complete even if you have no formal education; if so, please indicate)</span>
                    <br />
                    <div class="pull-right" style="margin-top:-25px;">
                        <input id="btn-add-education" type="button" value="+ Add Education" class="btn btn-default" />
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                This space provides you with an opportunity to indicate that your academic credential or degree was obtained from an educational institution that is recognised or sanctioned by a competent national authority, included in the IAU/UNESCO list.
                            </span>
                            <br />
                            <span>
                                When evaluating academic credentials of applicants, UNHCR is guided by the United Nations Educational, Scientific and Cultural Organization's (UNESCO) listing (referred to as the "UNESCO list - World Guide to Higher Education (WHED)" ) of higher education institutions recognized, and to determine the level of university degree conferred  on candidates since the level of degrees is not always consistent across countries.
                            </span>
                            <br />
                            <span>
                                Please CHECK THE SITE TO CONFIRM YOUR UNIVERSITY IS ACCREDITTED.  <a href="www.whed.net">(website - www.whed.net)</a>
                            </span>
                            <br />
                            <span>
                                <b>Note: </b>You must indicate the main language used for 75% or more of your studies, for each education item you list.
                            </span>
                        </div>
                    </div>

                    <div id="div_education_container">
                        @if (Model.dataPersonalHistoryEducationUpdateModel != null && Model.dataPersonalHistoryEducationUpdateModel.Count > 0)
                        {
                            for (int i = 0; i < Model.dataPersonalHistoryEducationUpdateModel.Count; i++)
                            {
                                <div class="div_education_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistoryEducationUpdateModel[i].GTPPHEducationGUID)
                                    @Html.HiddenFor(model => model.dataPersonalHistoryEducationUpdateModel[i].dataPersonalHistoryEducationRowVersion)

                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="EducationNumber"><b>Education @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].ExactTitleOfDegreeOrCertification)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].ExactTitleOfDegreeOrCertification, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].BegintDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].BegintDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EndDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EndDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainMajorOrTopic)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainMajorOrTopic, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].OtherMajorsOrTopics)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].OtherMajorsOrTopics, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EducationLevelGUID)
                                                    @if (Model.dataPersonalHistoryEducationUpdateModel[i].EducationLevelGUID != null)
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EducationLevelGUID, new DropDownList().GTPEducationLevels(Model.dataPersonalHistoryEducationUpdateModel[i].EducationLevelGUID), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EducationLevelGUID, new DropDownList().GTPEducationLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                    }


                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainLanguageOfStudyGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainLanguageOfStudyGUID, new DropDownList().GTPLanguages(Model.dataPersonalHistoryEducationUpdateModel[i].MainLanguageOfStudyGUID), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-3" style="padding-top:30px;">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].IsEducationCompleted)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].IsEducationCompleted, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].SchoolNameDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].SchoolNameDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="div-country-city-container">


                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CountryGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(Model.dataPersonalHistoryEducationUpdateModel[i].CountryGUID), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CityGUID)
                                                        @if (Model.dataPersonalHistoryEducationUpdateModel[i].CountryGUID != null)
                                                        {
                                                            @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryEducationUpdateModel[i].CountryGUID, Model.dataPersonalHistoryEducationUpdateModel[i].CityGUID), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].Comments)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryEducationUpdateModel[i].Comments, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            for (int i = 0; i < 1; i++)
                            {
                                <div class="div_education_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistoryEducationUpdateModel[i].GTPPHEducationGUID)
                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="EducationNumber"><b>Education @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].ExactTitleOfDegreeOrCertification)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].ExactTitleOfDegreeOrCertification, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].BegintDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].BegintDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EndDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EndDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainMajorOrTopic)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainMajorOrTopic, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].OtherMajorsOrTopics)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].OtherMajorsOrTopics, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EducationLevelGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].EducationLevelGUID, new DropDownList().GTPEducationLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainLanguageOfStudyGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].MainLanguageOfStudyGUID, new DropDownList().GTPLanguages(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-3" style="padding-top:30px;">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].IsEducationCompleted)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].IsEducationCompleted, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].SchoolNameDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryEducationUpdateModel[i].SchoolNameDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="div-country-city-container">


                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CountryGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CityGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryEducationUpdateModel[i].CityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryEducationUpdateModel[i].Comments)
                                                    @Html.TextAreaFor(model => model.dataPersonalHistoryEducationUpdateModel[i].Comments, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>11.	SKILLS</b>(if any) List skills such as computer or technical programs, or other relevant functional ability.</span>
                    <br />
                    <div class="pull-right" style="margin-top:-25px;">
                        <input id="btn-add-skills" type="button" value="+ Add Skills" class="btn btn-default" />
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                Two blocks are provided; if you need more space, click the plus button on the top-right of this section.
                            </span>
                        </div>
                    </div>
                    <div id="div_skills_container">
                        @if (Model.dataPersonalHistorySkillUpdateModel != null && Model.dataPersonalHistorySkillUpdateModel.Count > 0)
                        {
                            for (int i = 0; i < Model.dataPersonalHistorySkillUpdateModel.Count; i++)
                            {
                                <div class="div_skills_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistorySkillUpdateModel[i].GTPPHSkillGUID)
                                    @Html.HiddenFor(model => model.dataPersonalHistorySkillUpdateModel[i].dataPersonalHistorySkillRowVersion)

                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="SkillsNumber"><b>Skill @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillLevelGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillLevelGUID, new DropDownList().GTPSkillLevels(Model.dataPersonalHistorySkillUpdateModel[i].SkillLevelGUID), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillNumberOfYears)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillNumberOfYears, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].Comments)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySkillUpdateModel[i].Comments, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            for (int i = 0; i < 1; i++)
                            {
                                <div class="div_skills_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistorySkillUpdateModel[i].GTPPHSkillGUID)
                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="SkillsNumber"><b>Skill @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillLevelGUID)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillLevelGUID, new DropDownList().GTPSkillLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillNumberOfYears)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySkillUpdateModel[i].SkillNumberOfYears, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistorySkillUpdateModel[i].Comments)
                                                    @Html.EditorFor(model => model.dataPersonalHistorySkillUpdateModel[i].Comments, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>12.	LANGUAGES  </b> (Mandatory to complete)   </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryLanguageUpdateModel.GTPPHLanguageGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryLanguageUpdateModel.dataPersonalHistoryLanguageRowVersion)

                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6" style="padding-bottom:10px;">
                            <span>
                                Indicate your proficiency levels for each language, including for your Mother Tongue.
                            </span>
                            <br />
                            <span>
                                Proficiency levels are listed from A1 to C2, and are based on the Common European Framework of Reference for Languages; the website is below.
                            </span>
                            <br />
                            <span>
                                <a href="https://www.eui.eu/Documents/ServicesAdmin/LanguageCentre/CEF.pdf">https://www.eui.eu/Documents/ServicesAdmin/LanguageCentre/CEF.pdf</a>
                            </span>
                        </div>
                        <div class="col-md-3" style="padding-bottom:10px;">
                            <span>A1 (beginner)</span><br />
                            <span>B1 (pre-intermediate)</span><br />
                            <span>C1 (advanced)</span><br />
                        </div>
                        <div class="col-md-3" style="padding-bottom:10px;">
                            <span>A2 (basic)</span><br />
                            <span>B2 (intermediate)</span><br />
                            <span>C2 (proficient)</span><br />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageGUID)    <span class="span-required-field">*</span>
                                @Html.EditorFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageGUID, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        @*<div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageReadingGUID)   <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageReadingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageSpeakingGUID)     <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageSpeakingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageWritingGUID)    <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageWritingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageListeningGUID)    <span class="span-required-field">*</span>
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.MotherTongueLanguageListeningGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>*@
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageGUID)
                                @Html.EditorFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageGUID, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageReadingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageReadingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageSpeakingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageSpeakingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageWritingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageWritingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageListeningGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageListeningGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageEvaluationDate)

                                @Html.EditorFor(model => model.dataPersonalHistoryLanguageUpdateModel.SecondLanguageEvaluationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageGUID)
                                @Html.EditorFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageGUID, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageReadingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageReadingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageSpeakingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageSpeakingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageWritingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageWritingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageListeningGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageListeningGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageEvaluationDate)
                                @Html.EditorFor(model => model.dataPersonalHistoryLanguageUpdateModel.ThirdLanguageEvaluationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageGUID)
                                @Html.EditorFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageGUID, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageReadingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageReadingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageSpeakingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageSpeakingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageWritingGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageWritingGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageListeningGUID)
                                @Html.DropDownListFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageListeningGUID, new DropDownList().GTPLanguageLevels(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageEvaluationDate)
                                @Html.EditorFor(model => model.dataPersonalHistoryLanguageUpdateModel.FourthLanguageEvaluationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>13.	LICENSES AND CERTIFICATIONS</b>(if any)</span>
                    <br />
                </div>
                <div class="pull-right" style="margin-top:-25px;">
                    <input id="btn-add-licencesAndCertificates" type="button" value="+ Add Licences / Certificates" class="btn btn-default" />
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                Two blocks are provided; if you need more space, click the plus button on the top-right of this section.
                            </span>
                        </div>
                    </div>
                    <div id="div_licences_container">
                        @if (Model.dataPersonalHistoryLicenceAndCertificateUpdateModel != null && Model.dataPersonalHistoryLicenceAndCertificateUpdateModel.Count > 0)
                        {
                            for (int i = 0; i < Model.dataPersonalHistoryLicenceAndCertificateUpdateModel.Count; i++)
                            {
                                <div class="div_licences_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].GTPPHLicenceGUID)
                                    @Html.HiddenFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].dataPersonalHistoryLicenceAndCertificateRowVersion)

                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="LicenceNumber"><b>Licence / Certificate @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssueDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssueDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceExpirationDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceExpirationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="div-country-city-container">


                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CountryGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(Model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CountryGUID), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })

                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CityGUID)
                                                        @if (Model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CountryGUID == null)
                                                        {
                                                            @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CountryGUID.Value, Model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CityGUID), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                        }


                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].IsLicenceRenewalInProgres)
                                                    @if (Model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].IsLicenceRenewalInProgres != null)
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].IsLicenceRenewalInProgres, new DropDownList().GTPYesNo(Model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].IsLicenceRenewalInProgres.Value), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].IsLicenceRenewalInProgres, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                    }
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceNumber)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssuedBy)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssuedBy, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            for (int i = 0; i < 1; i++)
                            {
                                <div class="div_licences_content">
                                    @Html.HiddenFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].GTPPHLicenceGUID)
                                    <div class="col-md-12" style="border:solid;border-color:#d2d2d2">
                                        <div class="row">
                                            <div class="panel-heading" style="background-color:#d2d2d2;border-color:#d2d2d2">
                                                <span style="color:black" id="LicenceNumber"><b>Licence / Certificate @{int res = i + 1; }@res </b>  </span>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-top:10px;">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssueDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssueDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceExpirationDate)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceExpirationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceDescription)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="div-country-city-container">


                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CountryGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })

                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CityGUID)
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].CityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].IsLicenceRenewalInProgres)
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].IsLicenceRenewalInProgres, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceNumber)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssuedBy)
                                                    @Html.EditorFor(model => model.dataPersonalHistoryLicenceAndCertificateUpdateModel[i].LicenceIssuedBy, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>14.	THREE PROFESSIONAL REFERENCES </b> (Mandatory to complete)   </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.GTPPHProfReferenceGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.dataPersonalHistoryProfessionalReferenceRowVersion)

                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                A Professional reference is a recommendation from a person who can vouch for your qualifications for a job.
                                <br />
                                This should not be the same person you listed as your supervisor for any of your work experiences.
                            </span>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-4">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceName)    <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceTitle)    <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceEmployer)     <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceEmployer, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                @*<div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceCountryCode)     <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceCountryCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>*@
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceTelephoneNumber)    <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceTelephoneNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceExt)
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceExt, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceEmailAddress)  
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceEmailAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressLine1)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressLine1, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressLine2)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressLine2, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressLine3)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressLine3, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="div-country-city-container">


                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCountryGUID)
                                            @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCountryGUID, new DropDownList().GTPCountries(Model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCountryGUID), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCityGUID)
                                            @if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel == null)
                                            {
                                                @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                            }
                                            else
                                            {
                                                if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCountryGUID != null)
                                                {
                                                    if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCityGUID != null)
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCountryGUID.Value,Model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCityGUID.Value), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCountryGUID.Value), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                    }



                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressPostalCode)
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.FirstReferenceAddressPostalCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceName)         <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceTitle)       <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceEmployer)     <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceEmployer, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                @*<div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceCountryCode)     <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceCountryCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>*@
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceTelephoneNumber)     <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceTelephoneNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceExt)
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceExt, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceEmailAddress) 
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceEmailAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressLine1) 
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressLine1, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressLine2)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressLine2, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressLine3)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressLine3, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="div-country-city-container">


                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCountryGUID)
                                            @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCityGUID)
                                            @if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel == null)
                                            {
                                                @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                            }
                                            else
                                            {
                                                if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCountryGUID != null)
                                                {
                                                    if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCityGUID != null)
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCountryGUID.Value, Model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCityGUID.Value), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCountryGUID.Value), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                    }

                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressPostalCode)
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.SecondReferenceAddressPostalCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceName)       <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceTitle)      <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceEmployer)      <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceEmployer, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                @*<div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceCountryCode)     <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceCountryCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>*@
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceTelephoneNumber)     <span class="span-required-field">*</span>
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceTelephoneNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceExt)
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceExt, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceEmailAddress)
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceEmailAddress, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressLine1)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressLine1, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressLine2)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressLine2, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressLine3)
                                        @Html.TextAreaFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressLine3, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                                    </div>
                                </div>
                                <div class="div-country-city-container">

                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCountryGUID)
                                            @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCountryGUID, new DropDownList().GTPCountries(), "", new { @class = "form-control select2-basic-search this-country-ddl", style = "width:100%" })
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCityGUID)
                                            @if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel == null)
                                            {
                                                @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                            }
                                            else
                                            {

                                                if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCountryGUID != null)
                                                {
                                                    if (Model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCityGUID != null)
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCountryGUID.Value, Model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCityGUID.Value), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCityGUID, new DropDownList().GTPCities(Model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCountryGUID.Value), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })
                                                    }
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressCityGUID, new DropDownList().Empty(), "", new { @class = "form-control select2-basic-search this-city-ddl", style = "width:100%" })

                                                }
                                            }
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressPostalCode)
                                        @Html.EditorFor(model => model.dataPersonalHistoryProfessionalReferenceUpdateModel.ThirdReferenceAddressPostalCode, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>15.	QUESTIONNAIRE </b> (Mandatory to complete)   </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.GTPPHQuestionnaireGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.dataPersonalHistoryQuestionnaireRowVersion)

                <div class="panel-body">
                    <div class="row" style="padding-bottom:10px;">
                        <div class="col-md-12">
                            <span>1.	Are you now, or have you ever been, a permanent civil servant in your government's employ? If the answer is yes, please provide the dates below.</span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.FirstQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.FirstQuestionAnswerFromDate)
                            @Html.EditorFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.FirstQuestionAnswerFromDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.FirstQuestionAnswerToDate)
                            @Html.EditorFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.FirstQuestionAnswerToDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-12">
                            <span>2.	Have you ever been arrested, indicted or summoned in court as a defendant in a criminal proceeding, or convicted, fined or imprisoned for the violation of any law (excluding minor traffic violations)? If the answer is yes, please provide details below.</span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SecondQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                        <div class="col-md-9">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SecondQuestionAnswerDetails)
                            @Html.TextAreaFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SecondQuestionAnswerDetails, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>3.	Have you ever been the subject of an investigation into allegations of misconduct?</span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.ThirdQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>4.	Have you ever been subject to disciplinary proceedings or measures?</span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.FourthQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>5.	Would you accept employment for less than six months?</span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.FifthQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>6.	Entry in United Nations service might require assignment to any area of the world in which United Nations might have responsibilities. Are there any limitations on your ability to engage in  your prospective field of work? If yes, please add details below.</span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SixthQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                        <div class="col-md-9">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SixthQuestionAnswerDetails)
                            @Html.TextAreaFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SixthQuestionAnswerDetails, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>7.	Entry in United Nations service might require assignment to any area of the world in which the United Nations might have responsibilities. Are there any limitations on your engage in all travel? If the answer is yes, please add details below.</span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SeventhQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                        <div class="col-md-9">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SeventhQuestionAnswerDetails)
                            @Html.TextAreaFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.SeventhQuestionAnswerDetails, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>8.	Do you have a spouse or any children? If yes, please provide below the names, dates of birth and the relationships.</span>
                            <input id="btn-add-relative" type="button" class="btn btn-primary" value="+ Add More" />

                        </div>
                        <div id="div_spousechildern_container" class="col-md-12">
                            @if (Model.dataPersonalHistoryRelativeUpdateModel != null && Model.dataPersonalHistoryRelativeUpdateModel.Count > 0)
                            {
                                for (int i = 0; i < Model.dataPersonalHistoryRelativeUpdateModel.Count; i++)
                                {
                                    <div class="div_spousechildern_content">
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].GTPPHRelativeGUID)
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].dataPersonalHistoryRelativeRowVersion)
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].Active)
                                        <div class="row">
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeName)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeBirthDate)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeBirthDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeRelationship)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeRelationship, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                        </div>
                                    </div>

                                }
                            }
                            else
                            {
                                for (int i = 0; i < 1; i++)
                                {
                                    <div class="div_spousechildern_content">
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].GTPPHRelativeGUID)
                                        <div class="row">
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeName)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeBirthDate)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeBirthDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeRelationship)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeUpdateModel[i].RelativeRelationship, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                        </div>
                                    </div>

                                }
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>
                                9.	Have you taken up legal permanent residence status in any country other than that of your nationality?
                                <br />
                                If the answer is yes, please indicate the country.
                            </span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.NinthQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                        <div class="col-md-9">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.NinthQuestionAnswerDetails)
                            @Html.TextAreaFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.NinthQuestionAnswerDetails, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>
                                10.	State any other relevant facts. Include information regarding any residence outside the country of your nationality.
                            </span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.TenthQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                        <div class="col-md-9">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.TenthQuestionAnswerDetails)
                            @Html.TextAreaFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.TenthQuestionAnswerDetails, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>
                                11.	Have you taken any legal steps towards changing your present nationality?
                                <br />
                                If the answer is yes, please add details below.
                            </span>
                        </div>
                        <div class="col-md-3" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.ElevenQuestionAnswer, new DropDownList().GTPYesNo(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })

                        </div>
                        <div class="col-md-9">
                            @Html.LabelFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.ElevenQuestionAnswerDetails)
                            @Html.TextAreaFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.ElevenQuestionAnswerDetails, new { @class = "form-control group-control ", autocomplete = "off", @style = "width:100%;", @rows = 2 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>
                                12.	Are any of your relatives, or is your spouse employed by a UN organization or Specialized Agency?
                                <br />
                                If the answer is yes, please indicate Name, Relationship, and Name of International Organization.
                                <input id="btn-add-relativeWorker" type="button" class="btn btn-primary" value="+ Add More" />

                            </span>
                        </div>
                        <div id="div_relativeWorker_container" class="col-md-12">
                            @if (Model.dataPersonalHistoryRelativeWorkerUpdateModel != null && Model.dataPersonalHistoryRelativeWorkerUpdateModel.Count > 0)
                            {
                                for (int i = 0; i < Model.dataPersonalHistoryRelativeWorkerUpdateModel.Count; i++)
                                {
                                    <div class="div_relativeWorker_content">
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].GTPPHRelativeWorkerGUID)
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].dataPersonalHistoryRelativeWorkerRowVersion)
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].Active)

                                        <div class="row">
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeName)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeRelationship)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeRelationship, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeOrganization)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeOrganization, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                        </div>
                                    </div>

                                }
                            }
                            else
                            {
                                for (int i = 0; i < 1; i++)
                                {
                                    <div class="div_relativeWorker_content">
                                        @Html.HiddenFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].GTPPHRelativeWorkerGUID)
                                        <div class="row">
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeName)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeRelationship)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeRelationship, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeOrganization)
                                                @Html.EditorFor(model => model.dataPersonalHistoryRelativeWorkerUpdateModel[i].RelativeOrganization, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                            </div>
                                        </div>
                                    </div>

                                }
                            }

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>
                                13.	How did you hear about this vacancy?
                            </span>
                        </div>
                        <div class="col-md-12" style="padding-top:26px;">
                            @Html.DropDownListFor(model => model.dataPersonalHistoryQuestionnaireUpdateModel.ThirteenQuestionAnswer, new DropDownList().GTPVacancyHears(), "", new { @class = "form-control select2-basic-search", style = "width:100%" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="panel panel-primary" style="border-color:#bfdcee">
                <div class="panel-heading" style="background-color:#bfdcee;border-color:#bfdcee">
                    <span style="color:black"><b>CONFIRMATION AND CONSENT </b> (Mandatory to complete)   </span>
                </div>
                @Html.HiddenFor(model => model.dataPersonalHistoryConfirmationAndConsentUpdateModel.GTPPHConfirmationConsentGUID)
                @Html.HiddenFor(model => model.dataPersonalHistoryConfirmationAndConsentUpdateModel.dataPersonalHistoryConfirmationAndConsentRowVersion)
                @Html.HiddenFor(model => model.dataPersonalHistoryConfirmationAndConsentUpdateModel.ConfirmationDate)
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <span>
                                To complete your application you are required to confirm the following:
                            </span>
                            <br />
                            <br />
                            <span>
                                <b>
                                    ACCURACY OF CONTENT:
                                </b>
                                The content of this application is accurate and contains no false information;
                            </span>
                            <br />
                            <span>
                                <b>
                                    EDUCATION INFORMATION
                                </b>
                                - You give your full consent and authorize the Office of the United Nations High Commissioner for Refugees (UNHCR) to contact each of your educational institutions listed in this  application for the purpose of conducting required reference checks with regard to your educational background, and to confirm the diploma or degrees you have received at each educational institution.
                                You also authorize the mentioned educational institutions to provide requested information directly to UNHCR. Any information received from your educational institutions will be treated with due regard to all confidentiality requirements; and,
                            </span>
                            <br />
                            <span>
                                <b>WORK EXPERIENCE</b> - You are aware UNHCR will contact former and current employers, if applicable, regarding Work Experience, as well as check your three Professional References.
                            </span>
                            <br />
                            <br />
                            <span>
                                <b>Finally, you understand that submission of false information or misrepresentation and/or submission of falsified documentation constitutes serious misconduct for which severe disciplinary sanctions can be imposed.</b>
                            </span>
                        </div>
                        <div class="col-md-12">
                            I consent to all of the foregoing as part of the process of evaluation of my application.
                            @Html.EditorFor(model => model.dataPersonalHistoryConfirmationAndConsentUpdateModel.IsConfirmedByUser, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div id="GTPApplicationFormControls" class="form-group form-footer">
                @*<input class="btn btn-primary SLAME ActionControl" data-submittype="Create" onclick="SubmitForm(this); " type="submit" disabled="disabled" value="Create Form">*@

                @if (Model.dataPersonalHistoryGeneralInfoUpdateModel.GTPPHGeneralInfoGUID == Guid.Empty)
                {
                    <input class="btn btn-primary SLAME ActionControl" data-submittype="Create" onclick="SubmitForm(this);" type="submit" disabled="disabled" value="Create Form">
                }
                else
                {
                    <input class="btn btn-primary SLAME ActionControl" data-submittype="Update" onclick="SubmitForm(this); " type="submit" disabled="disabled" value="Update Form">
                }

            </div>
        </div>
    </div>

}

<script type="text/javascript">
    $(function () {
        InitPlugins('#PersonalHistoryForm');
        debugger;
        if ($('.ClientNationalityAtBirth').val() != undefined) {
            $('.NationalityAtBirth').val($('.ClientNationalityAtBirth').val().split(",")).trigger('change');
        }
        if ($('.ClientCurrentNationality').val() != undefined) {
            $('.CurrentNationality').val($('.ClientCurrentNationality').val().split(",")).trigger('change');
        }



        $('#btn-add-workExperience').click(function (e) {
            e.preventDefault();
            $("div.div_workexperience_content:first").clone().insertAfter("div.div_workexperience_content:last");
            //re-order
            var total = $('.div_workexperience_content').length;
            var listOfselect2 = [];
            $.each($("div.div_workexperience_content"), function (idx, elm) {
                var inputes = $(elm).find(':input');
                debugger;
                var numbering = $(elm).find('#workExperienceNumber');
                var newNumber = idx + 1;
                $(numbering).html($(numbering).html().replace('1', newNumber.toString()));
                $.each(inputes, function (inputIdx, inputElm) {
                    debugger;
                    var inputID = $(inputElm).attr('id');
                    if (inputID == undefined) {
                        return;
                    }
                    var inputName = $(inputElm).attr('name');
                    var newID = inputID.replace("_0__", "_" + idx + "__");
                    var newName = inputName.replace("[0]", "[" + idx + "]");
                    $(inputElm).attr('id', newID);
                    $(inputElm).attr('name', newName);
                    if (total == newNumber) {
                        $(inputElm).val('');
                        if ($(inputElm).hasClass("select2-hidden-accessible")) {
                            listOfselect2.push($(inputElm));
                            $(inputElm).select2();
                            $(inputElm).val(null).trigger('change');
                        }
                    }
                });
            });
            InitPlugins('#PersonalHistoryForm');
            $.each(listOfselect2, function (idx, elem) {
                debugger;
                $(elem).parents('.form-group').children().last().remove();

            });
        });
        $('#btn-add-specializedTraining').click(function (e) {
            e.preventDefault();
            $("div.div_specializedtraining_content:first").clone().insertAfter("div.div_specializedtraining_content:last");
            var total = $('.div_specializedtraining_content').length;
            var listOfselect2 = [];
            $.each($("div.div_specializedtraining_content"), function (idx, elm) {
                var inputes = $(elm).find(':input');
                var numbering = $(elm).find('#SpecializedTrainingNumber');
                var newNumber = idx + 1;
                $(numbering).html($(numbering).html().replace('1', newNumber.toString()));
                $.each(inputes, function (inputIdx, inputElm) {
                    debugger;
                    var inputID = $(inputElm).attr('id');
                    if (inputID == undefined) {
                        return;
                    }
                    var inputName = $(inputElm).attr('name');
                    var newID = inputID.replace("_0__", "_" + idx + "__");
                    var newName = inputName.replace("[0]", "[" + idx + "]");
                    $(inputElm).attr('id', newID);
                    $(inputElm).attr('name', newName);
                    if (total == newNumber) {
                        $(inputElm).val('');
                        if ($(inputElm).hasClass("select2-hidden-accessible")) {
                            listOfselect2.push($(inputElm));
                            $(inputElm).select2();
                            $(inputElm).val(null).trigger('change');
                        }

                    }
                });
            });
            $.each(listOfselect2, function (idx, elem) {
                debugger;
                $(elem).parents('.form-group').children().last().remove();

            });
        });
        $('#btn-add-education').click(function (e) {
            e.preventDefault();
            $("div.div_education_content:first").clone().insertAfter("div.div_education_content:last");
            var total = $('.div_education_content').length;
            var listOfselect2 = [];
            $.each($("div.div_education_content"), function (idx, elm) {
                var inputes = $(elm).find(':input');
                var numbering = $(elm).find('#EducationNumber');
                var newNumber = idx + 1;
                $(numbering).html($(numbering).html().replace('1', newNumber.toString()));
                $.each(inputes, function (inputIdx, inputElm) {
                    debugger;
                    var inputID = $(inputElm).attr('id');
                    if (inputID == undefined) {
                        return;
                    }
                    var inputName = $(inputElm).attr('name');
                    var newID = inputID.replace("_0__", "_" + idx + "__");
                    var newName = inputName.replace("[0]", "[" + idx + "]");
                    $(inputElm).attr('id', newID);
                    $(inputElm).attr('name', newName);
                    if (total == newNumber) {
                        $(inputElm).val('');
                        if ($(inputElm).hasClass("select2-hidden-accessible")) {
                            listOfselect2.push($(inputElm));
                            $(inputElm).select2();
                            $(inputElm).val(null).trigger('change');
                        }

                    }
                });
            });
            $.each(listOfselect2, function (idx, elem) {
                debugger;
                $(elem).parents('.form-group').children().last().remove();

            });
        });
        $('#btn-add-skills').click(function (e) {
            e.preventDefault();
            $("div.div_skills_content:first").clone().insertAfter("div.div_skills_content:last");
            //re-order
            var total = $('.div_skills_content').length;

            var listOfselect2 = [];
            $.each($("div.div_skills_content"), function (idx, elm) {
                var numbering = $(elm).find('#SkillsNumber');
                var newNumber = idx + 1;
                $(numbering).html($(numbering).html().replace('1', newNumber.toString()));
                var inputes = $(elm).find(':input');


                $.each(inputes, function (inputIdx, inputElm) {
                    var inputID = $(inputElm).attr('id');
                    if (inputID == undefined) {
                        return;
                    }
                    var inputName = $(inputElm).attr('name');
                    var newID = inputID.replace("_0__", "_" + idx + "__");
                    var newName = inputName.replace("[0]", "[" + idx + "]");
                    $(inputElm).attr('id', newID);
                    $(inputElm).attr('name', newName);

                    if (total == newNumber) {
                        $(inputElm).val('');
                        if ($(inputElm).hasClass("select2-hidden-accessible")) {
                            listOfselect2.push($(inputElm));
                            $(inputElm).select2();
                            $(inputElm).val(null).trigger('change');
                        }

                    }

                });
            });
            InitPlugins('#PersonalHistoryForm');

            $.each(listOfselect2, function (idx, elem) {
                debugger;
                $(elem).parents('.form-group').children().last().remove();

            });


        });
        $('#btn-add-licencesAndCertificates').click(function (e) {
            e.preventDefault();
            $("div.div_licences_content:first").clone().insertAfter("div.div_licences_content:last");
            //re-order
            var total = $('.div_licences_content').length;
            var listOfselect2 = [];
            $.each($("div.div_licences_content"), function (idx, elm) {
                var inputes = $(elm).find(':input');
                var numbering = $(elm).find('#LicenceNumber');
                var newNumber = idx + 1;
                $(numbering).html($(numbering).html().replace('1', newNumber.toString()));
                $.each(inputes, function (inputIdx, inputElm) {
                    debugger;
                    var inputID = $(inputElm).attr('id');
                    if (inputID == undefined) {
                        return;
                    }
                    var inputName = $(inputElm).attr('name');
                    var newID = inputID.replace("_0__", "_" + idx + "__");
                    var newName = inputName.replace("[0]", "[" + idx + "]");
                    $(inputElm).attr('id', newID);
                    $(inputElm).attr('name', newName);
                    if (total == newNumber) {
                        $(inputElm).val('');
                        if ($(inputElm).hasClass("select2-hidden-accessible")) {
                            listOfselect2.push($(inputElm));
                            $(inputElm).select2();
                            $(inputElm).val(null).trigger('change');
                        }

                    }

                });
                InitPlugins('#PersonalHistoryForm');

                $.each(listOfselect2, function (idx, elem) {
                    debugger;
                    $(elem).parents('.form-group').children().last().remove();

                });
            });
        });
        $('#btn-add-relative').click(function (e) {
            e.preventDefault();
            $("div.div_spousechildern_content:first").clone().insertAfter("div.div_spousechildern_content:last");
            //re-order
            var total = $('.div_spousechildern_content').length;
            var listOfselect2 = [];
            $.each($("div.div_spousechildern_content"), function (idx, elm) {
                var inputes = $(elm).find(':input');
                var newNumber = idx + 1;
                debugger;
                $.each(inputes, function (inputIdx, inputElm) {
                    debugger;
                    var inputID = $(inputElm).attr('id');
                    if (inputID == undefined) {
                        return;
                    }
                    var inputName = $(inputElm).attr('name');
                    var newID = inputID.replace("_0__", "_" + idx + "__");
                    var newName = inputName.replace("[0]", "[" + idx + "]");
                    $(inputElm).attr('id', newID);
                    $(inputElm).attr('name', newName);
                    if (total == newNumber) {
                        $(inputElm).val('');
                        if ($(inputElm).hasClass("select2-hidden-accessible")) {
                            listOfselect2.push($(inputElm));
                            $(inputElm).select2();
                            $(inputElm).val(null).trigger('change');
                        }

                    }
                });
            });
            InitPlugins('#PersonalHistoryForm');

            $.each(listOfselect2, function (idx, elem) {
                debugger;
                $(elem).parents('.form-group').children().last().remove();

            });
            //
        });
        $('#btn-add-relativeWorker').click(function (e) {
            e.preventDefault();
            //
            $("div.div_relativeWorker_content:first").clone().insertAfter("div.div_relativeWorker_content:last");
            //re-order
            var total = $('.div_relativeWorker_content').length;
            var listOfselect2 = [];
            $.each($("div.div_relativeWorker_content"), function (idx, elm) {
                var inputes = $(elm).find(':input');
                var newNumber = idx + 1;
                debugger;
                $.each(inputes, function (inputIdx, inputElm) {
                    debugger;
                    var inputID = $(inputElm).attr('id');
                    if (inputID == undefined) {
                        return;
                    }
                    var inputName = $(inputElm).attr('name');
                    var newID = inputID.replace("_0__", "_" + idx + "__");
                    var newName = inputName.replace("[0]", "[" + idx + "]");
                    $(inputElm).attr('id', newID);
                    $(inputElm).attr('name', newName);
                    if (total == newNumber) {
                        $(inputElm).val('');
                        if ($(inputElm).hasClass("select2-hidden-accessible")) {
                            listOfselect2.push($(inputElm));
                            $(inputElm).select2();
                            $(inputElm).val(null).trigger('change');
                        }

                    }
                });
            });
            InitPlugins('#PersonalHistoryForm');
            $.each(listOfselect2, function (idx, elem) {
                debugger;
                $(elem).parents('.form-group').children().last().remove();

            });
        });

        $(document).on('select2:select', '.this-country-ddl', function (e) {
            e.preventDefault();
            var val = $(this).val();
            var targetDDL = $(this).parents('.div-country-city-container').find('.this-city-ddl');
            getCitiesByCountry(val, targetDDL);
        });
        //$('.this-country-ddl').on('select2:select', function (e) {

        //})

        function getCitiesByCountry(countryGUID, targetDDL) {
            $(targetDDL).empty();
            $.ajax({
                type: "Get",
                url: "/GTP/Applications/GetCitiesByCountry",
                data: { CountryGUID: countryGUID },
                success: function (data) {
                    if ($(targetDDL).attr('data-noemptyselection') == null) {
                        (targetDDL).append('<option></option');
                    }
                    $.each(data, function (index, obj) {
                        if (obj.Group != null) {
                            $(targetDDL).append('<option value="' + obj.Value + '" data-Group="' + obj.Group.Name + '">' + obj.Text + '</option>');
                        } else {
                            $(targetDDL).append('<option value="' + obj.Value + '">' + obj.Text + '</option>');
                        }
                    });
                    $(targetDDL).next().find('.select2-selection').removeClass('LoadingDDL');
                    $(targetDDL).prop("disabled", false);
                }
            });
        }
    })
</script>
